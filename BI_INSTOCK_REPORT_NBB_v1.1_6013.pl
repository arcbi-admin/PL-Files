use DBI;
use DBD::Oracle qw(:ora_types);
use Excel::Writer::XLSX;
use Excel::Writer::XLSX::Utility;
use Text::CSV_XS;
use Win32::Job;
use Getopt::Long;
use IO::File;
use MIME::QuotedPrint;
use MIME::Base64;
use Mail::Sendmail;
use Date::Calc qw( Today Add_Delta_Days Month_to_Text);

($year,$month,$day) = Today();
$month_to_text = Month_to_Text($month);

 # my $mms_job = Win32::Job->new;
	# $mms_job->spawn( "cmd" , q{cmd /C "java ecp_markdown pause"});
	# $mms_job->run(1500);

my $workbook = Excel::Writer::XLSX->new("INSTOCK_REPORT_NBB_v1.1.xlsx");
my $bold = $workbook->add_format( bold => 1, size => 14 );
my $bold1 = $workbook->add_format( bold => 1, size => 11 );
my $bold2 = $workbook->add_format( size => 11 );
my $border1 = $workbook->add_format( border => 1, align => 'center', valign => 'right', size => 10, num_format => 3 );
my $border2 = $workbook->add_format( border => 1, align => 'center', valign => 'vcenter', text_wrap =>1, size => 10, shrink => 1 );
my $code = $workbook->add_format( border => 1, align => 'center', valign => 'vcenter', size => 10 );
my $desc = $workbook->add_format( border => 1, align => 'left', valign => 'vcenter', size => 10 );
my $ponkan = $workbook->set_custom_color( 53, 254, 238, 230);
my $abo = $workbook->set_custom_color( 16, 220, 218, 219);
my $sky = $workbook->set_custom_color( 12, 205, 225, 255);
my $pula = $workbook->set_custom_color( 10, 255, 189, 189);
my $lumot = $workbook->set_custom_color( 17, 196, 189, 151);
my $comp = $workbook->add_format( border => 1, align => 'center', valign => 'vcenter', size => 10,  bg_color => $lumot, bold => 1 );
my $all = $workbook->add_format( border => 1, align => 'center', valign => 'vcenter', size => 10,  bg_color => $abo, bold => 1 );
my $headN = $workbook->add_format( border => 1, align => 'center', valign => 'center', size => 11, num_format => 9, bg_color => $abo, bold => 1 );
my $headD = $workbook->add_format( border => 1, align => 'center', valign => 'right', size => 10, num_format => 9, bg_color => $abo, bold => 1 );
my $headNum = $workbook->add_format( border => 1, align => 'center', valign => 'right', size => 10, num_format => 3, bg_color => $abo, bold => 1 );
my $headNumber = $workbook->add_format( border => 1, align => 'center', valign => 'right', size => 11, num_format => 3, bg_color => $abo, bold => 1 );
my $head = $workbook->add_format( border => 1, align => 'center', valign => 'right', size => 11, num_format => 9, bg_color => $abo, bold => 1 );
my $subhead = $workbook->add_format( border => 1, align => 'center', valign => 'vcenter', size => 10, bg_color => $ponkan, bold => 1 );
my $bodyN = $workbook->add_format( border => 1, align => 'center', valign => 'vcenter', size => 10, bg_color => $sky, num_format => 9,  bold => 1);
my $bodyNum = $workbook->add_format( border => 1, align => 'center', valign => 'right', size => 10, bg_color => $sky, num_format => 3,  bold => 1);
my $body = $workbook->add_format( border => 1, align => 'center', valign => 'right', size => 10, bg_color => $sky, num_format => 9,  bold => 1);
my $subt = $workbook->add_format( border => 1, align => 'center', valign => 'right', size => 10, num_format => 9);
my $down = $workbook->add_format( border => 1, align => 'center', valign => 'vcenter', size => 10, num_format => 9, bg_color => $pula );

printf "IN STOCK REPORT, NBB \n";

&generate_csv;

&new_sheet($sheet = "ByDept-Store", $comment = "STORES");	
&s1;
&s2;
&s3;
&s8;
&s10;
&s11;
&tg1;
&tg2;
&tg3;
&tg4;
&tg5;
&tg6;
&f2;
&f3;
&f6;
#&f13;
&h1;
&h3;
&h4;
&h5;
#&h8;
&h9;
&h10;
&calc_tot_region($total_label = 'TOTAL VISAYAS', $end = 0);

&s4;
&s5;
&s6;
&s7;
&s9;
&s12;
&s13a;
&s13b;
&tg7;
&f4;
&h2;
&h12;
&h13;
&calc_tot_region($total_label = 'TOTAL LUZON', $end = 0);
&calc_tot_region($total_label = 'TOTAL', $end = 1);

# &new_sheet($sheet = "ByDept-Whse", $comment = "WAREHOUSE");
# &w80001;
# &w80011;
# &w80031;
# &w80041;
# &w80051;
# &w80061;
# &calc_tot_region($total_label = 'TOTAL WHSE', $end = 0);

$workbook->close();
$dbh_csv->disconnect;

&mail1;	
&mail2;	
&mail3;	

exit;
 
#================================= FUNCTIONS ==================================#

sub s1 { $store = "S1"; $loc = "'2001'"; $vis = 7; $col = 7; $test = 1; &heading;	&call_div;	}
sub s2 { $store = "S2"; $loc = "'2002'"; &call_div;	}
sub s3 { $store = "S3"; $loc = "'2003'"; &call_div;	}
sub s4 { $store = "S4"; $loc = "'2004'"; &call_div;	}
sub s5 { $store = "S5"; $loc = "'2005'"; &call_div;	}
sub s6 { $store = "S6"; $loc = "'2006'"; &call_div;	}
sub s7 { $store = "S7"; $loc = "'2007'"; &call_div;	}
sub s8 { $store = "S8"; $loc = "'2008'"; &call_div;	}
sub s9 { $store = "S9"; $loc = "'2009'"; &call_div;	}
sub s10 { $store = "S10"; $loc = "'2010'"; &call_div;	}
sub s11 { $store = "S11"; $loc = "'2011'"; &call_div;	}
sub s12 { $store = "S12"; $loc = "'2012'"; &call_div;	}
sub s13a { $store = "2013"; $loc = "'2013'"; &call_div;	}
sub s13b { $store = "2223"; $loc = "'2223'"; &call_div;	}
sub tg1 { $store = "TG1"; $loc = "'3001'"; &call_div;	}
sub tg2 { $store = "TG2"; $loc = "'3002'"; &call_div;	}
sub tg3 { $store = "TG3"; $loc = "'3003'"; &call_div;	}
sub tg4 { $store = "TG4"; $loc = "'3004'"; &call_div;	}
sub tg5 { $store = "TG5"; $loc = "'3005'"; &call_div;	}
sub tg6 { $store = "TG6"; $loc = "'3006'"; &call_div;	}
sub tg7 { $store = "TG7"; $loc = "'3007'"; &call_div;	}
sub f2 { $store = "F2"; $loc = "'4002'"; &call_div;	}
sub f3 { $store = "F3"; $loc = "'4003'"; &call_div;	}
sub f4 { $store = "F4"; $loc = "'4004'"; &call_div;	}
sub f6 { $store = "F6"; $loc = "'3009'"; &call_div;	}
sub f13 { $store = "F13"; $loc = "'3010'"; &call_div;	}
sub h1 { $store = "H1"; $loc = "'6001'"; &call_div;	}
sub h2 { $store = "H2"; $loc = "'6002'"; &call_div;	}
sub h3 { $store = "H3"; $loc = "'6003'"; &call_div;	}
sub h4 { $store = "H4"; $loc = "'6004'"; &call_div;	}
sub h5 { $store = "H5"; $loc = "'6005'"; &call_div;	}
sub h8 { $store = "H8"; $loc = "'6008'"; &call_div;	}
sub h9 { $store = "H9"; $loc = "'6009'"; &call_div;	}
sub h10 { $store = "H10"; $loc = "'6010'"; &call_div;	}
sub h12 { $store = "H12"; $loc = "'6012'"; &call_div;	}
sub h13 { $store = "H13"; $loc = "'6013'"; &call_div;	}
sub w80001 { $store = "Central WH"; $loc = "'80001'"; $vis = 7; $col = 7; $test = 1; &heading;	&call_div;	}
sub w80011 { $store = "J-KING"; $loc = "'80011'"; &call_div;	}
sub w80031 { $store = "NFA"; $loc = "'80031'"; &call_div;	}
sub w80041 { $store = "Procter"; $loc = "'80041'"; &call_div;	}
sub w80051 { $store = "Pagsabungan"; $loc = "'80051'"; &call_div;	}
sub w80061 { $store = "Schenker"; $loc = "'80061'"; &call_div;	}


sub call_div {

$a += 6, $ds = 0, $e += 6, $count=6, $counter=0;

$worksheet->merge_range( $a-2, $col, $a-2, $col+2, $store, $subhead );
$worksheet->set_column( $col, $col+1, 7 );
$worksheet->set_column( $col+2, $col+2, 5 );

foreach my $i ("COUNT", "IN STOCK", "%") {
	$worksheet->write($a-1, $col++, $i, $subhead);
}

$col -= 3;

# &div1;
# &div2;
# &div3;
# &div4;
# &div5;
# &div6;
# &calc($code = "Department Store", $ds = $a); # Department Store Total
&div8;
&div9;
# &div10;
# &div11;
&calc($code = "Supermarket"); # Supermarket Total
#&calc7; #TOTAL

$test = 0, $a = 0, $ds = 0, $e = 0, $counter=0; #RE INITIALIZE VARIABLES
$col += 3;

}

sub div1 {

$div_name = "Appliance and Home Improvement";
$g1 = '2530'; $g2 = '0000'; $g3 = '0000'; $g4 = '0000'; $g5 = '0000'; $g6 = '0000'; $g7 = '0000'; $g8 = '0000'; $g9 = '0000'; $g10 = '0000'; 
&query_markdown;

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0; #ADD 1 TO VARIABLES A RESET COUNTER
}

sub div2 {

$div_name = "Miscellaneous";
$g1 = '6540'; $g2 = '5510'; $g3 = '6550'; $g4 = '6510'; $g5 = '6570'; $g6 = '0000'; $g7 = '0000'; $g8 = '0000'; $g9 = '0000'; $g10 = '0000'; 
&query_markdown;

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0;
}

sub div3 {
$div_name = "Home Furnishings";
$g1 = '3020'; $g2 = '3010'; $g3 = '3040'; $g4 = '3050'; $g5 = '6530'; $g6 = '0000'; $g7 = '0000'; $g8 = '0000'; $g9 = '0000'; $g10 = '0000'; 
&query_markdown;

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0;
}

sub div4 {
$div_name = "Men\'s Lines";
$g1 = '3550'; $g2 = '5020'; $g3 = '7050'; $g4 = '0000'; $g5 = '0000'; $g6 = '0000'; $g7 = '0000'; $g8 = '0000'; $g9 = '0000'; $g10 = '0000'; 	
&query_markdown;

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0;
}

sub div5 {
$div_name = "Ladies\' Lines";
$g1 = '4540'; $g2 = '4520'; $g3 = '7030'; $g4 = '7040'; $g5 = '0000'; $g6 = '0000'; $g7 = '0000'; $g8 = '0000'; $g9 = '0000'; $g10 = '0000'; 
&query_markdown;

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0;
}

sub div6 {

$div_name = "Children\'s Lines";
$g1 = '3520'; $g2 = '3530'; $g3 = '3510'; $g4 = '5010'; $g5 = '7010'; $g6 = '7020'; $g7 = '3560'; $g8 = '3570'; $g9 = '3580'; $g10 = '0000'; 
&query_markdown; 

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0;
}

sub div8 {
$div_name = "FOOD";
$g1 = '1010'; $g2 = '1020'; $g3 = '1030'; $g4 = '1040'; $g5 = '0000'; $g6 = '1060'; $g7 = '0000'; $g8 = '0000'; $g9 = '0000'; $g10 = '0000'; 
&query_markdown;

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0;
}

sub div9 {
$div_name = "Non-Food";
$g1 = '5530'; $g2 = '5520'; $g3 = '0000'; $g4 = '0000'; $g5 = '0000'; $g6 = '0000'; $g7 = '0000'; $g8 = '0000'; $g9 = '0000'; $g10 = '0000'; 
&query_markdown;

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0;
}

sub div10 {
$div_name = "Pharmacy";
$g1 = '6010'; $g2 = '0000'; $g3 = '0000'; $g4 = '0000'; $g5 = '0000'; $g6 = '0000'; $g7 = '0000'; $g8 = '0000'; $g9 = '0000'; $g10 = '0000'; 
&query_markdown;

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0;
}

sub div11 {
$div_name = "FRESH";
$g1 = '2020'; $g2 = '2030'; $g3 = '2040'; $g4 = '2050'; $g5 = '2070'; $g6 = '0000'; $g7 = '0000'; $g8 = '0000'; $g9 = '0000'; $g10 = '0000'; 
&query_markdown;

if($test eq 1){
	if($a-$counter eq $a-1){
		$worksheet->write( $a-1, 3, $div_name, $border2 );
	}
	else{
		$worksheet->merge_range( $a-$counter, 3, $a-1, 3, $div_name, $border2 );
	}
}

$counter = 0;
}


sub new_sheet{

$worksheet = $workbook->add_worksheet($sheet);
$worksheet->set_zoom(85);
$worksheet->set_paper( 8 );
$worksheet->center_horizontally();
$worksheet->set_print_scale( 100 );
$worksheet->set_margins( 0.05 );
$worksheet->conditional_formatting( 'F9:V100',  { type => 'cell', criteria => '<', value => 0, format => $down } );
$worksheet->set_column( 0, 2, 1 );
$worksheet->set_column( 3, 3, 17 );
$worksheet->set_column( 6, 6, 19 );
$worksheet->set_column( 1, 2, undef, undef, 1 );
$worksheet->set_column( 4, 5, undef, undef, 1 );
$worksheet->set_column( 34, 34, undef, undef, 1 );

}


sub heading {

$worksheet->write(0, 3, "TOTAL " . $comment , $bold);
$worksheet->write(1, 3, "As of " . $day . '-' . $month_to_text . '-' .$year, $bold2);
$worksheet->merge_range( 4, 3, 5, 3, 'DIV', $subhead );
$worksheet->merge_range( 4, 5, 5, 5, 'CODE', $subhead );
$worksheet->merge_range( 4, 6, 5, 6, 'DEPARTMENT', $subhead );

}

sub query_markdown {

$table = 'instock_nbb_11.csv';

$dbh_csv = DBI->connect("dbi:CSV:f_dir=$ENV{HOME}/csvdb;f_ext=.csv;f_encoding=utf8;csv_eol=\n;csv_sep_char=",";csv_quote_char=\";csv_escape_char=\\;csv_class=Text::CSV_XS;csv_null=1") 
			or die $DBI::errstr;

$sls = $dbh_csv->prepare (qq{SELECT group_no, group_name, SUM(tot_repl_items) AS tot_items, SUM(repl_with_soh) AS rep_items
								 FROM $table 
								 WHERE (group_no=$g1 or group_no=$g2 or group_no=$g3 or group_no=$g4 or group_no=$g5 or group_no=$g6 or group_no=$g7 or group_no=$g8 or group_no=$g9 or group_no=$g10)
										AND STORE IN ($loc) 
								 GROUP BY group_no, group_name ORDER BY group_no
								});

$sls->execute();
while(my $s = $sls->fetchrow_hashref()){
	$worksheet->write($a,5, $s->{group_no},$code);
	$worksheet->write($a,6, $s->{group_name},$desc);
	$worksheet->write($a,$col, $s->{tot_items},$border1); 
	$worksheet->write($a,$col+1, $s->{rep_items},$border1);
	if ($s->{tot_items} <= 0){
		$worksheet->write($a,$col+2, "",$subt);
	}
	else{
		$worksheet->write($a,$col+2, '=IF(ISERROR('. $s->{rep_items}/$s->{tot_items} .'),"",('.$s->{rep_items}/$s->{tot_items}. '))',$subt);
	}
	
	$a++;
	$count++;
	$counter++;
}

$sls->finish();

}


sub calc { #CALCULATION FOR EACH DIVISION

foreach my $c( $col..$col+2 ){
	my $sum = '=SUM('. xl_rowcol_to_cell( $e, $c ). ':' . xl_rowcol_to_cell( $a-1, $c ) . ')';
		$worksheet->write( $a, $c, $sum, $bodyNum );
		
		if ($c eq $col+2){
			my $pct = '=IFERROR('. xl_rowcol_to_cell( $a, $c-1 ). '/' . xl_rowcol_to_cell( $a, $c-2 ) .',)';
				$worksheet->write( $a, $c, $pct, $body );
		}
}
if($test eq 1){
	$worksheet->merge_range( $a, 3, $a, 6, $code, $bodyN );
}

$a += 1; 
$e = $a;

}

sub calc7 { #TOTAL CALCULATION

foreach my $c( $col..$col+2 ){
	my $sumTY = '=SUM('.xl_rowcol_to_cell($ds,$c).','.xl_rowcol_to_cell($a-1,$c).')';
		$worksheet->write( $a, $c, $sumTY, $headNumber );
		
		if ($c eq $col+2){
			my $pct = '=IFERROR('. xl_rowcol_to_cell( $a, $c-1 ). '/' . xl_rowcol_to_cell( $a, $c-2 ) .',)';
				$worksheet->write( $a, $c, $pct, $head );
		}
}

if($test eq 1){
	$worksheet->merge_range( $a, 3, $a, 6, "TOTAL", $headN );
}
}

sub calc_tot_region { #TOTAL CALCULATION

$worksheet->merge_range( 4, $col, 4, $col+2, $total_label, $subhead );
$worksheet->set_column( $col, $col+1, 7 );
$worksheet->set_column( $col+2, $col+2, 5 );

# if($end eq 1){
	foreach my $c( 6..$count ){
		my $sumCount = '=SUMIFS('.xl_rowcol_to_cell($c,7).':'.xl_rowcol_to_cell($c,$col-2).','. xl_rowcol_to_cell(5,7).':'. xl_rowcol_to_cell(5,$col-2).',"COUNT")';
			$worksheet->write( $c, $col, $sumCount, $headNumber );
		my $sumStock = '=SUMIFS('.xl_rowcol_to_cell($c,7).':'.xl_rowcol_to_cell($c,$col-2).','. xl_rowcol_to_cell(5,7).':'. xl_rowcol_to_cell(5,$col-2).',"IN STOCK")';
			$worksheet->write( $c, $col+1, $sumStock, $headNumber );		
		my $pct = '=IFERROR('. xl_rowcol_to_cell( $c, $col+1 ). '/' . xl_rowcol_to_cell( $c, $col ).', )' ;
			$worksheet->write( $c, $col+2, $pct, $headN );
	}
# }
# elsif($end eq 0){
	# foreach my $c( 6..$count+2 ){
		# my $sumCount = '=SUMIFS('.xl_rowcol_to_cell($c,$vis).':'.xl_rowcol_to_cell($c,$col-1).','. xl_rowcol_to_cell(5,$vis).':'. xl_rowcol_to_cell(5,$col-1).',"COUNT")';
			# $worksheet->write( $c, $col, $sumCount, $headNumber );
		# my $sumStock = '=SUMIFS('.xl_rowcol_to_cell($c,$vis).':'.xl_rowcol_to_cell($c,$col-1).','. xl_rowcol_to_cell(5,$vis).':'. xl_rowcol_to_cell(5,$col-1).',"IN STOCK")';
			# $worksheet->write( $c, $col+1, $sumStock, $headNumber );		
		# my $pct = '=IFERROR('. xl_rowcol_to_cell( $c, $col+1 ). '/' . xl_rowcol_to_cell( $c, $col ).', )' ;
			# $worksheet->write( $c, $col+2, $pct, $headN );
	# }
# }

foreach my $i ("T COUNT ", "T IN STOCK", "%") {
	$worksheet->write(5, $col++, $i, $subhead);
}

$vis = $col;

}


sub generate_csv {

my $hostname = "10.128.0.42";
my $sid = "MGRMSP";
my $port = '1521';
my $uid = 'kent';
my $pw = 'amer1c8';

my $dbh = DBI->connect("dbi:Oracle:host=$hostname;sid=$sid;port=$port", $uid , $pw) or die "Unable to connect: $DBI::errstr";

my $csv = Text::CSV_XS->new ({ binary => 1, eol => $/ });
 open my $fh, ">", "instock_nbb_11.csv" or die "instock_nbb_11.csv: $!";

$test = qq{ 
SELECT SGD.STORE AS STORE, SGD.STORE_NAME STORE_NAME, 
SGD.GROUP_NO GROUP_NO, SGD.GROUP_NAME GROUP_NAME, SUM(STK.TOT_REPL_ITEMS) TOT_REPL_ITEMS, SUM(STK.REPL_WITH_SOH) REPL_WITH_SOH FROM
(SELECT STORE, STORE_NAME, DIVISION, DIV_NAME, GROUP_NO, GROUP_NAME 
FROM
	(SELECT DISTINCT STORE, STORE_NAME FROM STORE UNION ALL SELECT DISTINCT WH AS STORE, WH_NAME STORE_NAME FROM WH),   
	(SELECT G.DIVISION, I.DIV_NAME, D.GROUP_NO, G.GROUP_NAME, D.PURCHASE_TYPE, D.DEPT, D.DEPT_NAME FROM DEPS D, GROUPS G, DIVISION I WHERE D.GROUP_NO = G.GROUP_NO AND G.DIVISION = I.DIVISION) 
GROUP BY STORE, STORE_NAME, DIVISION, DIV_NAME, GROUP_NO, GROUP_NAME
)SGD
LEFT JOIN
(SELECT GROUP_NO, DEPT, DEPT_NAME, LOCATION, LOC_NAME, COUNT(REPL_TAG) TOT_REPL_ITEMS, COUNT(STOCK_TAG) REPL_WITH_SOH
FROM(
	SELECT DISTINCT DEPS.GROUP_NO, MST.DEPT, DEPT_NAME, SOH.ITEM, SOH.LOC LOCATION, LOCATIONS.LOC_NAME, 'Y' REPL_TAG, 
	  STOCK_ON_HAND, CASE WHEN STOCK_ON_HAND <= 0 THEN NULL ELSE 'Y' END AS STOCK_TAG 
	FROM ITEM_LOC_SOH SOH
		LEFT JOIN ITEM_LOC LOC ON SOH.ITEM=LOC.ITEM AND SOH.LOC=LOC.LOC
		LEFT JOIN ITEM_MASTER MST ON SOH.ITEM=MST.ITEM 
		LEFT JOIN DEPS ON MST.DEPT=DEPS.DEPT
		LEFT JOIN GROUPS ON DEPS.GROUP_NO=GROUPS.GROUP_NO
		LEFT JOIN (SELECT DISTINCT STORE LOC, STORE_NAME LOC_NAME FROM STORE UNION ALL SELECT DISTINCT WH AS LOC, WH_NAME LOC_NAME FROM WH)LOCATIONS ON SOH.LOC=LOCATIONS.LOC
	WHERE LOC.STATUS IN ('A')  AND 
	(
	(SOH.LOC IN ( '2004','2005','2006','2007','2009','2012','2013','2223','3012','4004','6002','6012','6013' ) AND SOH.ITEM IN ( '2070582','2006802','10483236','8458735','8201966','2098999','7863875','3758472','2099064','5239818','2099125','2035000','8956972','8956989','2003603','2035314','1987089','1994162','2003429','2003528','2003436','2003450','10095188','10062286','9083975','2071664','9083978','9834562','2071626','9617526','2071671','2071619','9083977','2025223','9230619','2070209','9516657','3118603','2063737','2094106','5544264','3118610','4082392','2104485','5244904','8404954','3118634','2046563','6256548','9192574','2112411','2077017','9245716','2112459','10516960','10343097','10573829','2014173','2020839','1992885','10302110','10071291','10627605','101590325','2089607','9604234','10627604','1999785','9018150','9612599','9985068','9287582','9985071','2088853','15003212','9058949','9420841','10666074','9790857','9945757','9628055','3794753','2069180','8779199','9945758','9612426','15003003','6948405','3794852','2101132','9997581','2065519','9506663','7173233','3762387','8264954','10153202','7791413','9413022','10075820','10154458','10154459','9798593','9413018','9128159','9798596','9413021','9304829','9531038','2002446','10154461','9531053','2002941','5788293','9781681','9577940','10506394','10005413','15003006','9756146','9756145','2101699','9732968','9732967','2099392','9229170','10225270','9495258','10036303','8417480','3313855','8846051','8846105','3313886','9097724','3322376','9352311','9198427','10220009','9802970','9414472','9414467','10044690','2059945','8403988','2047683','9166472','9111641','9111655','2106441','10163810','10163811','10730252','9354893','10331962','9378636','10517402','9378666','10331991','10323783','9622185','9378645','9409678','10573834','10144094','8670106','9059889','8669797','10217611','9099661','9099310','2094670','10249301','10144084','2077239','10181461','6447779','8404794','2088860','2088792','15003036','9616898','6393335','2068268','6393366','6171261','3758632','2083223','2068336','10739487','2068305','2083278','9288596','101590122','10677353','6768300','2083247','9303560','10091953','2068275','6171278','2068299','2061559','2061542','6393373','10102570','9600964','9768446','101563256','9351396','2068282','9053954','10571068','101580575','9768448','10405061','9229174','9879223','2097497','9628042','9592783','2099224','9530923','2108650','9592734','2042831','2097473','9337737','9592793','10151283','2089409','2099217','2089430','10156677','101535463','10768217','2089386','9285894','3203873','10082124','10082128','2091693','10228601','10409555','2060347','1991680','8369840','2035604','2119489','9257330','1991758','2059099','2036311','9023384','9397210','9315386','5402625','9128577','3772331','2060330','3772997','2978185','8432315','10268141','9057888','9612608','9304841','9482243','9912519','10005140','9719678','15001915','15001916','2043739','2053592','2002064','5646265','9229318','8807687','9938810','2040219','10752794','10640020','10121636','10752795','10264849','7225017','9609446','10205309','9609452','10205298','4.80889E+12','2102139','2101996','9653550','3786420','3356647','10779744','9354924','3356630','3356654','3311325','3311332','9741484','9035311','9741446','9741440','10673057','6828127','3972','8055','3971','8164','2101378','3792841','3792414','9129079','9403659','2101385','9111102','9192668','10151714','10151719','2070230','10224003','10010001','2070247','2070261','10224013','9495208','9270797','10168607','9432399','9215252','9495264','9495230','9375116','9375069','9291066','9375127','15002201','15002211','1992977','3132173','2052052','3132166','2051963','2088914','8202529','8713155','15002228','9832635','9523786','9261923','9847335','15000321','2095929','9597891','10212653','1990928','9592985','9788570','9788582','9985192','9116097','10066546','9716380','1840223','15003011','9462912','9981874','9897461','2004310','2004327','9034647','9034649','2004334','9780086','101422941','10082044','10174443','10174453','10196649','9765501','10022702','9292448','15002939','9850872','9893594','9893598','9507012','2096667','9507016','2096407','10430482','10430481','9837032','10195624','10430333','10179705','9894887','10430315','2033839','9033679','2116273','2115597','2450070','9552315','8947215','10200258','10774383','10285304','10285308','10285307','9853613','9853597','9853623','9358632','3365281','9787751','9787778','9787764','9788271','10252423','9787779','10242216','10017759','10017901','10020873','101574326','9963896','10701126','101666075','101574401','9917884','10734466','10122103','10075303','10085788','10456639','10507565','9308960','10612338','10629076','9887384','10178007','9377775','9377770','10508099','10752128','10178012','2086453','8418579','7592775','10002248','9497411','7592751','9948856','10215077','1999778','9890643','9380279','9341571','9351111','9920013','101477584','9358673','9726607','10746426','10567209' )) OR 
	(SOH.LOC IN ( '2001','2002','2003','2008','2010','2011','3001','3002','3003','3004','3005','3006','3007','3009','4002','4003','6001','6003','6004','6005','6009','6010','3010' ) AND SOH.ITEM IN ( '2070582','10112680','2006802','8458735','8201966','2098999','3344729','3316016','2099064','2099125','5239818','2096742','2023397','2080079','5263073','2978154','8807441','2003320','2064932','6545802','2003337','2067575','2067582','8956972','2035000','2116518','2116525','8956989','2035314','2013763','2003603','10062276','9083975','2071664','9083978','2071626','2071671','9083977','9834562','2070209','9516657','9457103','3118603','8404954','5544264','2094106','9192574','2112411','6256548','2063737','9245716','9245724','2104485','2112459','3118634','9026696','10203379','2112428','3118610','2019116','2046563','2077017','5244904','9967141','9543064','9926921','9285449','2016269','9967126','2112442','10605583','10083470','10083528','10083485','10516960','10343097','10573829','9612895','2020839','2014173','9118033','101657019','101433076','9544940','10730877','10248486','101657127','2085241','9608501','2085104','2085289','10302110','10071291','9604234','10627605','10627604','101590325','2089607','10750783','1992236','9018150','2058894','2100760','15003212','9287582','3781357','9166462','2110912','2088853','9985068','9058949','9279558','9985071','10666074','7530982','9420841','9043768','9341489','7385018','9025360','2025575','9509344','9619829','2061702','9893963','9118909','9340661','10031768','3794753','8779199','9628055','9128164','9945757','9612426','2065502','9172002','9268195','2069180','9169114','9790873','2101262','2065519','2001494','7173233','5272112','2089126','2088785','9104215','8402103','2065205','3762387','8840080','7791413','9413022','10506394','9531038','10154458','10075820','9413018','10154459','9413021','3322666','3320747','9101411','3316092','7114359','10077213','2101699','10077203','2099392','9229170','2089867','8417480','2030722','10036303','9070021','9070024','3313886','3334850','3334775','3313855','3322376','7081873','7081897','3313831','7057779','9905812','9988438','9802970','9580774','9414468','10044690','8403988','6023751','2059976','9257768','9111641','9111655','10163810','10163811','10331962','10517402','9378636','9378666','10574018','2094670','8669797','2055701','10520342','8670106','9117268','2055718','2077239','10242404','9057463','10144094','10242448','9034675','9809571','10217611','8765901','9099657','10657317','9000449','10249307','8404794','2088792','2088860','6447779','15003036','9219375','2068510','5672202','9116770','7813399','6768300','6393335','2068268','9013457','2068336','2061542','2083223','9506226','2061559','6393366','9351396','10135507','9879223','9229174','2099224','2089416','2089386','10156677','2099217','2099194','2089409','2112701','10082124','2095424','2112640','2112657','2112718','10113551','10082128','2091693','10228601','10409555','2089881','2092904','2092928','9142746','2099897','9142740','2092935','9236135','10124877','2092911','2978185','9257330','2035604','1991680','3772997','5402625','1991758','2060347','9038253','2061597','2065410','9255705','2065403','5226344','6240936','9438033','5845361','9719678','15001916','9799862','2043739','2002040','2002064','101659352','101569507','9938810','2040219','10752794','10264849','10121636','2102139','3786420','3355893','9354924','8429001','10779744','3321508','9354914','3311189','3311639','3356654','3356647','9741440','6828127','3405','8003','3610','8055','3959','101651594','3792841','15003437','8938060','9495264','9432394','2070230','8417473','9354884','9066871','9354578','9066867','9128167','2061900','9777187','15002211','2099767','2060958','2008837','2051963','2088914','8202529','8202512','9796444','2116273','9663718','9552315','9083071','101703219','101703159','9451161','10137016','15002230','15002229','9261923','9523786','10641595','2095929','10031647','10031646','10212653','9592985','9499921','2091846','9788582','9788570','9852058','9716380','9678254','9243002','10001076','9462912','9889533','9897461','9981874','9897463','9897462','2004310','2004327','9812892','9629308','9994625','10763769','9871032','10003967','10082044','9780086','10003963','10135767','9457562','9292448','9363194','9292447','10022702','9617966','10690113','9850872','9893594','9507012','2096667','2096407','8202055','10216301','10430482','10737453','10195624','9837032','10179705','10334147','10385248','10385290','10430333','9894887','3323786','3323755','10285307','10285308','10285302','10122798','10122796','2058399','10285266','2006628','9118164','9118198','9571818','3365281','9571821','2072531','9163010','2120003','2071909','2071916','9425602','3359662','2091464','3360224','9787751','2067544','9788271','2085845','9787764','2085838','10242216','9787778','9788272','10774384','10017759','10017901','10020873','10456639','101574326','9215824','101574401','10629075','9660462','10629076','9904117','101666075','10701126','10690146','10178007','9887384','9377775','10178012','2086453','2086460','2086446','9777626','8468666','8418579','7592751','7592775','7592829','7592805','10165789','10165797','10165779','10165782','9183620','9183622','8904829','8904843','9530162','15000381','10215077','1999778','9380279','2025339','9287404','2031590','9755384','9920013','9258104' )) 
	)
	)TBL 
GROUP BY GROUP_NO, DEPT, DEPT_NAME, LOCATION, LOC_NAME)STK
ON SGD.STORE = STK.LOCATION AND SGD.GROUP_NO = STK.GROUP_NO
GROUP BY SGD.STORE, SGD.STORE_NAME, 
SGD.GROUP_NO, SGD.GROUP_NAME
ORDER BY 1, 3
};

$testXX = qq{ 
SELECT CASE WHEN SGD.STORE = 2223 THEN 2013 ELSE SGD.STORE END AS STORE, SGD.STORE_NAME STORE_NAME, 
SGD.GROUP_NO GROUP_NO, SGD.GROUP_NAME GROUP_NAME, SUM(STK.TOT_REPL_ITEMS) TOT_REPL_ITEMS, SUM(STK.REPL_WITH_SOH) REPL_WITH_SOH FROM
(SELECT STORE, STORE_NAME, DIVISION, DIV_NAME, GROUP_NO, GROUP_NAME 
FROM
	(SELECT DISTINCT STORE, STORE_NAME FROM STORE UNION ALL SELECT DISTINCT WH AS STORE, WH_NAME STORE_NAME FROM WH),   
	(SELECT G.DIVISION, I.DIV_NAME, D.GROUP_NO, G.GROUP_NAME, D.PURCHASE_TYPE, D.DEPT, D.DEPT_NAME FROM DEPS D, GROUPS G, DIVISION I WHERE D.GROUP_NO = G.GROUP_NO AND G.DIVISION = I.DIVISION) 
GROUP BY STORE, STORE_NAME, DIVISION, DIV_NAME, GROUP_NO, GROUP_NAME
)SGD
LEFT JOIN
(SELECT GROUP_NO, DEPT, DEPT_NAME, LOCATION, LOC_NAME, COUNT(REPL_TAG) TOT_REPL_ITEMS, COUNT(STOCK_TAG) REPL_WITH_SOH
FROM(
	SELECT DISTINCT DEPS.GROUP_NO, MST.DEPT, DEPT_NAME, REPL.ITEM, REPL.LOCATION, LOCATIONS.LOC_NAME, 'Y' REPL_TAG, 
	  STOCK_ON_HAND, CASE WHEN STOCK_ON_HAND <= 0 THEN NULL ELSE 'Y' END AS STOCK_TAG --DECODE(STOCK_ON_HAND,0,'','Y') STOCK_TAG
	FROM REPL_ITEM_LOC REPL
		LEFT JOIN ITEM_LOC LOC ON REPL.ITEM=LOC.ITEM AND REPL.LOCATION=LOC.LOC
		LEFT JOIN ITEM_LOC_SOH SOH ON REPL.ITEM=SOH.ITEM AND REPL.LOCATION=SOH.LOC
		LEFT JOIN ITEM_MASTER MST ON REPL.ITEM=MST.ITEM 
		LEFT JOIN DEPS ON MST.DEPT=DEPS.DEPT
		LEFT JOIN GROUPS ON DEPS.GROUP_NO=GROUPS.GROUP_NO
		LEFT JOIN (SELECT DISTINCT STORE LOC, STORE_NAME LOC_NAME FROM STORE UNION ALL SELECT DISTINCT WH AS LOC, WH_NAME LOC_NAME FROM WH)LOCATIONS ON REPL.LOCATION=LOCATIONS.LOC
	WHERE LOC.STATUS IN ('A')  AND 
	(
	(REPL.LOCATION IN ( '2004','2005','2006','2007','2009','2012','2013','2223','3012','4004','6002','6012','6013' ) AND REPL.ITEM IN ( '2070582','2006802','10483236','8458735','8201966','2098999','7863875','3758472','2099064','5239818','2099125','2035000','8956972','8956989','2003603','2035314','1987089','1994162','2003429','2003528','2003436','2003450','10095188','10062286','9083975','2071664','9083978','9834562','2071626','9617526','2071671','2071619','9083977','2025223','9230619','2070209','9516657','3118603','2063737','2094106','5544264','3118610','4082392','2104485','5244904','8404954','3118634','2046563','6256548','9192574','2112411','2077017','9245716','2112459','10516960','10343097','10573829','2014173','2020839','1992885','10302110','10071291','10627605','101590325','2089607','9604234','10627604','1999785','9018150','9612599','9985068','9287582','9985071','2088853','15003212','9058949','9420841','10666074','9790857','9945757','9628055','3794753','2069180','8779199','9945758','9612426','15003003','6948405','3794852','2101132','9997581','2065519','9506663','7173233','3762387','8264954','10153202','7791413','9413022','10075820','10154458','10154459','9798593','9413018','9128159','9798596','9413021','9304829','9531038','2002446','10154461','9531053','2002941','5788293','9781681','9577940','10506394','10005413','15003006','9756146','9756145','2101699','9732968','9732967','2099392','9229170','10225270','9495258','10036303','8417480','3313855','8846051','8846105','3313886','9097724','3322376','9352311','9198427','10220009','9802970','9414472','9414467','10044690','2059945','8403988','2047683','9166472','9111641','9111655','2106441','10163810','10163811','10730252','9354893','10331962','9378636','10517402','9378666','10331991','10323783','9622185','9378645','9409678','10573834','10144094','8670106','9059889','8669797','10217611','9099661','9099310','2094670','10249301','10144084','2077239','10181461','6447779','8404794','2088860','2088792','15003036','9616898','6393335','2068268','6393366','6171261','3758632','2083223','2068336','10739487','2068305','2083278','9288596','101590122','10677353','6768300','2083247','9303560','10091953','2068275','6171278','2068299','2061559','2061542','6393373','10102570','9600964','9768446','101563256','9351396','2068282','9053954','10571068','101580575','9768448','10405061','9229174','9879223','2097497','9628042','9592783','2099224','9530923','2108650','9592734','2042831','2097473','9337737','9592793','10151283','2089409','2099217','2089430','10156677','101535463','10768217','2089386','9285894','3203873','10082124','10082128','2091693','10228601','10409555','2060347','1991680','8369840','2035604','2119489','9257330','1991758','2059099','2036311','9023384','9397210','9315386','5402625','9128577','3772331','2060330','3772997','2978185','8432315','10268141','9057888','9612608','9304841','9482243','9912519','10005140','9719678','15001915','15001916','2043739','2053592','2002064','5646265','9229318','8807687','9938810','2040219','10752794','10640020','10121636','10752795','10264849','7225017','9609446','10205309','9609452','10205298','4.80889E+12','2102139','2101996','9653550','3786420','3356647','10779744','9354924','3356630','3356654','3311325','3311332','9741484','9035311','9741446','9741440','10673057','6828127','3972','8055','3971','8164','2101378','3792841','3792414','9129079','9403659','2101385','9111102','9192668','10151714','10151719','2070230','10224003','10010001','2070247','2070261','10224013','9495208','9270797','10168607','9432399','9215252','9495264','9495230','9375116','9375069','9291066','9375127','15002201','15002211','1992977','3132173','2052052','3132166','2051963','2088914','8202529','8713155','15002228','9832635','9523786','9261923','9847335','15000321','2095929','9597891','10212653','1990928','9592985','9788570','9788582','9985192','9116097','10066546','9716380','1840223','15003011','9462912','9981874','9897461','2004310','2004327','9034647','9034649','2004334','9780086','101422941','10082044','10174443','10174453','10196649','9765501','10022702','9292448','15002939','9850872','9893594','9893598','9507012','2096667','9507016','2096407','10430482','10430481','9837032','10195624','10430333','10179705','9894887','10430315','2033839','9033679','2116273','2115597','2450070','9552315','8947215','10200258','10774383','10285304','10285308','10285307','9853613','9853597','9853623','9358632','3365281','9787751','9787778','9787764','9788271','10252423','9787779','10242216','10017759','10017901','10020873','101574326','9963896','10701126','101666075','101574401','9917884','10734466','10122103','10075303','10085788','10456639','10507565','9308960','10612338','10629076','9887384','10178007','9377775','9377770','10508099','10752128','10178012','2086453','8418579','7592775','10002248','9497411','7592751','9948856','10215077','1999778','9890643','9380279','9341571','9351111','9920013','101477584','9358673','9726607','10746426','10567209' )) OR 
	(REPL.LOCATION IN ( '2001','2002','2003','2008','2010','2011','3001','3002','3003','3004','3005','3006','3007','3009','4002','4003','6001','6003','6004','6005','6009','6010' ) AND REPL.ITEM IN ( '2070582','10112680','2006802','8458735','8201966','2098999','3344729','3316016','2099064','2099125','5239818','2096742','2023397','2080079','5263073','2978154','8807441','2003320','2064932','6545802','2003337','2067575','2067582','8956972','2035000','2116518','2116525','8956989','2035314','2013763','2003603','10062276','9083975','2071664','9083978','2071626','2071671','9083977','9834562','2070209','9516657','9457103','3118603','8404954','5544264','2094106','9192574','2112411','6256548','2063737','9245716','9245724','2104485','2112459','3118634','9026696','10203379','2112428','3118610','2019116','2046563','2077017','5244904','9967141','9543064','9926921','9285449','2016269','9967126','2112442','10605583','10083470','10083528','10083485','10516960','10343097','10573829','9612895','2020839','2014173','9118033','101657019','101433076','9544940','10730877','10248486','101657127','2085241','9608501','2085104','2085289','10302110','10071291','9604234','10627605','10627604','101590325','2089607','10750783','1992236','9018150','2058894','2100760','15003212','9287582','3781357','9166462','2110912','2088853','9985068','9058949','9279558','9985071','10666074','7530982','9420841','9043768','9341489','7385018','9025360','2025575','9509344','9619829','2061702','9893963','9118909','9340661','10031768','3794753','8779199','9628055','9128164','9945757','9612426','2065502','9172002','9268195','2069180','9169114','9790873','2101262','2065519','2001494','7173233','5272112','2089126','2088785','9104215','8402103','2065205','3762387','8840080','7791413','9413022','10506394','9531038','10154458','10075820','9413018','10154459','9413021','3322666','3320747','9101411','3316092','7114359','10077213','2101699','10077203','2099392','9229170','2089867','8417480','2030722','10036303','9070021','9070024','3313886','3334850','3334775','3313855','3322376','7081873','7081897','3313831','7057779','9905812','9988438','9802970','9580774','9414468','10044690','8403988','6023751','2059976','9257768','9111641','9111655','10163810','10163811','10331962','10517402','9378636','9378666','10574018','2094670','8669797','2055701','10520342','8670106','9117268','2055718','2077239','10242404','9057463','10144094','10242448','9034675','9809571','10217611','8765901','9099657','10657317','9000449','10249307','8404794','2088792','2088860','6447779','15003036','9219375','2068510','5672202','9116770','7813399','6768300','6393335','2068268','9013457','2068336','2061542','2083223','9506226','2061559','6393366','9351396','10135507','9879223','9229174','2099224','2089416','2089386','10156677','2099217','2099194','2089409','2112701','10082124','2095424','2112640','2112657','2112718','10113551','10082128','2091693','10228601','10409555','2089881','2092904','2092928','9142746','2099897','9142740','2092935','9236135','10124877','2092911','2978185','9257330','2035604','1991680','3772997','5402625','1991758','2060347','9038253','2061597','2065410','9255705','2065403','5226344','6240936','9438033','5845361','9719678','15001916','9799862','2043739','2002040','2002064','101659352','101569507','9938810','2040219','10752794','10264849','10121636','2102139','3786420','3355893','9354924','8429001','10779744','3321508','9354914','3311189','3311639','3356654','3356647','9741440','6828127','3405','8003','3610','8055','3959','101651594','3792841','15003437','8938060','9495264','9432394','2070230','8417473','9354884','9066871','9354578','9066867','9128167','2061900','9777187','15002211','2099767','2060958','2008837','2051963','2088914','8202529','8202512','9796444','2116273','9663718','9552315','9083071','101703219','101703159','9451161','10137016','15002230','15002229','9261923','9523786','10641595','2095929','10031647','10031646','10212653','9592985','9499921','2091846','9788582','9788570','9852058','9716380','9678254','9243002','10001076','9462912','9889533','9897461','9981874','9897463','9897462','2004310','2004327','9812892','9629308','9994625','10763769','9871032','10003967','10082044','9780086','10003963','10135767','9457562','9292448','9363194','9292447','10022702','9617966','10690113','9850872','9893594','9507012','2096667','2096407','8202055','10216301','10430482','10737453','10195624','9837032','10179705','10334147','10385248','10385290','10430333','9894887','3323786','3323755','10285307','10285308','10285302','10122798','10122796','2058399','10285266','2006628','9118164','9118198','9571818','3365281','9571821','2072531','9163010','2120003','2071909','2071916','9425602','3359662','2091464','3360224','9787751','2067544','9788271','2085845','9787764','2085838','10242216','9787778','9788272','10774384','10017759','10017901','10020873','10456639','101574326','9215824','101574401','10629075','9660462','10629076','9904117','101666075','10701126','10690146','10178007','9887384','9377775','10178012','2086453','2086460','2086446','9777626','8468666','8418579','7592751','7592775','7592829','7592805','10165789','10165797','10165779','10165782','9183620','9183622','8904829','8904843','9530162','15000381','10215077','1999778','9380279','2025339','9287404','2031590','9755384','9920013','9258104' )) 
	)
	)TBL 
GROUP BY GROUP_NO, DEPT, DEPT_NAME, LOCATION, LOC_NAME)STK
ON SGD.STORE = STK.LOCATION AND SGD.GROUP_NO = STK.GROUP_NO
GROUP BY SGD.STORE, SGD.STORE_NAME, 
SGD.GROUP_NO, SGD.GROUP_NAME
ORDER BY 1, 3
};

my $sth = $dbh->prepare ($test);
 $sth->execute;
 $csv->print ($fh, $sth->{NAME_lc});
 while (my $row = $sth->fetch) {
     $csv->print ($fh, $row) or $csv->error_diag;
     }
 close $fh or die "instock_nbb_11.csv: $!";
 
$dbh->disconnect;

}


sub mail1 {

my $cc;
my $bcc;
GetOptions( 'cc=s' => \$cc, 'bcc=s' => \$bcc, );

my( $to, $subject, $msgbody_file, $attachment_file ) = @ARGV;

#$to = ' cherry.gulloy@metrogaisano.com, janice.bedrijo@metrogaisano.com, victoria.abasolo@metrogaisano.com, bermon.alcantara@metrogaisano.com, eljie.laquinon@metrogaisano.com, nilynn.yosores@metrogaisano.com, ryanneil.dupay@metrogaisano.com, anafatima.mancho@metrogaisano.com, emily.silverio@metrogaisano.com, luz.bitang@metrogaisano.com ';
#$bcc = 'kent.mamalias@metrogaisano.com, rex.cabanilla@metrogaisano.com, lea.gonzaga@metrogaisano.com, annalyn.conde@metrogaisano.com';
$bcc = 'lea.gonzaga@metrogaisano.com';

$from = 'Report Mailer<report.mailer@metrogaisano.com>';
		
$subject = "In Stock Report, NBB";

$msgbody_file = 'message.txt';

$attachment_file = "INSTOCK_REPORT_NBB_v1.1.xlsx";

my $msgbody = read_file( $msgbody_file );

my $attachment_data = encode_base64( read_file( $attachment_file, 1 ));

my %mail = (
    To   => $to,
	From  => $from,
    Subject => $subject,
	'content-type' => "multipart/alternative; boundary=\"$boundary\""
);

$mail{smtp} = '10.190.1.30';
$mail{Cc} = $cc if $cc;
$mail{Bcc} = $bcc if $bcc;

my $boundary = "====" . time . "====";

$mail{'content-type'} = qq(multipart/mixed; boundary="$boundary");

$boundary = '--'.$boundary;

$mail{body} = 
<<END_OF_BODY;
$boundary
Content-Type: text/html; charset="iso-8859-1"

<html>
Dear Users, <br> <br>
Please refer below for details of the enclosed report: <br> <br>

<table border = 1>
	<tr>
		<th>Measure</th>
		<th>Definition</th>
	</tr>
	<tr>
		<td>SKU Count</td>
		<td>Count of SKUs which satisfies the following conditions:
			<ul><li>Active status (A)</li>
				<li>SKU must be in the NBB item list</li>
	</tr>
	<tr>
		<td>In-Stock</td>
		<td>Count of NBB SKUs with Stock On-hand greater than zero</td>
	</tr>
	<tr>
		<td>% In-Stock</td>
		<td>In-stock / SKU Count</td>
	</tr>
</table>
<br>

If you need assistance, kindly email arcbi.support&#64;metrogaisano.com. <br> <br>

Regards, <br>
ARC BI Support <p>
</html>

$boundary
Content-Type: application/octet-stream; name="$attachment_file"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="$attachment_file"
$attachment_data
$boundary--
END_OF_BODY

sendmail(%mail) or die $Mail::Sendmail::error;

print "Sendmail Log says:\n$Mail::Sendmail::log\n";

}

sub mail2 {

my $cc;
my $bcc;
GetOptions( 'cc=s' => \$cc, 'bcc=s' => \$bcc, );

my( $to, $subject, $msgbody_file, $attachment_file ) = @ARGV;

#$to = ' manuel.degamo@metrogaisano.com, ace.olalia@metrogaisano.com, alma.espino@metrogaisano.com, angeli_christi.ladot@metrogaisano.com, angelito.dublin@metrogaisano.com, arlene.yanson@metrogaisano.com, augosto.daria@metrogaisano.com, charm.buenaventura@metrogaisano.com, teena.velasco@metrogaisano.com, cristy.sy@metrogaisano.com, diana.almagro@metrogaisano.com, edgardo.lim@metrogaisano.com, edris.tarrobal@metrogaisano.com, fidela.villamor@metrogaisano.com, genaro.felisilda@metrogaisano.com, genevive.quinones@metrogaisano.com, glenda.navares@metrogaisano.com, joefrey.camu@metrogaisano.com, jonalyn.diaz@metrogaisano.com ';

$bcc = 'lea.gonzaga@metrogaisano.com';

$from = 'Report Mailer<report.mailer@metrogaisano.com>';
		
$subject = "In Stock Report, NBB";
$msgbody_file = 'message.txt';

$attachment_file = "INSTOCK_REPORT_NBB_v1.1.xlsx";

my $msgbody = read_file( $msgbody_file );

my $attachment_data = encode_base64( read_file( $attachment_file, 1 ));

my %mail = (
    To   => $to,
	From  => $from,
    Subject => $subject,
	'content-type' => "multipart/alternative; boundary=\"$boundary\""
);

$mail{smtp} = '10.190.1.30';
$mail{Cc} = $cc if $cc;
$mail{Bcc} = $bcc if $bcc;

my $boundary = "====" . time . "====";

$mail{'content-type'} = qq(multipart/mixed; boundary="$boundary");

$boundary = '--'.$boundary;

$mail{body} = 
<<END_OF_BODY;
$boundary
Content-Type: text/html; charset="iso-8859-1"

<html>
Dear Users, <br> <br>
Please refer below for details of the enclosed report: <br> <br>

<table border = 1>
	<tr>
		<th>Measure</th>
		<th>Definition</th>
	</tr>
	<tr>
		<td>SKU Count</td>
		<td>Count of SKUs which satisfies the following conditions:
			<ul><li>Active status (A)</li>
				<li>SKU must be in the NBB item list</li>
	</tr>
	<tr>
		<td>In-Stock</td>
		<td>Count of NBB SKUs with Stock On-hand greater than zero</td>
	</tr>
	<tr>
		<td>% In-Stock</td>
		<td>In-stock / SKU Count</td>
	</tr>
</table>
<br>

If you need assistance, kindly email arcbi.support&#64;metrogaisano.com. <br> <br>

Regards, <br>
ARC BI Support <p>
</html>

$boundary
Content-Type: application/octet-stream; name="$attachment_file"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="$attachment_file"
$attachment_data
$boundary--
END_OF_BODY

sendmail(%mail) or die $Mail::Sendmail::error;

print "Sendmail Log says:\n$Mail::Sendmail::log\n";

}

sub mail3 {

my $cc;
my $bcc;
GetOptions( 'cc=s' => \$cc, 'bcc=s' => \$bcc, );

my( $to, $subject, $msgbody_file, $attachment_file ) = @ARGV;

#$to = ' josemarie.graciadas@metrogaisano.com, jovany.polancos@metrogaisano.com, judy.gilo@metrogaisano.com, julie.montano@metrogaisano.com, kathlene.procianos@metrogaisano.com, limuel.ulanday@metrogaisano.com, cristina.de_asis@metrogaisano.com, mariajoana.cruz@metrogaisano.com, may.sasedor@metrogaisano.com, michelle.calsada@metrogaisano.com, policarpo.mission@metrogaisano.com, rex.refuerzo@metrogaisano.com, ricky.tulda@metrogaisano.com, ronald.dizon@metrogaisano.com, roselle.agbayani@metrogaisano.com, rowena.tangoan@metrogaisano.com, roy.igot@metrogaisano.com, tessie.cabanero@metrogaisano.com, victoria.ferolino@metrogaisano.com, wendel.gallo@metrogaisano.com, juanjose.sibal@metrogaisano.com, julie.montano@metrogaisano.com, noli.lee@metrogaisano.com, vivian.ablang@metrogaisano.com, roselle.agbayani@metrogaisano.com, irene.montemayor@metrogaisano.com ';

$bcc = 'lea.gonzaga@metrogaisano.com';

$from = 'Report Mailer<report.mailer@metrogaisano.com>';
		
$subject = "In Stock Report, NBB";

$msgbody_file = 'message.txt';

$attachment_file = "INSTOCK_REPORT_NBB_v1.1.xlsx";

my $msgbody = read_file( $msgbody_file );

my $attachment_data = encode_base64( read_file( $attachment_file, 1 ));

my %mail = (
    To   => $to,
	From  => $from,
    Subject => $subject,
	'content-type' => "multipart/alternative; boundary=\"$boundary\""
);

$mail{smtp} = '10.190.1.30';
$mail{Cc} = $cc if $cc;
$mail{Bcc} = $bcc if $bcc;

my $boundary = "====" . time . "====";

$mail{'content-type'} = qq(multipart/mixed; boundary="$boundary");

$boundary = '--'.$boundary;

$mail{body} = 
<<END_OF_BODY;
$boundary
Content-Type: text/html; charset="iso-8859-1"

<html>
Dear Users, <br> <br>
Please refer below for details of the enclosed report: <br> <br>

<table border = 1>
	<tr>
		<th>Measure</th>
		<th>Definition</th>
	</tr>
	<tr>
		<td>SKU Count</td>
		<td>Count of SKUs which satisfies the following conditions:
			<ul><li>Active status (A)</li>
				<li>SKU must be in the NBB item list</li>
	</tr>
	<tr>
		<td>In-Stock</td>
		<td>Count of NBB SKUs with Stock On-hand greater than zero</td>
	</tr>
	<tr>
		<td>% In-Stock</td>
		<td>In-stock / SKU Count</td>
	</tr>
</table>
<br>

If you need assistance, kindly email arcbi.support&#64;metrogaisano.com. <br> <br>

Regards, <br>
ARC BI Support <p>
</html>

$boundary
Content-Type: application/octet-stream; name="$attachment_file"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="$attachment_file"
$attachment_data
$boundary--
END_OF_BODY

sendmail(%mail) or die $Mail::Sendmail::error;

print "Sendmail Log says:\n$Mail::Sendmail::log\n";

}


sub read_file {

my( $filename, $binmode ) = @_;
my $fh = new IO::File;
$fh->open("<".$filename) or die "Error opening $filename for reading - $!\n";
$fh->binmode if $binmode;
local $/;
<$fh>
	
}








