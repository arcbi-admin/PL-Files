START:

use DBI;
use DBD::Oracle qw(:ora_types);
use Excel::Writer::XLSX;
use Excel::Writer::XLSX::Utility;
use Text::CSV_XS;
#use DateKey_ARC;
use DBConnector;
use Win32::Job;
use Getopt::Long;
use IO::File;
use MIME::QuotedPrint;
use MIME::Base64;
use Mail::Sendmail;


$test_query = qq{ SELECT CASE WHEN EXISTS (SELECT SEQ_NO, ETL_SUMMARY, VALUE, ARC_DATE FROM ADMIN_ETL_SUMMARY WHERE TO_DATE(ARC_DATE, 'DD-MON-YY') = TO_DATE(SYSDATE,'DD-MON-YY')) THEN 1 ELSE 0 END STATUS FROM DUAL };

$tst_query = $dbh->prepare($test_query);
$tst_query->execute();

while ( my $x =  $tst_query->fetchrow_hashref()){
	$test = $x->{STATUS};
} 

if ($test eq 1){

	$date = qq{ 
	SELECT WEEK_NUMBER_THIS_YEAR, DATE_KEY, TO_CHAR(DATE_FLD, 'DD Mon YYYY') DATE_FLD, WEEK_ST_DATE_KEY, WEEK_END_DATE_KEY 
	FROM DIM_DATE 
	WHERE DATE_FLD = (SELECT TO_DATE(VALUE,'YYYY-MM-DD') FROM ADMIN_ETL_SUMMARY)
	 };

	my $sth_date_1 = $dbh->prepare ($date);
	 $sth_date_1->execute;

	while (my $x = $sth_date_1->fetchrow_hashref()) {
		$as_of = $x->{DATE_FLD};
	}

	printf "Test ETL Status = ". $test ." \nArc BI Sales Performance Part 1\nGenerating Data from Source \n";
 
	$workbook = Excel::Writer::XLSX->new("ARC BI VALIDATION - Summary (as of $as_of).xlsx");
	$border1 = $workbook->add_format( border => 1, align => 'center', valign => 'right', size => 10, num_format => 4 );
	$desc = $workbook->add_format( border => 1, align => 'left', valign => 'vcenter', size => 10 );
	$desc2 = $workbook->add_format( border => 1, align => 'center', valign => 'vcenter', text_wrap =>1, size => 10, shrink => 1 );
	
	&dimension;
	&sale_header;
	&sale_line;
	&sale_invc_tender;
	&sale_invc_discount;
	&sale_line_discount;
	&fct_to_agg;
	
	$workbook->close();
	$tst_query->finish();
	$dbh->disconnect; 
	
	&mail;
	
	exit;
	
}

else{
	print "Test Status = ". $test ." \nETL still running\n";
	
	$tst_query->finish();
	
	sleep(1500);
	
	goto START;
}

sub dimension{
my $worksheet = $workbook->add_worksheet("dimension");
$worksheet->set_column( 0, 2, 30 );

	
	my $a = 2;
	my $col = 0;
	my $row = 1;
	
	foreach my $i ( "NEW STORE ADDED IN BI" ) {
		$worksheet->write( $row, $col++, $i, $desc2 );
	}
	
	my $query1 = qq {
		SELECT S.STORE AS STORE_CODE 
		FROM STORE S WHERE S.STORE NOT IN (SELECT STORE FROM DIM_STORE)
	};
	my $query_handle1 = $dbh->prepare($query1);
	$query_handle1->execute();
	
	while (my $y = $query_handle1->fetchrow_hashref()) {
		$worksheet->write($a, 0, $y->{STORE_CODE},$desc);
		$a++;
	}
	
	$query_handle1->finish();
	
	$a += 3;
	$col = 0;
	$row += 3;
	
	foreach my $i ( "ITEM_COUNT_RMS", "ITEM_COUNT_BI" ) {
		$worksheet->write( $row, $col++, $i, $desc2 );
	}
	
	my $query2 = qq {
		SELECT ITEM_COUNT_RMS, ITEM_COUNT_BI FROM
			(SELECT COUNT(*) AS ITEM_COUNT_RMS FROM ITEM_MASTER) A, 
			(SELECT COUNT(*) AS ITEM_COUNT_BI FROM DIM_PRODUCT WHERE ARC_DATE=(SELECT TO_CHAR(SYSDATE,'DD MON YYYY') FROM DUAL))B
	};
	my $query_handle2 = $dbh->prepare($query2);
	$query_handle2->execute();
	
	while (my $y = $query_handle2->fetchrow_hashref()) {
		$worksheet->write($a, 0, $y->{ITEM_COUNT_RMS},$desc);
		$worksheet->write($a, 1, $y->{ITEM_COUNT_BI},$desc);
		$a++;
	}
	
	$query_handle2->finish();
	
	$a += 2;
	$col = 0;
	$row += 3;
	
	foreach my $i ( "VENDOR_COUNT_RMS", "VENDOR_COUNT_BI" ) {
		$worksheet->write( $row, $col++, $i, $desc2 );
	}
	
	my $query3 = qq {
		SELECT VENDOR_COUNT_RMS, VENDOR_COUNT_BI FROM
			(SELECT COUNT(*) AS VENDOR_COUNT_RMS FROM SUPS)A,  
			(SELECT COUNT(*) AS VENDOR_COUNT_BI FROM DIM_VENDOR)B
	};
	my $query_handle3 = $dbh->prepare($query3);
	$query_handle3->execute();
	
	while (my $y = $query_handle3->fetchrow_hashref()) {
		$worksheet->write($a, 0, $y->{VENDOR_COUNT_RMS},$desc);
		$worksheet->write($a, 1, $y->{VENDOR_COUNT_BI},$desc);
		$a++;
	}
	
	$query_handle3->finish();
	
	$a += 2;
	$col = 0;
	$row += 3;
	
	foreach my $i ( "TENDER_TYPE_COUNT_RMS", "TENDER_TYPE_COUNT_BI" ) {
		$worksheet->write( $row, $col++, $i, $desc2 );
	}
	
	my $query4 = qq {
		SELECT TENDER_TYPE_COUNT_RMS, TENDER_TYPE_COUNT_BI FROM
			(SELECT COUNT(*) AS TENDER_TYPE_COUNT_BI FROM DIM_TENDERTYPE)A,  
			(Select count(*) AS TENDER_TYPE_COUNT_RMS from POS_TENDER_TYPE_HEAD)B
	};
	my $query_handle4 = $dbh->prepare($query4);
	$query_handle4->execute();
	
	while (my $y = $query_handle4->fetchrow_hashref()) {
		$worksheet->write($a, 0, $y->{TENDER_TYPE_COUNT_RMS},$desc);
		$worksheet->write($a, 1, $y->{TENDER_TYPE_COUNT_BI},$desc);
		$a++;
	}
	
	$query_handle4->finish();
	
	$a += 2;
	$col = 0;
	$row += 3;
	
	foreach my $i ( "ADJ_TYPE_RMS", "ADJ_TYPE_BI" ) {
		$worksheet->write( $row, $col++, $i, $desc2 );
	}
	
	my $query5 = qq {
		SELECT ADJ_TYPE_RMS, ADJ_TYPE_BI FROM
			(SELECT COUNT(*) AS ADJ_TYPE_BI FROM DIM_ADJ_TYPE)A,  
			(SELECT COUNT(*) AS ADJ_TYPE_RMS FROM INV_ADJ_REASON)B
	};
	my $query_handle5 = $dbh->prepare($query5);
	$query_handle5->execute();
	
	while (my $y = $query_handle5->fetchrow_hashref()) {
		$worksheet->write($a, 0, $y->{ADJ_TYPE_RMS},$desc);
		$worksheet->write($a, 1, $y->{ADJ_TYPE_BI},$desc);
		$a++;
	}
	
	$query_handle5->finish();
	
	$a += 2;
	$col = 0;
	$row += 3;
	
	foreach my $i ( "NEW CASHIER CODE ADDED IN BI" ) {
		$worksheet->write( $row, $col++, $i, $desc2 );
	}
	
	my $query6 = qq {
		SELECT DISTINCT CASHIER FROM SA_TRAN_HEAD WHERE CASHIER NOT IN (SELECT CASHIER_CODE FROM DIM_CASHIER)
	};
	my $query_handle6 = $dbh->prepare($query6);
	$query_handle6->execute();
	
	while (my $y = $query_handle6->fetchrow_hashref()) {
		$worksheet->write($a, 0, $y->{CASHIER},$desc);
		$a++;
	}
	
	$query_handle6->finish();
}
 
sub sale_header{
my $worksheet = $workbook->add_worksheet("sale_header");
	$worksheet->set_column( 0, 0, 5 );
	$worksheet->set_column( 1, 5, 12 );
	$worksheet->set_column( 6, 6, 1 );
	$worksheet->set_column( 7, 11, 12 );
	$worksheet->set_column( 12, 12, 1 );
	$worksheet->set_column( 13, 17, 10 );
	my $a = 2;
	my $col = 0;
	
	foreach my $i ( "STORE", "STG_SALE_TOT_QTY", "STG_SALE_NET_VAL", "STG_SALE_RCVD_VAL", "STG_SALE_TOT_TAX_VAL", "STG_SALE_TOT_DISC_VAL", "", "FCT_SALE_TOT_QTY", "FCT_SALE_NET_VAL", "FCT_SALE_RCVD_VAL", "FCT_SALE_TOT_TAX_VAL", "FCT_SALE_TOT_DISC_VAL", "", "DIFF_SALE_TOT_QTY", "DIFF_SALE_NET_VAL", "DIFF_SALE_RCVD_VAL", "DIFF_SALE_TOT_TAX_VAL", "DIFF_SALE_TOT_DISC_VAL" ) {
		$worksheet->write( 1, $col++, $i, $desc2 );
	}
	
	my $query = qq {
		SELECT STG.STORE_CODE, STG_SALE_TOT_QTY, STG_SALE_NET_VAL, STG_SALE_RCVD_VAL, STG_SALE_TOT_TAX_VAL, STG_SALE_TOT_DISC_VAL, FCT.FCT_SALE_TOT_QTY, FCT_SALE_NET_VAL, FCT_SALE_RCVD_VAL, FCT_SALE_TOT_TAX_VAL, FCT_SALE_TOT_DISC_VAL, (NVL(STG_SALE_TOT_QTY,0))-(NVL(FCT_SALE_TOT_QTY,0)) DIFF_SALE_TOT_QTY, (NVL(STG_SALE_NET_VAL,0))-(NVL(FCT_SALE_NET_VAL,0)) DIFF_SALE_NET_VAL, (NVL(STG_SALE_RCVD_VAL,0))-(NVL(FCT_SALE_RCVD_VAL,0)) DIFF_SALE_RCVD_VAL, (NVL(STG_SALE_TOT_TAX_VAL,0))-(NVL(FCT_SALE_TOT_TAX_VAL,0)) DIFF_SALE_TOT_TAX_VAL, (NVL(STG_SALE_TOT_DISC_VAL,0))-(NVL(FCT_SALE_TOT_DISC_VAL,0)) DIFF_SALE_TOT_DISC_VAL
		FROM 
			(SELECT  STORE_CODE, SUM(SALE_TOT_QTY) AS STG_SALE_TOT_QTY, SUM(SALE_NET_VAL) AS STG_SALE_NET_VAL, SUM(SALE_RCVD_VAL) AS STG_SALE_RCVD_VAL, SUM(SALE_TOT_TAX_VAL) AS  STG_SALE_TOT_TAX_VAL, SUM(SALE_TOT_DISC_VAL) AS STG_SALE_TOT_DISC_VAL
			FROM
				(SELECT SH.TRAN_DATETIME AS TRANS_DATE, SH.TRAN_SEQ_NO AS INVOICE_NO, SH.TRAN_TYPE AS SALE_INVC_TYPE, SH.SUB_TRAN_TYPE AS SALE_INVC_SUB_TYPE, SH.STATUS    AS SALE_INVC_STATUS, SH.STORE AS STORE_CODE, CASE WHEN LENGTH(SH.TRAN_NO) >=10 THEN SUBSTR(SH.TRAN_NO,1,3) ELSE SUBSTR(LPAD(SH.TRAN_NO,10,'0'),1,3) END AS TILL_CODE, SH.CASHIER AS CASHIER_CODE, SUM(SL.QTY) AS SALE_TOT_QTY, SUM(SL.QTY * SL.UNIT_RETAIL) AS SALE_NET_VAL, SUM(SGT.TOTAL_IGTAX_AMT) AS SALE_TOT_TAX_VAL, SUM(SD.SALE_TOT_DISC_VAL) AS SALE_TOT_DISC_VAL , COUNT(SL.ITEM_SEQ_NO) AS SALE_TOT_ITEM_COUNT, 0 AS SALE_TOT_PACK_COUNT
				FROM SA_TRAN_HEAD SH
					JOIN SA_TRAN_ITEM SL ON SH.TRAN_SEQ_NO = SL.TRAN_SEQ_NO AND SH.STORE = SL.STORE
					LEFT JOIN SA_TRAN_IGTAX SGT ON SH.TRAN_SEQ_NO = SGT.TRAN_SEQ_NO AND SL.ITEM_SEQ_NO=SGT.ITEM_SEQ_NO
					LEFT JOIN (SELECT TRAN_SEQ_NO,ITEM_SEQ_NO, SUM(QTY*UNIT_DISCOUNT_AMT) AS SALE_TOT_DISC_VAL FROM  SA_TRAN_DISC GROUP BY TRAN_SEQ_NO,ITEM_SEQ_NO )SD ON SH.TRAN_SEQ_NO = SD.TRAN_SEQ_NO AND SL.ITEM_SEQ_NO =SD.ITEM_SEQ_NO
				GROUP BY SH.TRAN_DATETIME, SH.TRAN_SEQ_NO, SH.TRAN_TYPE, SH.SUB_TRAN_TYPE, SH.STATUS, SH.STORE, SH.TRAN_NO, SH.CASHIER) F 
				LEFT JOIN 
				(SELECT TRAN_SEQ_NO,SUM(TENDER_AMT) AS SALE_RCVD_VAL FROM SA_TRAN_TENDER  GROUP BY TRAN_SEQ_NO)ST ON F.INVOICE_NO = ST.TRAN_SEQ_NO
			GROUP BY STORE_CODE
			ORDER  BY STORE_CODE)STG
		LEFT JOIN
			(SELECT STORE_CODE, SUM (SALE_TOT_QTY) FCT_SALE_TOT_QTY, SUM (SALE_NET_VAL) FCT_SALE_NET_VAL, SUM (SALE_RCVD_VAL) FCT_SALE_RCVD_VAL, SUM (SALE_TOT_TAX_VAL) FCT_SALE_TOT_TAX_VAL, SUM(SALE_TOT_DISC_VAL) FCT_SALE_TOT_DISC_VAL
			FROM FCT_SALE_HEADER  
			WHERE ARC_DATE = (SELECT TO_CHAR(SYSDATE,'DD MON YYYY') FROM DUAL) --'02 OCT 2014'
			GROUP BY STORE_CODE)FCT
		ON STG.STORE_CODE = FCT.STORE_CODE
		ORDER BY 1
	};
	my $query_handle = $dbh->prepare($query);
	$query_handle->execute();
	
	while (my $y = $query_handle->fetchrow_hashref()) {
	$worksheet->write($a,0, $y->{STORE_CODE},$desc);
	$worksheet->write($a,1, $y->{STG_SALE_TOT_QTY},$border1);
	$worksheet->write($a,2, $y->{STG_SALE_NET_VAL},$border1);
	$worksheet->write($a,3, $y->{STG_SALE_RCVD_VAL},$border1);
	$worksheet->write($a,4, $y->{STG_SALE_TOT_TAX_VAL},$border1);
	$worksheet->write($a,5, $y->{STG_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,6, "");
	$worksheet->write($a,7, $y->{FCT_SALE_TOT_QTY},$border1);
	$worksheet->write($a,8, $y->{FCT_SALE_NET_VAL},$border1);
	$worksheet->write($a,9, $y->{FCT_SALE_RCVD_VAL},$border1);
	$worksheet->write($a,10, $y->{FCT_SALE_TOT_TAX_VAL},$border1);
	$worksheet->write($a,11, $y->{FCT_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,12, "");
	$worksheet->write($a,13, $y->{DIFF_SALE_TOT_QTY},$border1);
	$worksheet->write($a,14, $y->{DIFF_SALE_NET_VAL},$border1);
	$worksheet->write($a,15, $y->{DIFF_SALE_RCVD_VAL},$border1);
	$worksheet->write($a,16, $y->{DIFF_SALE_TOT_TAX_VAL},$border1);
	$worksheet->write($a,17, $y->{DIFF_SALE_TOT_DISC_VAL},$border1);
	$a++;
}
	
	$query_handle->finish();
}

sub sale_line{
my $worksheet = $workbook->add_worksheet("sale_line");
	$worksheet->set_column( 0, 0, 5 );
	$worksheet->set_column( 1, 8, 12 );
	$worksheet->set_column( 9, 9, 1 );
	$worksheet->set_column( 10, 17, 12 );
	$worksheet->set_column( 18, 18, 1 );
	$worksheet->set_column( 19, 26, 12 );
	$worksheet->set_column( 27, 27, 1 );
	$worksheet->set_column( 28, 35, 12 );
	my $a = 2;
	my $col = 0;
	
	foreach my $i ( "STORE", "STG_SALE_TOT_QTY", "STG_SALE_NET_VAL", "STG_SALE_TOT_TAX_VAL", "STG_PRODUCT_FULL_PRICE", "STG_ACTUAL_SELLING_PRICE", "STG_SALE_TOT_DISC_VAL", "STG_SALE_MARKDOWN_QTY", "STG_SALE_MARKDOWN_VAL", 
	"", "FCT_SALE_TOT_QTY", "FCT_SALE_NET_VAL", "FCT_SALE_TOT_TAX_VAL", "FCT_PRODUCT_FULL_PRICE", "FCT_ACTUAL_SELLING_PRICE", "FCT_SALE_TOT_DISC_VAL", "FCT_SALE_MARKDOWN_QTY", "FCT_SALE_MARKDOWN_VAL", 
	"", "DIFF_SALE_TOT_QTY", "DIFF_SALE_NET_VAL", "DIFF_SALE_TOT_TAX_VAL", "DIFF_PRODUCT_FULL_PRICE", "DIFF_ACTUAL_SELLING_PRICE", "DIFF_SALE_TOT_DISC_VAL", "DIFF_SALE_MARKDOWN_QTY", "DIFF_SALE_MARKDOWN_VAL", 
	"", "EXC_SALE_TOT_QTY", "EXC_SALE_NET_VAL", "EXC_SALE_TOT_TAX_VAL", "EXC_PRODUCT_FULL_PRICE", "EXC_ACTUAL_SELLING_PRICE", "EXC_SALE_TOT_DISC_VAL", "EXC_SALE_MARKDOWN_QTY", "EXC_SALE_MARKDOWN_VAL" ) {
		$worksheet->write( 1, $col++, $i, $desc2 );
	}
	
	my $query = qq {
		SELECT STG.STORE_CODE, STG_SALE_TOT_QTY, STG_SALE_NET_VAL, STG_SALE_TOT_TAX_VAL, STG_PRODUCT_FULL_PRICE, STG_ACTUAL_SELLING_PRICE, STG_SALE_TOT_DISC_VAL, STG_SALE_MARKDOWN_QTY, STG_SALE_MARKDOWN_VAL, FCT_SALE_TOT_QTY, FCT_SALE_NET_VAL, FCT_SALE_TOT_TAX_VAL, FCT_PRODUCT_FULL_PRICE, FCT_ACTUAL_SELLING_PRICE, FCT_SALE_TOT_DISC_VAL, FCT_SALE_MARKDOWN_QTY,FCT_SALE_MARKDOWN_VAL, (NVL(STG_SALE_TOT_QTY,0)-(NVL(FCT_SALE_TOT_QTY,0))) DIFF_SALE_TOT_QTY, (NVL(STG_SALE_NET_VAL,0)-(NVL(FCT_SALE_NET_VAL,0))) DIFF_SALE_NET_VAL, (NVL(STG_SALE_TOT_TAX_VAL,0)-(NVL(FCT_SALE_TOT_TAX_VAL,0))) DIFF_SALE_TOT_TAX_VAL, (NVL(STG_PRODUCT_FULL_PRICE,0)-(NVL(FCT_PRODUCT_FULL_PRICE,0))) DIFF_PRODUCT_FULL_PRICE, (NVL(STG_ACTUAL_SELLING_PRICE,0)-(NVL(FCT_ACTUAL_SELLING_PRICE,0))) DIFF_ACTUAL_SELLING_PRICE, (NVL(STG_SALE_TOT_DISC_VAL,0)-(NVL(FCT_SALE_TOT_DISC_VAL,0))) DIFF_SALE_TOT_DISC_VAL, (NVL(STG_SALE_MARKDOWN_QTY,0)-(NVL(FCT_SALE_MARKDOWN_QTY,0))) DIFF_SALE_MARKDOWN_QTY, (NVL(STG_SALE_MARKDOWN_VAL,0)-(NVL(FCT_SALE_MARKDOWN_VAL,0))) DIFF_SALE_MARKDOWN_VAL, EXC_SALE_TOT_QTY, STG_SALE_NET_VAL, EXC_SALE_TOT_TAX_VAL, EXC_PRODUCT_FULL_PRICE, EXC_ACTUAL_SELLING_PRICE, EXC_SALE_TOT_DISC_VAL, EXC_SALE_MARKDOWN_QTY, EXC_SALE_MARKDOWN_VAL
	FROM 
	(SELECT SH.STORE AS STORE_CODE, SUM(SL.QTY) AS STG_SALE_TOT_QTY, SUM(SL.QTY * SL.UNIT_RETAIL) AS STG_SALE_NET_VAL, SUM(TOTAL_IGTAX_AMT) AS STG_SALE_TOT_TAX_VAL, SUM(CST.AV_COST) AS STG_PRODUCT_FULL_PRICE, SUM(SL.UNIT_RETAIL) AS STG_ACTUAL_SELLING_PRICE, SUM(SALE_TOT_DISC_VAL) AS STG_SALE_TOT_DISC_VAL, SUM( CASE WHEN IC.CLEAR_IND ='Y' THEN NVL(SL.QTY,0)  ELSE 0 END)  AS  STG_SALE_MARKDOWN_QTY, SUM( CASE WHEN IC.CLEAR_IND ='Y' THEN  NVL(SL.QTY,0) * ( NVL(IC.REGULAR_UNIT_RETAIL,0) -NVL( SL.UNIT_RETAIL,0)) ELSE 0 END) AS STG_SALE_MARKDOWN_VAL
	FROM SA_TRAN_HEAD SH
		JOIN SA_TRAN_ITEM SL ON SH.TRAN_SEQ_NO = SL.TRAN_SEQ_NO AND SH.STORE = SL.STORE
		LEFT JOIN (SELECT TRAN_SEQ_NO,ITEM_SEQ_NO, SUM(QTY*UNIT_DISCOUNT_AMT) AS SALE_TOT_DISC_VAL FROM  SA_TRAN_DISC GROUP BY TRAN_SEQ_NO,ITEM_SEQ_NO) SD ON SH.TRAN_SEQ_NO = SD.TRAN_SEQ_NO AND SL.ITEM_SEQ_NO =SD.ITEM_SEQ_NO
		LEFT JOIN ITEM_LOC_SOH CST ON SL.ITEM = CST.ITEM AND SL.STORE = CST.LOC
		LEFT JOIN ITEM_LOC IC ON IC.ITEM = SL.ITEM AND IC.LOC = SL.STORE AND IC.CLEAR_IND ='Y'
	GROUP BY  SH.STORE)STG
	LEFT JOIN
	(SELECT STORE_CODE, SUM(SALE_TOT_QTY) FCT_SALE_TOT_QTY, SUM(SALE_NET_VAL) FCT_SALE_NET_VAL, SUM(SALE_TOT_TAX_VAL) FCT_SALE_TOT_TAX_VAL, SUM(PRODUCT_FULL_PRICE) FCT_PRODUCT_FULL_PRICE, SUM(ACTUAL_SELLING_PRICE) FCT_ACTUAL_SELLING_PRICE, SUM(SALE_TOT_DISC_VAL) FCT_SALE_TOT_DISC_VAL, SUM(SALE_MARKDOWN_QTY) FCT_SALE_MARKDOWN_QTY, SUM(SALE_MARKDOWN_VAL) FCT_SALE_MARKDOWN_VAL 
	FROM FCT_SALE_LINE
	WHERE ARC_DATE = (SELECT TO_CHAR(SYSDATE,'DD MON YYYY') FROM DUAL) --'02 OCT 2014'
	GROUP BY STORE_CODE)FCT
	ON STG.STORE_CODE = FCT.STORE_CODE
	LEFT JOIN
	(SELECT STORE_CODE, SUM(SALE_TOT_QTY) EXC_SALE_TOT_QTY, SUM(SALE_NET_VAL) EXC_SALE_NET_VAL, SUM(SALE_TOT_TAX_VAL) EXC_SALE_TOT_TAX_VAL, SUM(PRODUCT_FULL_PRICE) EXC_PRODUCT_FULL_PRICE, SUM(ACTUAL_SELLING_PRICE) EXC_ACTUAL_SELLING_PRICE, SUM(SALE_TOT_DISC_VAL) EXC_SALE_TOT_DISC_VAL, SUM(SALE_MARKDOWN_QTY) EXC_SALE_MARKDOWN_QTY, SUM(SALE_MARKDOWN_VAL) EXC_SALE_MARKDOWN_VAL
	FROM FCT_SALE_LINE_NON_MERCH
	WHERE ARC_DATE = (SELECT TO_CHAR(SYSDATE,'DD MON YYYY') FROM DUAL) --'02 OCT 2014'
	GROUP BY STORE_CODE)EXC
	ON FCT.STORE_CODE = EXC.STORE_CODE
	ORDER BY 1
	};
	my $query_handle = $dbh->prepare($query);
	$query_handle->execute();
	
	while (my $y = $query_handle->fetchrow_hashref()) {
	$worksheet->write($a,0, $y->{STORE_CODE},$desc);
	$worksheet->write($a,1, $y->{STG_SALE_TOT_QTY},$border1);
	$worksheet->write($a,2, $y->{STG_SALE_NET_VAL},$border1);
	$worksheet->write($a,3, $y->{STG_SALE_TOT_TAX_VAL},$border1);
	$worksheet->write($a,4, $y->{STG_PRODUCT_FULL_PRICE},$border1);
	$worksheet->write($a,5, $y->{STG_ACTUAL_SELLING_PRICE},$border1);
	$worksheet->write($a,6, $y->{STG_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,7, $y->{STG_SALE_MARKDOWN_QTY},$border1);
	$worksheet->write($a,8, $y->{STG_SALE_MARKDOWN_VAL},$border1);
	$worksheet->write($a,9, "");
	$worksheet->write($a,10, $y->{FCT_SALE_TOT_QTY},$border1);
	$worksheet->write($a,11, $y->{FCT_SALE_NET_VAL},$border1);
	$worksheet->write($a,12, $y->{FCT_SALE_TOT_TAX_VAL},$border1);
	$worksheet->write($a,13, $y->{FCT_PRODUCT_FULL_PRICE},$border1);
	$worksheet->write($a,14, $y->{FCT_ACTUAL_SELLING_PRICE},$border1);
	$worksheet->write($a,15, $y->{FCT_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,16, $y->{FCT_SALE_MARKDOWN_QTY},$border1);
	$worksheet->write($a,17, $y->{FCT_SALE_MARKDOWN_VAL},$border1);
	$worksheet->write($a,18, "");
	$worksheet->write($a,19, $y->{DIFF_SALE_TOT_QTY},$border1);
	$worksheet->write($a,20, $y->{DIFF_SALE_NET_VAL},$border1);
	$worksheet->write($a,21, $y->{DIFF_SALE_TOT_TAX_VAL},$border1);
	$worksheet->write($a,22, $y->{DIFF_PRODUCT_FULL_PRICE},$border1);
	$worksheet->write($a,23, $y->{DIFF_ACTUAL_SELLING_PRICE},$border1);
	$worksheet->write($a,24, $y->{DIFF_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,25, $y->{DIFF_SALE_MARKDOWN_QTY},$border1);
	$worksheet->write($a,26, $y->{DIFF_SALE_MARKDOWN_VAL},$border1);
	$worksheet->write($a,27, "");
	$worksheet->write($a,28, $y->{DIFF_SALE_TOT_QTY},$border1);
	$worksheet->write($a,29, $y->{DIFF_SALE_NET_VAL},$border1);
	$worksheet->write($a,30, $y->{DIFF_SALE_TOT_TAX_VAL},$border1);
	$worksheet->write($a,31, $y->{DIFF_PRODUCT_FULL_PRICE},$border1);
	$worksheet->write($a,32, $y->{DIFF_ACTUAL_SELLING_PRICE},$border1);
	$worksheet->write($a,33, $y->{DIFF_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,34, $y->{DIFF_SALE_MARKDOWN_QTY},$border1);
	$worksheet->write($a,35, $y->{DIFF_SALE_MARKDOWN_VAL},$border1);
	$a++;
}
	
	$query_handle->finish();
}

sub sale_invc_tender{
my $worksheet = $workbook->add_worksheet("sale_invc_tender");
	$worksheet->set_column( 0, 0, 5 );
	$worksheet->set_column( 1, 1, 12 );
	$worksheet->set_column( 2, 2, 1 );
	$worksheet->set_column( 3, 3, 12 );
	$worksheet->set_column( 4, 4, 1 );
	$worksheet->set_column( 5, 5, 12 );
	my $a = 2;
	my $col = 0;
	
	foreach my $i ( "STORE", "STG_TENDER_VAL", "", "FCT_TENDER_VAL", "", "DIFF_TENDER_VAL") {
		$worksheet->write( 1, $col++, $i, $desc2 );
	}
	
	my $query = qq {
	SELECT STG.STORE_CODE, STG.STG_TENDER_VAL, FCT.FCT_TENDER_VAL, ((NVL(STG_TENDER_VAL,0))-(NVL(FCT_TENDER_VAL,0))) DIFF_TENDER_VAL
	FROM
	(SELECT ST.STORE AS STORE_CODE, SUM(TENDER_AMT) AS STG_TENDER_VAL
	FROM SA_TRAN_HEAD SH
		JOIN SA_TRAN_TENDER ST ON SH.TRAN_SEQ_NO = ST.TRAN_SEQ_NO
	GROUP BY ST.STORE)STG
	LEFT JOIN
	(SELECT STORE_CODE, SUM(TENDER_VAL) AS FCT_TENDER_VAL
	FROM FCT_SALE_INVOICE_TENDER
	WHERE ARC_DATE = (SELECT TO_CHAR(SYSDATE,'DD MON YYYY') FROM DUAL) --'02 OCT 2014'
	GROUP BY STORE_CODE)FCT
	ON STG.STORE_CODE = FCT.STORE_CODE
	ORDER BY 1
	};
	my $query_handle = $dbh->prepare($query);
	$query_handle->execute();
	
	while (my $y = $query_handle->fetchrow_hashref()) {
	$worksheet->write($a,0, $y->{STORE_CODE},$desc);
	$worksheet->write($a,1, $y->{STG_TENDER_VAL},$border1);
	$worksheet->write($a,2, "");
	$worksheet->write($a,3, $y->{FCT_TENDER_VAL},$border1);
	$worksheet->write($a,4, "");
	$worksheet->write($a,5, $y->{DIFF_TENDER_VAL},$border1);
	$a++;
}
	
	$query_handle->finish();
}

sub sale_invc_discount{
my $worksheet = $workbook->add_worksheet("sale_invc_discount");
	$worksheet->set_column( 0, 0, 5 );
	$worksheet->set_column( 1, 2, 12 );
	$worksheet->set_column( 3, 3, 1 );
	$worksheet->set_column( 4, 5, 12 );
	$worksheet->set_column( 6, 6, 1 );
	$worksheet->set_column( 7, 8, 12 );
	$worksheet->set_column( 9, 9, 1 );
	$worksheet->set_column( 10, 11, 12 );
	my $a = 2;
	my $col = 0;
	
	foreach my $i ( "STORE", "STG_SALE_TOT_DISC_QTY", "STG_SALE_TOT_DISC_VAL", "", "FCT_SALE_TOT_DISC_QTY", "FCT_SALE_TOT_DISC_VAL", "", "DIFF_SALE_TOT_DISC_QTY", "DIFF_SALE_TOT_DISC_VAL", "", "EXC_SALE_TOT_DISC_QTY", "EXC_SALE_TOT_DISC_VAL" ) {
		$worksheet->write( 1, $col++, $i, $desc2 );
	}
	
	my $query = qq {
	SELECT STG.STORE_CODE, STG_SALE_TOT_DISC_QTY, STG_SALE_TOT_DISC_VAL, FCT.FCT_SALE_TOT_DISC_QTY, FCT_SALE_TOT_DISC_VAL, ((NVL(STG_SALE_TOT_DISC_QTY,0))-(NVL(FCT_SALE_TOT_DISC_QTY,0))) DIFF_SALE_TOT_DISC_QTY, ((NVL(STG_SALE_TOT_DISC_VAL,0))-(NVL(FCT_SALE_TOT_DISC_VAL,0))) DIFF_SALE_TOT_DISC_VAL, EXC_SALE_TOT_DISC_QTY, EXC_SALE_TOT_DISC_VAL
	FROM
	(SELECT STORE_CODE, SUM(SALE_TOT_DISC_QTY) AS STG_SALE_TOT_DISC_QTY, SUM(SALE_TOT_DISC_VAL) AS STG_SALE_TOT_DISC_VAL
	FROM 
		(SELECT TO_DATE(TO_CHAR(TRAN_DATETIME,'MM/DD/YYYY'),'MM/DD/YYYY') AS TRANS_DATE, CASE WHEN LENGTH(SH.TRAN_NO) >=10 THEN SUBSTR(SH.TRAN_NO,1,3) ELSE SUBSTR(LPAD(SH.TRAN_NO,10,'0'),1,3) END AS TILL_CODE, SH.TRAN_SEQ_NO AS INVOICE_NO, TRAN_TYPE AS SALE_INVC_TYPE, DISC_TYPE AS DISCOUNT_TYPE_CODE, SD.STORE AS STORE_CODE, SD.QTY AS SALE_TOT_DISC_QTY, (SD.QTY*SD.UNIT_DISCOUNT_AMT) AS SALE_TOT_DISC_VAL
		FROM SA_TRAN_HEAD SH
			JOIN SA_TRAN_DISC SD ON SH.TRAN_SEQ_NO = SD.TRAN_SEQ_NO)SID
	GROUP BY  STORE_CODE)STG
	LEFT JOIN
	(SELECT STORE_CODE, SUM(SALE_TOT_DISC_QTY) AS FCT_SALE_TOT_DISC_QTY, SUM(SALE_TOT_DISC_VAL) AS FCT_SALE_TOT_DISC_VAL
	FROM FCT_SALE_INVOICE_DISCOUNT
	WHERE ARC_DATE = (SELECT TO_CHAR(SYSDATE,'DD MON YYYY') FROM DUAL) --'02 OCT 2014'
	GROUP BY STORE_CODE)FCT
	ON STG.STORE_CODE = FCT.STORE_CODE
	LEFT JOIN
	(SELECT STORE_CODE, SUM(SALE_TOT_DISC_QTY) AS EXC_SALE_TOT_DISC_QTY, SUM(SALE_TOT_DISC_VAL) AS EXC_SALE_TOT_DISC_VAL
	FROM 
		(SELECT TO_DATE(TO_CHAR(TRAN_DATETIME,'MM/DD/YYYY'),'MM/DD/YYYY') AS TRANS_DATE, CASE WHEN LENGTH(SH.TRAN_NO) >=10 THEN SUBSTR(SH.TRAN_NO,1,3) ELSE SUBSTR(LPAD(SH.TRAN_NO,10,'0'),1,3) END AS TILL_CODE, SH.TRAN_SEQ_NO AS INVOICE_NO, TRAN_TYPE AS SALE_INVC_TYPE, DISC_TYPE AS DISCOUNT_TYPE_CODE, SD.STORE AS STORE_CODE, SD.QTY AS SALE_TOT_DISC_QTY, (SD.QTY*SD.UNIT_DISCOUNT_AMT) AS SALE_TOT_DISC_VAL
		FROM SA_TRAN_HEAD SH
			JOIN SA_TRAN_DISC SD ON SH.TRAN_SEQ_NO = SD.TRAN_SEQ_NO AND DISC_TYPE IS NULL) SID
	GROUP BY STORE_CODE)EXC
	ON STG.STORE_CODE = EXC.STORE_CODE
	ORDER BY 1
	};
	my $query_handle = $dbh->prepare($query);
	$query_handle->execute();
	
	while (my $y = $query_handle->fetchrow_hashref()) {
	$worksheet->write($a,0, $y->{STORE_CODE},$desc);
	$worksheet->write($a,1, $y->{STG_SALE_TOT_DISC_QTY},$border1);
	$worksheet->write($a,2, $y->{STG_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,3, "");
	$worksheet->write($a,4, $y->{FCT_SALE_TOT_DISC_QTY},$border1);
	$worksheet->write($a,5, $y->{FCT_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,6, "");
	$worksheet->write($a,7, $y->{DIFF_SALE_TOT_DISC_QTY},$border1);
	$worksheet->write($a,8, $y->{DIFF_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,9, "");
	$worksheet->write($a,10, $y->{EXC_SALE_TOT_DISC_QTY},$border1);
	$worksheet->write($a,11, $y->{EXC_SALE_TOT_DISC_VAL},$border1);
	$a++;
}
	
	$query_handle->finish();
}

sub sale_line_discount{
my $worksheet = $workbook->add_worksheet("sale_line_discount");
	$worksheet->set_column( 0, 0, 5 );
	$worksheet->set_column( 1, 3, 12 );
	$worksheet->set_column( 4, 4, 1 );
	$worksheet->set_column( 5, 7, 12 );
	$worksheet->set_column( 8, 8, 1 );
	$worksheet->set_column( 9, 11, 12 );
	$worksheet->set_column( 12, 12, 1 );
	$worksheet->set_column( 13, 15, 12 );
	my $a = 2;
	my $col = 0;
	
	foreach my $i ( "STORE", "STG_SALE_TOT_QTY", "STG_SALE_TOT_DISC_QTY", "STG_SALE_TOT_DISC_VAL", "", "FCT_SALE_TOT_QTY", "FCT_SALE_TOT_DISC_QTY", "FCT_SALE_TOT_DISC_VAL", "", "DIFF_SALE_TOT_QTY", "DIFF_SALE_TOT_DISC_QTY", "DIFF_SALE_TOT_DISC_VAL", "", "EXC_SALE_TOT_QTY", "EXC_SALE_TOT_DISC_QTY", "EXC_SALE_TOT_DISC_VAL" ) {
		$worksheet->write( 1, $col++, $i, $desc2 );
	}
	
	my $query = qq {
	SELECT STG.STORE_CODE, STG_SALE_TOT_QTY, STG_SALE_TOT_DISC_QTY, STG_SALE_TOT_DISC_VAL, FCT_SALE_TOT_QTY, FCT_SALE_TOT_DISC_QTY, FCT_SALE_TOT_DISC_VAL,
(NVL(STG_SALE_TOT_QTY,0))-(NVL(FCT_SALE_TOT_QTY,0)) DIFF_SALE_TOT_QTY, (NVL(STG_SALE_TOT_DISC_QTY,0))-(NVL(FCT_SALE_TOT_DISC_QTY,0)) DIFF_SALE_TOT_DISC_QTY, (NVL(STG_SALE_TOT_DISC_VAL,0))-(NVL(FCT_SALE_TOT_DISC_VAL,0)) DIFF_SALE_TOT_DISC_VAL, EXC_SALE_TOT_QTY, EXC_SALE_TOT_DISC_QTY, EXC_SALE_TOT_DISC_VAL
	FROM
	(SELECT STORE_CODE, SUM (SALE_TOT_QTY) AS STG_SALE_TOT_QTY, SUM (SALE_TOT_DISC_QTY) AS STG_SALE_TOT_DISC_QTY, SUM (SALE_TOT_DISC_VAL) AS STG_SALE_TOT_DISC_VAL
	FROM 
		(SELECT TO_DATE(TO_CHAR (SH.TRAN_DATETIME, 'MM/DD/YYYY'),'MM/DD/YYYY') AS TRANS_DATE, CASE WHEN LENGTH(SH.TRAN_NO) >=10 THEN SUBSTR(SH.TRAN_NO,1,3) ELSE SUBSTR(LPAD(SH.TRAN_NO,10,'0'),1,3) END AS TILL_CODE, SD.DISC_TYPE AS DISCOUNT_TYPE_CODE, SH.TRAN_SEQ_NO AS INVOICE_NO, SD.ITEM_SEQ_NO AS LINE_NO, SD.STORE AS STORE_CODE, SL.ITEM AS PRODUCT_CODE, SL.QTY AS SALE_TOT_QTY, SD.QTY AS SALE_TOT_DISC_QTY, (SD.QTY * SD.UNIT_DISCOUNT_AMT) AS SALE_TOT_DISC_VAL, CASE WHEN SD.PROMOTION IS NULL THEN 1 ELSE 0 END AS PROMO_FLG
		FROM SA_TRAN_HEAD SH
			 JOIN SA_TRAN_ITEM SL ON SH.TRAN_SEQ_NO = SL.TRAN_SEQ_NO
			 JOIN SA_TRAN_DISC SD ON SH.TRAN_SEQ_NO = SD.TRAN_SEQ_NO AND SL.ITEM_SEQ_NO = SD.ITEM_SEQ_NO)SLD
	GROUP BY STORE_CODE)STG
	LEFT JOIN
	(SELECT STORE_CODE, SUM (SALE_TOT_QTY) AS FCT_SALE_TOT_QTY, SUM (SALE_TOT_DISC_QTY) AS FCT_SALE_TOT_DISC_QTY, SUM (SALE_TOT_DISC_VAL) AS FCT_SALE_TOT_DISC_VAL
	FROM FCT_SALE_LINE_DISCOUNT
	WHERE ARC_DATE = (SELECT TO_CHAR(SYSDATE,'DD MON YYYY') FROM DUAL) --'02 OCT 2014'
	GROUP BY STORE_CODE)FCT
	ON STG.STORE_CODE = FCT.STORE_CODE
	LEFT JOIN
	(SELECT STORE_CODE, SUM (SALE_TOT_QTY) AS EXC_SALE_TOT_QTY, SUM (SALE_TOT_DISC_QTY) AS EXC_SALE_TOT_DISC_QTY, SUM (SALE_TOT_DISC_VAL) AS EXC_SALE_TOT_DISC_VAL
	FROM 
		(SELECT TO_DATE(TO_CHAR (SH.TRAN_DATETIME, 'MM/DD/YYYY'),'MM/DD/YYYY') AS TRANS_DATE, CASE WHEN LENGTH(SH.TRAN_NO) >=10 THEN SUBSTR(SH.TRAN_NO,1,3) ELSE SUBSTR(LPAD(SH.TRAN_NO,10,'0'),1,3) END AS TILL_CODE, SD.DISC_TYPE AS DISCOUNT_TYPE_CODE, SH.TRAN_SEQ_NO AS INVOICE_NO, SD.STORE AS STORE_CODE, SL.ITEM AS PRODUCT_CODE, SL.QTY AS SALE_TOT_QTY, SD.QTY AS SALE_TOT_DISC_QTY, (SD.QTY * SD.UNIT_DISCOUNT_AMT) AS SALE_TOT_DISC_VAL, CASE WHEN SD.PROMOTION IS NULL THEN 1 ELSE 0 END AS PROMO_FLG
		FROM SA_TRAN_HEAD SH 
			JOIN SA_TRAN_ITEM SL ON SH.TRAN_SEQ_NO = SL.TRAN_SEQ_NO
			JOIN SA_TRAN_DISC SD ON SH.TRAN_SEQ_NO = SD.TRAN_SEQ_NO AND SL.ITEM_SEQ_NO = SD.ITEM_SEQ_NO AND (DISC_TYPE IS NULL OR SL.ITEM IS NULL)) SLD
	GROUP BY STORE_CODE)EXC
	ON STG.STORE_CODE = EXC.STORE_CODE
	ORDER BY 1	
	};
	my $query_handle = $dbh->prepare($query);
	$query_handle->execute();
	
	while (my $y = $query_handle->fetchrow_hashref()) {
	$worksheet->write($a,0, $y->{STORE_CODE},$desc);
	$worksheet->write($a,1, $y->{STG_SALE_TOT_QTY},$border1);
	$worksheet->write($a,2, $y->{STG_SALE_TOT_DISC_QTY},$border1);
	$worksheet->write($a,3, $y->{STG_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,4, "");
	$worksheet->write($a,5, $y->{FCT_SALE_TOT_QTY},$border1);
	$worksheet->write($a,6, $y->{FCT_SALE_TOT_DISC_QTY},$border1);
	$worksheet->write($a,7, $y->{FCT_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,8, "");
	$worksheet->write($a,9, $y->{DIFF_SALE_TOT_QTY},$border1);
	$worksheet->write($a,10, $y->{DIFF_SALE_TOT_DISC_QTY},$border1);
	$worksheet->write($a,11, $y->{DIFF_SALE_TOT_DISC_VAL},$border1);
	$worksheet->write($a,12, "");
	$worksheet->write($a,13, $y->{EXC_SALE_TOT_QTY},$border1);
	$worksheet->write($a,14, $y->{EXC_SALE_TOT_DISC_QTY},$border1);
	$worksheet->write($a,15, $y->{EXC_SALE_TOT_DISC_VAL},$border1);
	$a++;
}
	
	$query_handle->finish();
}

sub fct_to_agg{
my $worksheet = $workbook->add_worksheet("fct_to_agg");
	$worksheet->set_column( 0, 0, 5 );
	$worksheet->set_column( 1, 28, 12 );
	$worksheet->set_column( 29, 30, 1 );
	$worksheet->set_column( 31, 58, 12 );
	$worksheet->set_column( 59, 60, 1 );
	$worksheet->set_column( 61, 88, 12 );
	$worksheet->set_column( 89, 90, 1 );
	$worksheet->set_column( 91, 118, 12 );
	$worksheet->set_column( 119, 120, 1 );
	$worksheet->set_column( 121, 146, 12 );
	$worksheet->set_column( 147, 150, 1 );
	$worksheet->set_column( 151, 176, 12 );
	$worksheet->set_column( 177, 180, 1 );
	$worksheet->set_column( 181, 206, 12 );
	$worksheet->set_column( 207, 210, 1 );
	$worksheet->set_column( 211, 236, 12 );
	
	$worksheet->merge_range( 0, 1, 0, 28, 'FCT', $desc2 );
	$worksheet->merge_range( 0, 31, 0, 58, 'AGG DLY STR PROD', $desc2 );
	$worksheet->merge_range( 0, 61, 0, 88, 'AGG_DLY_STR', $desc2 );
	$worksheet->merge_range( 0, 91, 0, 118, 'AGG DLY STR DEPT', $desc2 );
	$worksheet->merge_range( 0, 121, 0, 146, 'AGG DLY STR PROD (MONTHLY KEY)', $desc2 );
	$worksheet->merge_range( 0, 151, 0, 176, 'AGG MLY STR PROD', $desc2 );
	$worksheet->merge_range( 0, 181, 0, 206, 'AGG MLY STR', $desc2 );
	$worksheet->merge_range( 0, 211, 0, 232, 'AGG MLY STR DEPT', $desc2 );
	
	my $a = 2;
	my $col = 0;
	
	foreach my $i ( 
	"STORE_CODE", "SALE_TOT_QTY", "SALE_NET_VAL", "SALE_RETURN_QTY", "SALE_RETURN_VAL", "SALE_TOT_DISC_VAL", "SALE_MARKDOWN_QTY", "SALE_MARKDOWN_VAL", "SALE_TOT_TAX_VAL", "SALE_TOT_VAL_AT_PP", "SALE_TOT_VAL_AT_SP", "SALE_RETURN_VAL_AT_RETAIL", "SALE_TOT_VAL_AT_PP_VAT", "VO_TRF_IN_QTY", "VO_TRF_IN_VAL_AT_PP", "VO_TRF_IN_VAL_AT_SP", "VO_TRF_OUT_QTY", "VO_TRF_OUT_VAL_AT_PP", "VO_TRF_OUT_VAL_AT_SP", "INV_ADJ_QTY", "INV_ADJ_VAL", "VO_TOT_RECD_QTY", "VO_NET_RECD_VAL", "VO_RETURN_QTY", "VO_RETURN_VAL", "VO_GLOBAL_DISC_VAL", "VO_TOT_TAX_VAL", "VO_TOT_RECD_VAL_AT_PP", "VO_TOT_RECD_VAL_AT_HOSP", "", "", 
	"SALE_TOT_QTY", "SALE_NET_VAL", "SALE_RETURN_QTY", "SALE_RETURN_VAL", "SALE_TOT_DISC_VAL", "SALE_MARKDOWN_QTY", "SALE_MARKDOWN_VAL", "SALE_TOT_TAX_VAL", "SALE_TOT_VAL_AT_PP", "SALE_TOT_VAL_AT_SP", "SALE_RETURN_VAL_AT_RETAIL", "SALE_TOT_VAL_AT_PP_VAT", "VO_TRF_IN_QTY", "VO_TRF_IN_VAL_AT_PP", "VO_TRF_IN_VAL_AT_SP", "VO_TRF_OUT_QTY", "VO_TRF_OUT_VAL_AT_PP", "VO_TRF_OUT_VAL_AT_SP", "INV_ADJ_QTY", "INV_ADJ_VAL", "VO_TOT_RECD_QTY", "VO_NET_RECD_VAL", "VO_RETURN_QTY", "VO_RETURN_VAL", "VO_GLOBAL_DISC_VAL", "VO_TOT_TAX_VAL", "VO_TOT_RECD_VAL_AT_PP", "VO_TOT_RECD_VAL_AT_HOSP", "", "",
	"SALE_TOT_QTY", "SALE_NET_VAL", "SALE_RETURN_QTY", "SALE_RETURN_VAL", "SALE_TOT_DISC_VAL", "SALE_MARKDOWN_QTY", "SALE_MARKDOWN_VAL", "SALE_TOT_TAX_VAL", "SALE_TOT_VAL_AT_PP", "SALE_TOT_VAL_AT_SP", "SALE_RETURN_VAL_AT_RETAIL", "SALE_TOT_VAL_AT_PP_VAT", "VO_TRF_IN_QTY", "VO_TRF_IN_VAL_AT_PP", "VO_TRF_IN_VAL_AT_SP", "VO_TRF_OUT_QTY", "VO_TRF_OUT_VAL_AT_PP", "VO_TRF_OUT_VAL_AT_SP", "INV_ADJ_QTY", "INV_ADJ_VAL", "VO_TOT_RECD_QTY", "VO_NET_RECD_VAL", "VO_RETURN_QTY", "VO_RETURN_VAL", "VO_GLOBAL_DISC_VAL", "VO_TOT_TAX_VAL", "VO_TOT_RECD_VAL_AT_PP", "VO_TOT_RECD_VAL_AT_HOSP", "", "",
	"SALE_TOT_QTY", "SALE_NET_VAL", "SALE_RETURN_QTY", "SALE_RETURN_VAL", "SALE_TOT_DISC_VAL", "SALE_MARKDOWN_QTY", "SALE_MARKDOWN_VAL", "SALE_TOT_TAX_VAL", "SALE_TOT_VAL_AT_PP", "SALE_TOT_VAL_AT_SP", "SALE_RETURN_VAL_AT_RETAIL", "SALE_TOT_VAL_AT_PP_VAT", "VO_TRF_IN_QTY", "VO_TRF_IN_VAL_AT_PP", "VO_TRF_IN_VAL_AT_SP", "VO_TRF_OUT_QTY", "VO_TRF_OUT_VAL_AT_PP", "VO_TRF_OUT_VAL_AT_SP", "INV_ADJ_QTY", "INV_ADJ_VAL", "VO_TOT_RECD_QTY", "VO_NET_RECD_VAL", "VO_RETURN_QTY", "VO_RETURN_VAL", "VO_GLOBAL_DISC_VAL", "VO_TOT_TAX_VAL", "VO_TOT_RECD_VAL_AT_PP", "VO_TOT_RECD_VAL_AT_HOSP", "", "",
	"SALE_TOT_QTY", "SALE_NET_VAL", "SALE_RETURN_QTY", "SALE_RETURN_VAL", "SALE_TOT_DISC_VAL", "SALE_MARKDOWN_QTY", "SALE_MARKDOWN_VAL", "SALE_TOT_TAX_VAL", "SALE_TOT_VAL_AT_PP", "SALE_TOT_VAL_AT_SP", "SALE_RETURN_VAL_AT_RETAIL", "SALE_TOT_VAL_AT_PP_VAT", "VO_TRF_IN_QTY", "VO_TRF_IN_VAL_AT_PP", "VO_TRF_IN_VAL_AT_SP", "VO_TRF_OUT_QTY", "VO_TRF_OUT_VAL_AT_PP", "VO_TRF_OUT_VAL_AT_SP", "INV_ADJ_QTY", "INV_ADJ_VAL", "VO_TOT_RECD_QTY", "VO_NET_RECD_VAL", "VO_RETURN_QTY", "VO_RETURN_VAL", "VO_TOT_RECD_VAL_AT_PP", "VO_TOT_RECD_VAL_AT_HOSP","","","","",
	"SALE_TOT_QTY", "SALE_NET_VAL", "SALE_RETURN_QTY", "SALE_RETURN_VAL", "SALE_TOT_DISC_VAL", "SALE_MARKDOWN_QTY", "SALE_MARKDOWN_VAL", "SALE_TOT_TAX_VAL", "SALE_TOT_VAL_AT_PP", "SALE_TOT_VAL_AT_SP", "SALE_RETURN_VAL_AT_RETAIL", "SALE_TOT_VAL_AT_PP_VAT", "VO_TRF_IN_QTY", "VO_TRF_IN_VAL_AT_PP", "VO_TRF_IN_VAL_AT_SP", "VO_TRF_OUT_QTY", "VO_TRF_OUT_VAL_AT_PP", "VO_TRF_OUT_VAL_AT_SP", "INV_ADJ_QTY", "INV_ADJ_VAL", "VO_TOT_RECD_QTY", "VO_NET_RECD_VAL", "VO_RETURN_QTY", "VO_RETURN_VAL", "VO_TOT_RECD_VAL_AT_PP", "VO_TOT_RECD_VAL_AT_HOSP","","","","",
	"SALE_TOT_QTY", "SALE_NET_VAL", "SALE_RETURN_QTY", "SALE_RETURN_VAL", "SALE_TOT_DISC_VAL", "SALE_MARKDOWN_QTY", "SALE_MARKDOWN_VAL", "SALE_TOT_TAX_VAL", "SALE_TOT_VAL_AT_PP", "SALE_TOT_VAL_AT_SP", "SALE_RETURN_VAL_AT_RETAIL", "SALE_TOT_VAL_AT_PP_VAT", "VO_TRF_IN_QTY", "VO_TRF_IN_VAL_AT_PP", "VO_TRF_IN_VAL_AT_SP", "VO_TRF_OUT_QTY", "VO_TRF_OUT_VAL_AT_PP", "VO_TRF_OUT_VAL_AT_SP", "INV_ADJ_QTY", "INV_ADJ_VAL", "VO_TOT_RECD_QTY", "VO_NET_RECD_VAL", "VO_RETURN_QTY", "VO_RETURN_VAL", "VO_TOT_RECD_VAL_AT_PP", "VO_TOT_RECD_VAL_AT_HOSP","","","","",
	"SALE_TOT_QTY", "SALE_NET_VAL", "SALE_RETURN_QTY", "SALE_RETURN_VAL", "SALE_TOT_DISC_VAL", "SALE_MARKDOWN_QTY", "SALE_MARKDOWN_VAL", "SALE_TOT_TAX_VAL", "SALE_TOT_VAL_AT_PP", "SALE_TOT_VAL_AT_SP", "SALE_RETURN_VAL_AT_RETAIL", "SALE_TOT_VAL_AT_PP_VAT", "VO_TRF_IN_QTY", "VO_TRF_IN_VAL_AT_PP", "VO_TRF_IN_VAL_AT_SP", "VO_TRF_OUT_QTY", "VO_TRF_OUT_VAL_AT_PP", "VO_TRF_OUT_VAL_AT_SP", "INV_ADJ_QTY", "INV_ADJ_VAL", "VO_TOT_RECD_QTY", "VO_NET_RECD_VAL", "VO_RETURN_QTY", "VO_RETURN_VAL", "VO_TOT_RECD_VAL_AT_PP", "VO_TOT_RECD_VAL_AT_HOSP") {
		$worksheet->write( 1, $col++, $i, $desc2 );
	}
	
	my $query = qq {
		SELECT 
FCT.STORE_CODE, 
FCT.FCT_SALE_TOT_QTY, FCT.FCT_SALE_NET_VAL, FCT.FCT_SALE_RETURN_QTY, FCT.FCT_SALE_RETURN_VAL, FCT.FCT_SALE_TOT_DISC_VAL, FCT.FCT_SALE_MARKDOWN_QTY, FCT.FCT_SALE_MARKDOWN_VAL, FCT.FCT_SALE_TOT_TAX_VAL, FCT.FCT_SALE_TOT_VAL_AT_PP, FCT.FCT_SALE_TOT_VAL_AT_SP, FCT.FCT_SALE_RETURN_VAL_AT_RETAIL, FCT.FCT_SALE_TOT_VAL_AT_PP_VAT, FCT.FCT_VO_TRF_IN_QTY, FCT.FCT_VO_TRF_IN_VAL_AT_PP, FCT.FCT_VO_TRF_IN_VAL_AT_SP, FCT.FCT_VO_TRF_OUT_QTY, FCT.FCT_VO_TRF_OUT_VAL_AT_PP, FCT.FCT_VO_TRF_OUT_VAL_AT_SP, FCT.FCT_INV_ADJ_QTY, FCT_INV_ADJ_VAL, FCT.FCT_VO_TOT_RECD_QTY, FCT.FCT_VO_NET_RECD_VAL, FCT.FCT_VO_RETURN_QTY, FCT.FCT_VO_RETURN_VAL, FCT.FCT_VO_GLOBAL_DISC_VAL, FCT.FCT_VO_TOT_TAX_VAL, FCT.FCT_VO_TOT_RECD_VAL_AT_PP, FCT.FCT_VO_TOT_RECD_VAL_AT_HOSP
,ADSP.ADSP_SALE_TOT_QTY, ADSP.ADSP_SALE_NET_VAL, ADSP.ADSP_SALE_RETURN_QTY, ADSP.ADSP_SALE_RETURN_VAL, ADSP.ADSP_SALE_TOT_DISC_VAL, ADSP.ADSP_SALE_MARKDOWN_QTY, ADSP.ADSP_SALE_MARKDOWN_VAL, ADSP.ADSP_SALE_TOT_TAX_VAL, ADSP.ADSP_SALE_TOT_VAL_AT_PP, ADSP.ADSP_SALE_TOT_VAL_AT_SP, ADSP.ADSP_SALE_RETURN_VAL_AT_RETAIL, ADSP.ADSP_SALE_TOT_VAL_AT_PP_VAT, ADSP.ADSP_VO_TRF_IN_QTY, ADSP.ADSP_VO_TRF_IN_VAL_AT_PP, ADSP.ADSP_VO_TRF_IN_VAL_AT_SP, ADSP.ADSP_VO_TRF_OUT_QTY, ADSP.ADSP_VO_TRF_OUT_VAL_AT_PP, ADSP.ADSP_VO_TRF_OUT_VAL_AT_SP, ADSP.ADSP_INV_ADJ_QTY, ADSP.ADSP_INV_ADJ_VAL, ADSP.ADSP_VO_TOT_RECD_QTY, ADSP.ADSP_VO_NET_RECD_VAL, ADSP.ADSP_VO_RETURN_QTY, ADSP.ADSP_VO_RETURN_VAL, ADSP.ADSP_VO_GLOBAL_DISC_VAL, ADSP.ADSP_VO_TOT_TAX_VAL, ADSP.ADSP_VO_TOT_RECD_VAL_AT_PP, ADSP.ADSP_VO_TOT_RECD_VAL_AT_HOSP
,ADS.ADS_SALE_TOT_QTY, ADS.ADS_SALE_NET_VAL, ADS.ADS_SALE_RETURN_QTY, ADS.ADS_SALE_RETURN_VAL, ADS.ADS_SALE_TOT_DISC_VAL, ADS.ADS_SALE_MARKDOWN_QTY, ADS.ADS_SALE_MARKDOWN_VAL, ADS.ADS_SALE_TOT_TAX_VAL, ADS.ADS_SALE_TOT_VAL_AT_PP, ADS.ADS_SALE_TOT_VAL_AT_SP, ADS.ADS_SALE_RETURN_VAL_AT_RETAIL, ADS.ADS_SALE_TOT_VAL_AT_PP_VAT, ADS.ADS_VO_TRF_IN_QTY, ADS.ADS_VO_TRF_IN_VAL_AT_PP, ADS.ADS_VO_TRF_IN_VAL_AT_SP, ADS.ADS_VO_TRF_OUT_QTY, ADS.ADS_VO_TRF_OUT_VAL_AT_PP, ADS.ADS_VO_TRF_OUT_VAL_AT_SP, ADS.ADS_INV_ADJ_QTY, ADS.ADS_INV_ADJ_VAL, ADS.ADS_VO_TOT_RECD_QTY, ADS.ADS_VO_NET_RECD_VAL, ADS.ADS_VO_RETURN_QTY, ADS.ADS_VO_RETURN_VAL, ADS.ADS_VO_GLOBAL_DISC_VAL, ADS.ADS_VO_TOT_TAX_VAL, ADS.ADS_VO_TOT_RECD_VAL_AT_PP, ADS.ADS_VO_TOT_RECD_VAL_AT_HOSP
,ADSD.ADSD_SALE_TOT_QTY, ADSD.ADSD_SALE_NET_VAL, ADSD.ADSD_SALE_RETURN_QTY, ADSD.ADSD_SALE_RETURN_VAL, ADSD.ADSD_SALE_TOT_DISC_VAL, ADSD.ADSD_SALE_MARKDOWN_QTY, ADSD.ADSD_SALE_MARKDOWN_VAL, ADSD.ADSD_SALE_TOT_TAX_VAL, ADSD.ADSD_SALE_TOT_VAL_AT_PP, ADSD.ADSD_SALE_TOT_VAL_AT_SP, ADSD.ADSD_SALE_RETURN_VAL_AT_RETAIL, ADSD.ADSD_SALE_TOT_VAL_AT_PP_VAT, ADSD.ADSD_VO_TRF_IN_QTY, ADSD.ADSD_VO_TRF_IN_VAL_AT_PP, ADSD.ADSD_VO_TRF_IN_VAL_AT_SP, ADSD.ADSD_VO_TRF_OUT_QTY, ADSD.ADSD_VO_TRF_OUT_VAL_AT_PP, ADSD.ADSD_VO_TRF_OUT_VAL_AT_SP, ADSD.ADSD_INV_ADJ_QTY, ADSD.ADSD_INV_ADJ_VAL, ADSD.ADSD_VO_TOT_RECD_QTY, ADSD.ADSD_VO_NET_RECD_VAL, ADSD.ADSD_VO_RETURN_QTY, ADSD.ADSD_VO_RETURN_VAL, ADSD.ADSD_VO_GLOBAL_DISC_VAL, ADSD.ADSD_VO_TOT_TAX_VAL, ADSD.ADSD_VO_TOT_RECD_VAL_AT_PP, ADSD.ADSD_VO_TOT_RECD_VAL_AT_HOSP
,ADSPM.ADSPM_SALE_TOT_QTY, ADSPM.ADSPM_SALE_NET_VAL, ADSPM.ADSPM_SALE_RETURN_QTY, ADSPM.ADSPM_SALE_RETURN_VAL, ADSPM.ADSPM_SALE_TOT_DISC_VAL, ADSPM.ADSPM_SALE_MARKDOWN_QTY, ADSPM.ADSPM_SALE_MARKDOWN_VAL, ADSPM.ADSPM_SALE_TOT_TAX_VAL, ADSPM.ADSPM_SALE_TOT_VAL_AT_PP, ADSPM.ADSPM_SALE_TOT_VAL_AT_SP, ADSPM.ADSPM_SALE_RETURN_VAL_AT_RET, ADSPM.ADSPM_SALE_TOT_VAL_AT_PP_VAT, ADSPM.ADSPM_VO_TRF_IN_QTY, ADSPM.ADSPM_VO_TRF_IN_VAL_AT_PP, ADSPM.ADSPM_VO_TRF_IN_VAL_AT_SP, ADSPM.ADSPM_VO_TRF_OUT_QTY, ADSPM.ADSPM_VO_TRF_OUT_VAL_AT_PP, ADSPM.ADSPM_VO_TRF_OUT_VAL_AT_SP, ADSPM.ADSPM_INV_ADJ_QTY, ADSPM.ADSPM_INV_ADJ_VAL, ADSPM.ADSPM_VO_TOT_RECD_QTY, ADSPM.ADSPM_VO_NET_RECD_VAL, ADSPM.ADSPM_VO_RETURN_QTY, ADSPM.ADSPM_VO_RETURN_VAL, ADSPM.ADSPM_VO_TOT_RECD_VAL_AT_PP, ADSPM.ADSPM_VO_TOT_RECD_VAL_AT_HOSP
,AMSP.AMSP_SALE_TOT_QTY, AMSP.AMSP_SALE_NET_VAL, AMSP.AMSP_SALE_RETURN_QTY, AMSP.AMSP_SALE_RETURN_VAL, AMSP.AMSP_SALE_TOT_DISC_VAL, AMSP.AMSP_SALE_MARKDOWN_QTY, AMSP.AMSP_SALE_MARKDOWN_VAL, AMSP.AMSP_SALE_TOT_TAX_VAL, AMSP.AMSP_SALE_TOT_VAL_AT_PP, AMSP.AMSP_SALE_TOT_VAL_AT_SP, AMSP.AMSP_SALE_RETURN_VAL_AT_RETAIL, AMSP.AMSP_SALE_TOT_VAL_AT_PP_VAT, AMSP.AMSP_VO_TRF_IN_QTY, AMSP.AMSP_VO_TRF_IN_VAL_AT_PP, AMSP.AMSP_VO_TRF_IN_VAL_AT_SP, AMSP.AMSP_VO_TRF_OUT_QTY, AMSP.AMSP_VO_TRF_OUT_VAL_AT_PP, AMSP.AMSP_VO_TRF_OUT_VAL_AT_SP, AMSP.AMSP_INV_ADJ_QTY, AMSP.AMSP_INV_ADJ_VAL, AMSP.AMSP_VO_TOT_RECD_QTY, AMSP.AMSP_VO_NET_RECD_VAL, AMSP.AMSP_VO_RETURN_QTY, AMSP.AMSP_VO_RETURN_VAL, AMSP.AMSP_VO_TOT_RECD_VAL_AT_PP, AMSP.AMSP_VO_TOT_RECD_VAL_AT_HOSP
,AMS.AMS_SALE_TOT_QTY, AMS.AMS_SALE_NET_VAL, AMS.AMS_SALE_RETURN_QTY, AMS.AMS_SALE_RETURN_VAL, AMS.AMS_SALE_TOT_DISC_VAL, AMS.AMS_SALE_MARKDOWN_QTY, AMS.AMS_SALE_MARKDOWN_VAL, AMS.AMS_SALE_TOT_TAX_VAL, AMS.AMS_SALE_TOT_VAL_AT_PP, AMS.AMS_SALE_TOT_VAL_AT_SP, AMS.AMS_SALE_RETURN_VAL_AT_RETAIL, AMS.AMS_SALE_TOT_VAL_AT_PP_VAT, AMS.AMS_VO_TRF_IN_QTY, AMS.AMS_VO_TRF_IN_VAL_AT_PP, AMS.AMS_VO_TRF_IN_VAL_AT_SP, AMS.AMS_VO_TRF_OUT_QTY, AMS.AMS_VO_TRF_OUT_VAL_AT_PP, AMS.AMS_VO_TRF_OUT_VAL_AT_SP, AMS.AMS_INV_ADJ_QTY, AMS.AMS_INV_ADJ_VAL, AMS.AMS_VO_TOT_RECD_QTY, AMS.AMS_VO_NET_RECD_VAL, AMS.AMS_VO_RETURN_QTY, AMS.AMS_VO_RETURN_VAL, AMS.AMS_VO_TOT_RECD_VAL_AT_PP, AMS.AMS_VO_TOT_RECD_VAL_AT_HOSP
,AMSD.AMSD_SALE_TOT_QTY, AMSD.AMSD_SALE_NET_VAL, AMSD.AMSD_SALE_RETURN_QTY, AMSD.AMSD_SALE_RETURN_VAL, AMSD.AMSD_SALE_TOT_DISC_VAL, AMSD.AMSD_SALE_MARKDOWN_QTY, AMSD.AMSD_SALE_MARKDOWN_VAL, AMSD.AMSD_SALE_TOT_TAX_VAL, AMSD.AMSD_SALE_TOT_VAL_AT_PP, AMSD.AMSD_SALE_TOT_VAL_AT_SP, AMSD.AMSD_SALE_RETURN_VAL_AT_RETAIL, AMSD.AMSD_SALE_TOT_VAL_AT_PP_VAT, AMSD.AMSD_VO_TRF_IN_QTY, AMSD.AMSD_VO_TRF_IN_VAL_AT_PP, AMSD.AMSD_VO_TRF_IN_VAL_AT_SP, AMSD.AMSD_VO_TRF_OUT_QTY, AMSD.AMSD_VO_TRF_OUT_VAL_AT_PP, AMSD.AMSD_VO_TRF_OUT_VAL_AT_SP, AMSD.AMSD_INV_ADJ_QTY, AMSD.AMSD_INV_ADJ_VAL, AMSD.AMSD_VO_TOT_RECD_QTY, AMSD.AMSD_VO_NET_RECD_VAL, AMSD.AMSD_VO_RETURN_QTY, AMSD.AMSD_VO_RETURN_VAL, AMSD.AMSD_VO_TOT_RECD_VAL_AT_PP, AMSD.AMSD_VO_TOT_RECD_VAL_AT_HOSP
FROM
----------------- FCT TABLE ------------
(
SELECT STORE_CODE,
SUM( SALE_TOT_QTY)  FCT_SALE_TOT_QTY,
SUM( SALE_NET_VAL)  FCT_SALE_NET_VAL,
SUM( SALE_RETURN_QTY)  FCT_SALE_RETURN_QTY,
SUM( SALE_RETURN_VAL)  FCT_SALE_RETURN_VAL,
SUM( SALE_TOT_DISC_VAL)  FCT_SALE_TOT_DISC_VAL,
SUM( SALE_MARKDOWN_QTY)  FCT_SALE_MARKDOWN_QTY,
SUM( SALE_MARKDOWN_VAL)  FCT_SALE_MARKDOWN_VAL,
SUM( SALE_TOT_TAX_VAL)  FCT_SALE_TOT_TAX_VAL,
SUM( SALE_TOT_VAL_AT_PP)  FCT_SALE_TOT_VAL_AT_PP,
SUM( SALE_TOT_VAL_AT_SP)  FCT_SALE_TOT_VAL_AT_SP,
SUM( SALE_RETURN_VAL_AT_RETAIL)  FCT_SALE_RETURN_VAL_AT_RETAIL,
SUM( SALE_TOT_VAL_AT_PP_VAT)  FCT_SALE_TOT_VAL_AT_PP_VAT,
SUM( VO_TRF_IN_QTY)  FCT_VO_TRF_IN_QTY,
SUM( VO_TRF_IN_VAL_AT_PP)  FCT_VO_TRF_IN_VAL_AT_PP,
SUM( VO_TRF_IN_VAL_AT_SP)  FCT_VO_TRF_IN_VAL_AT_SP,
SUM( VO_TRF_OUT_QTY)  FCT_VO_TRF_OUT_QTY,
SUM( VO_TRF_OUT_VAL_AT_PP)  FCT_VO_TRF_OUT_VAL_AT_PP,
SUM( VO_TRF_OUT_VAL_AT_SP)  FCT_VO_TRF_OUT_VAL_AT_SP,
SUM( INV_ADJ_QTY)  FCT_INV_ADJ_QTY,
SUM( INV_ADJ_VAL)  FCT_INV_ADJ_VAL,
SUM( VO_TOT_RECD_QTY)  FCT_VO_TOT_RECD_QTY,
SUM( VO_NET_RECD_VAL)  FCT_VO_NET_RECD_VAL,
SUM( VO_RETURN_QTY)  FCT_VO_RETURN_QTY,
SUM( VO_RETURN_VAL)  FCT_VO_RETURN_VAL,
SUM( VO_GLOBAL_DISC_VAL)  FCT_VO_GLOBAL_DISC_VAL,
SUM( VO_TOT_TAX_VAL)  FCT_VO_TOT_TAX_VAL,
SUM( VO_TOT_RECD_VAL_AT_PP)  FCT_VO_TOT_RECD_VAL_AT_PP,
SUM( VO_TOT_RECD_VAL_AT_HOSP)  FCT_VO_TOT_RECD_VAL_AT_HOSP
FROM (
SELECT 
        FL.STORE_CODE STORE_CODE,
        SUM(CASE WHEN FH.SALE_INVC_TYPE IN ('SALE','RETURN') AND FH.SALE_INVC_SUB_TYPE IN ('SALE','LAYCMP','RETURN') THEN FL.SALE_TOT_QTY END) AS SALE_TOT_QTY,
        SUM(CASE WHEN FH.SALE_INVC_TYPE IN ('SALE','RETURN') AND FH.SALE_INVC_SUB_TYPE IN ('SALE','LAYCMP','RETURN') THEN FL.SALE_NET_VAL END) AS SALE_NET_VAL,
        SUM(CASE WHEN FH.SALE_INVC_TYPE ='RETURN' AND FH.SALE_INVC_SUB_TYPE ='RETURN' THEN FL.SALE_TOT_QTY*-1 ELSE 0 END)  AS SALE_RETURN_QTY,
        SUM(CASE WHEN FH.SALE_INVC_TYPE ='RETURN' AND FH.SALE_INVC_SUB_TYPE ='RETURN' THEN FL.SALE_NET_VAL*-1 ELSE 0 END)  AS SALE_RETURN_VAL,
        SUM(FL.SALE_TOT_DISC_VAL) AS SALE_TOT_DISC_VAL,
         SUM(SALE_MARKDOWN_QTY) AS SALE_MARKDOWN_QTY,
         SUM(SALE_MARKDOWN_VAL) AS SALE_MARKDOWN_VAL,
        SUM(CASE WHEN FH.SALE_INVC_TYPE IN ('SALE','RETURN') AND FH.SALE_INVC_SUB_TYPE IN ('SALE','LAYCMP','RETURN') THEN FL.SALE_TOT_TAX_VAL END) AS SALE_TOT_TAX_VAL,
        SUM(CASE WHEN FH.SALE_INVC_TYPE IN ('SALE','RETURN') AND FH.SALE_INVC_SUB_TYPE IN ('SALE','LAYCMP','RETURN') THEN FL.SALE_TOT_QTY * FL.PRODUCT_FULL_PRICE END) AS SALE_TOT_VAL_AT_PP,
        SUM(CASE WHEN FH.SALE_INVC_TYPE IN ('SALE','RETURN') AND FH.SALE_INVC_SUB_TYPE IN ('SALE','LAYCMP','RETURN') THEN FL.SALE_TOT_QTY * FL.ACTUAL_SELLING_PRICE END)    AS SALE_TOT_VAL_AT_SP,
        SUM (
                CASE
                   WHEN FL.SALE_INVC_TYPE = 'RETURN' AND FH.SALE_INVC_SUB_TYPE ='RETURN' 
                   THEN
                      (FL.SALE_TOT_QTY
                       * (FL.ACTUAL_SELLING_PRICE
                          - (CASE
                                WHEN RVAT.VAT_RATE IS NOT NULL
                                THEN
                                   (FL.ACTUAL_SELLING_PRICE
                                    * (RVAT.VAT_RATE / (100)))
                                ELSE
                                   0
                             END)))
                      * -1
                   ELSE
                      0
                END)
                AS SALE_RETURN_VAL_AT_RETAIL,
             SUM (CASE WHEN FH.SALE_INVC_TYPE IN ('SALE','RETURN') AND FH.SALE_INVC_SUB_TYPE IN ('SALE','LAYCMP','RETURN') THEN
                FL.SALE_TOT_QTY
                * (FL.PRODUCT_FULL_PRICE
                   + CASE
                        WHEN CVAT.VAT_RATE IS NOT NULL
                        THEN
                           (FL.PRODUCT_FULL_PRICE * (CVAT.VAT_RATE / (100)))
                        ELSE
                           0
                     END) END)
                AS SALE_TOT_VAL_AT_PP_VAT,
0 VO_TRF_IN_QTY,
0 VO_TRF_IN_VAL_AT_PP,
0 VO_TRF_IN_VAL_AT_SP,
0 VO_TRF_OUT_QTY,
0 VO_TRF_OUT_VAL_AT_PP,
0 VO_TRF_OUT_VAL_AT_SP,
0 INV_ADJ_QTY,
0 INV_ADJ_VAL,
0 VO_TOT_RECD_QTY,
0 VO_NET_RECD_VAL,
0 VO_RETURN_QTY,
0 VO_RETURN_VAL,
0 VO_GLOBAL_DISC_VAL,
0 VO_TOT_TAX_VAL,
0 VO_TOT_RECD_VAL_AT_PP,
0 VO_TOT_RECD_VAL_AT_HOSP

    FROM FCT_SALE_LINE FL
    JOIN FCT_SALE_HEADER FH
    ON FL.DATE_KEY = FH.DATE_KEY
    AND FL.DATE_KEY BETWEEN  (SELECT AGG_DLY_START_DATE_KEY FROM ADMIN_ETL_DATE_PARAMETER) and  (SELECT AGG_DLY_END_DATE_KEY FROM ADMIN_ETL_DATE_PARAMETER) ---- (Agg_Dly_Start_date_key and Agg_Dly_end_date_key from admin_etl_date_parameter)
    AND FL.INVOICE_NO = FH.INVOICE_NO
    AND FL.STORE_CODE = FH.STORE_CODE
    JOIN DIM_DATE D
    ON FL.DATE_KEY = D.DATE_KEY
    JOIN DIM_STORE S
    ON FL.STORE_CODE   = S.STORE_CODE 
       AND  S.VALID_FROM <= D.DATE_FLD
       AND  S.VALID_TO > D.DATE_FLD
    JOIN DIM_PRODUCT P
    ON FL.PRODUCT_CODE = P.PRODUCT_CODE 
       AND  P.VALID_FROM <= D.DATE_FLD
       AND  P.VALID_TO > D.DATE_FLD
    LEFT JOIN DIM_VAT_RETAIL RVAT
    ON RVAT.PRODUCT_CODE = FL.PRODUCT_CODE
       AND  RVAT.VALID_FROM <= D.DATE_FLD
       AND  RVAT.VALID_TO > D.DATE_FLD
    LEFT JOIN DIM_VAT_COST CVAT
    ON CVAT.PRODUCT_CODE = FL.PRODUCT_CODE
       AND  CVAT.VALID_FROM <= D.DATE_FLD
       AND  CVAT.VALID_TO > D.DATE_FLD
     WHERE FH.SALE_INVC_STATUS = 'P'
GROUP BY 
FL.STORE_CODE

UNION ALL

SELECT
STORE_CODE,
0 SALE_TOT_QTY,
0 SALE_NET_VAL,
0 SALE_RETURN_QTY,
0 SALE_RETURN_VAL,
0 SALE_TOT_DISC_VAL,
0 SALE_MARKDOWN_QTY,
0 SALE_MARKDOWN_VAL,
0 SALE_TOT_TAX_VAL,
0 SALE_TOT_VAL_AT_PP,
0 SALE_TOT_VAL_AT_SP,
0 SALE_RETURN_VAL_AT_RETAIL,
0 SALE_TOT_VAL_AT_PP_VAT,
SUM(CASE WHEN TRF_TYPE =1 THEN VO_TOT_TRF_QTY ELSE 0 END) AS VO_TRF_IN_QTY,
    SUM(CASE WHEN TRF_TYPE =1 THEN VO_TRF_VAL_AT_PP ELSE 0 END) AS VO_TRF_IN_VAL_AT_PP,
    SUM(CASE WHEN TRF_TYPE =1 THEN VO_TRF_VAL_AT_SP ELSE 0 END) AS VO_TRF_IN_VAL_AT_SP,
    SUM(CASE WHEN TRF_TYPE =2 THEN VO_TOT_TRF_QTY ELSE 0 END) AS VO_TRF_OUT_QTY,
    SUM(CASE WHEN TRF_TYPE =2 THEN VO_TRF_VAL_AT_PP ELSE 0 END) AS VO_TRF_OUT_VAL_AT_PP,
    SUM(CASE WHEN TRF_TYPE =2 THEN VO_TRF_VAL_AT_SP ELSE 0 END) AS VO_TRF_OUT_VAL_AT_SP,
0    INV_ADJ_QTY,
0 INV_ADJ_VAL,
0 VO_TOT_RECD_QTY,
0 VO_NET_RECD_VAL,
0 VO_RETURN_QTY,
0 VO_RETURN_VAL,
0 VO_GLOBAL_DISC_VAL,
0 VO_TOT_TAX_VAL,
0 VO_TOT_RECD_VAL_AT_PP,
0 VO_TOT_RECD_VAL_AT_HOSP
FROM FCT_TRF_LINE F, ADMIN_ETL_DATE_PARAMETER A
 where date_key   BETWEEN AGG_DLY_START_DATE_KEY AND AGG_DLY_END_DATE_KEY
GROUP BY 
STORE_CODE

UNION ALL
SELECT
CAST(STORE_CODE AS VARCHAR2(50)),
0 VO_TRF_IN_QTY,
0 VO_TRF_IN_VAL_AT_PP,
0 VO_TRF_IN_VAL_AT_SP,
0 VO_TRF_OUT_QTY,
0 VO_TRF_OUT_VAL_AT_PP,
0 VO_TRF_OUT_VAL_AT_SP,
0 SALE_TOT_QTY,
0 SALE_NET_VAL,
0 SALE_RETURN_QTY,
0 SALE_RETURN_VAL,
0 SALE_TOT_DISC_VAL,
0 SALE_MARKDOWN_QTY,
0 SALE_MARKDOWN_VAL,
0 SALE_TOT_TAX_VAL,
0 SALE_TOT_VAL_AT_PP,
0 SALE_TOT_VAL_AT_SP,
0 SALE_RETURN_VAL_AT_RETAIL,
0 SALE_TOT_VAL_AT_PP_VAT,
SUM(ADJ_QTY)    AS INV_ADJ_QTY,
    SUM(ADJ_COST) AS INV_ADJ_VAL,
    0 VO_TOT_RECD_QTY,
0 VO_NET_RECD_VAL,
0 VO_RETURN_QTY,
0 VO_RETURN_VAL,
0 VO_GLOBAL_DISC_VAL,
0 VO_TOT_TAX_VAL,
0 VO_TOT_RECD_VAL_AT_PP,
0 VO_TOT_RECD_VAL_AT_HOSP
FROM FCT_ADJ_DLY_STR_PROD  F, ADMIN_ETL_DATE_PARAMETER A
 where date_key   BETWEEN AGG_DLY_START_DATE_KEY AND AGG_DLY_END_DATE_KEY
GROUP BY 
STORE_CODE

 UNION ALL

 SELECT
 STORE_CODE,
0 VO_TRF_IN_QTY,
0 VO_TRF_IN_VAL_AT_PP,
0 VO_TRF_IN_VAL_AT_SP,
0 VO_TRF_OUT_QTY,
0 VO_TRF_OUT_VAL_AT_PP,
0 VO_TRF_OUT_VAL_AT_SP,
0 SALE_TOT_QTY,
0 SALE_NET_VAL,
0 SALE_RETURN_QTY,
0 SALE_RETURN_VAL,
0 SALE_TOT_DISC_VAL,
0 SALE_MARKDOWN_QTY,
0 SALE_MARKDOWN_VAL,
0 SALE_TOT_TAX_VAL,
0 SALE_TOT_VAL_AT_PP,
0 SALE_TOT_VAL_AT_SP,
0 SALE_RETURN_VAL_AT_RETAIL,
0 SALE_TOT_VAL_AT_PP_VAT,
0 INV_ADJ_QTY,
0 INV_ADJ_VAL,
SUM(CASE WHEN VOUCHER_TYPE= '1' THEN VO_TOT_RECD_QTY ELSE 0 END) AS VO_TOT_RECD_QTY,
    SUM(CASE WHEN VOUCHER_TYPE='1' THEN VO_TOT_RECD_VAL ELSE 0 END) AS VO_NET_RECD_VAL,
    SUM(CASE WHEN VOUCHER_TYPE='2' THEN VO_TOT_RECD_QTY ELSE 0 END) AS VO_RETURN_QTY,
    SUM(CASE WHEN VOUCHER_TYPE='2' THEN VO_TOT_RECD_VAL ELSE 0 END) AS VO_RETURN_VAL,
    SUM(VO_DISC_VAL) AS VO_GLOBAL_DISC_VAL,
    SUM(VO_TAX_VAL) AS VO_TOT_TAX_VAL,
    SUM(VO_TOT_RECD_VAL_AT_PP) AS VO_TOT_RECD_VAL_AT_PP,
    SUM(VO_TOT_RECD_VAL_AT_HOSP) AS VO_TOT_RECD_VAL_AT_HOSP
FROM FCT_VOUCHER_LINE F  ,ADMIN_ETL_DATE_PARAMETER A
 where date_key   BETWEEN AGG_DLY_START_DATE_KEY AND AGG_DLY_END_DATE_KEY
 GROUP BY 
STORE_CODE
)
GROUP BY STORE_CODE
ORDER BY STORE_CODE
)FCT
LEFT JOIN
------------------ AGG DLY STR PROD -------------------------------
(
SELECT
STORE_CODE,
SUM( SALE_TOT_QTY)  ADSP_SALE_TOT_QTY,
SUM( SALE_NET_VAL)  ADSP_SALE_NET_VAL,
SUM( SALE_RETURN_QTY)  ADSP_SALE_RETURN_QTY,
SUM( SALE_RETURN_VAL)  ADSP_SALE_RETURN_VAL,
SUM( SALE_TOT_DISC_VAL)  ADSP_SALE_TOT_DISC_VAL,
SUM( SALE_MARKDOWN_QTY)  ADSP_SALE_MARKDOWN_QTY,
SUM( SALE_MARKDOWN_VAL)  ADSP_SALE_MARKDOWN_VAL,
SUM( SALE_TOT_TAX_VAL)  ADSP_SALE_TOT_TAX_VAL,
SUM( SALE_TOT_VAL_AT_PP)  ADSP_SALE_TOT_VAL_AT_PP,
SUM( SALE_TOT_VAL_AT_SP)  ADSP_SALE_TOT_VAL_AT_SP,
SUM( SALE_RETURN_VAL_AT_RETAIL)  ADSP_SALE_RETURN_VAL_AT_RETAIL,
SUM( SALE_TOT_VAL_AT_PP_VAT)  ADSP_SALE_TOT_VAL_AT_PP_VAT,
SUM( VO_TRF_IN_QTY)  ADSP_VO_TRF_IN_QTY,
SUM( VO_TRF_IN_VAL_AT_PP)  ADSP_VO_TRF_IN_VAL_AT_PP,
SUM( VO_TRF_IN_VAL_AT_SP)  ADSP_VO_TRF_IN_VAL_AT_SP,
SUM( VO_TRF_OUT_QTY)  ADSP_VO_TRF_OUT_QTY,
SUM( VO_TRF_OUT_VAL_AT_PP)  ADSP_VO_TRF_OUT_VAL_AT_PP,
SUM( VO_TRF_OUT_VAL_AT_SP)  ADSP_VO_TRF_OUT_VAL_AT_SP,
SUM( INV_ADJ_QTY)  ADSP_INV_ADJ_QTY,
SUM( INV_ADJ_VAL)  ADSP_INV_ADJ_VAL,
SUM( VO_TOT_RECD_QTY)  ADSP_VO_TOT_RECD_QTY,
SUM( VO_NET_RECD_VAL)  ADSP_VO_NET_RECD_VAL,
SUM( VO_RETURN_QTY)  ADSP_VO_RETURN_QTY,
SUM( VO_RETURN_VAL)  ADSP_VO_RETURN_VAL,
SUM( VO_GLOBAL_DISC_VAL)  ADSP_VO_GLOBAL_DISC_VAL,
SUM( VO_TOT_TAX_VAL)  ADSP_VO_TOT_TAX_VAL,
SUM( VO_TOT_RECD_VAL_AT_PP)  ADSP_VO_TOT_RECD_VAL_AT_PP,
SUM( VO_TOT_RECD_VAL_AT_HOSP)  ADSP_VO_TOT_RECD_VAL_AT_HOSP
FROM AGG_DLY_STR_PROD,ADMIN_ETL_DATE_PARAMETER A
 where date_key   BETWEEN AGG_DLY_START_DATE_KEY AND AGG_DLY_END_DATE_KEY
 GROUP BY STORE_CODE
 ORDER BY STORE_CODE
)ADSP
ON FCT.STORE_CODE = ADSP.STORE_CODE
LEFT JOIN
 ---------------------- AGG_DLY_STR-------
(
SELECT
STORE_CODE,
SUM( SALE_TOT_QTY)  ADS_SALE_TOT_QTY,
SUM( SALE_NET_VAL)  ADS_SALE_NET_VAL,
SUM( SALE_RETURN_QTY)  ADS_SALE_RETURN_QTY,
SUM( SALE_RETURN_VAL)  ADS_SALE_RETURN_VAL,
SUM( SALE_TOT_DISC_VAL)  ADS_SALE_TOT_DISC_VAL,
SUM( SALE_MARKDOWN_QTY)  ADS_SALE_MARKDOWN_QTY,
SUM( SALE_MARKDOWN_VAL)  ADS_SALE_MARKDOWN_VAL,
SUM( SALE_TOT_TAX_VAL)  ADS_SALE_TOT_TAX_VAL,
SUM( SALE_TOT_VAL_AT_PP)  ADS_SALE_TOT_VAL_AT_PP,
SUM( SALE_TOT_VAL_AT_SP)  ADS_SALE_TOT_VAL_AT_SP,
SUM( SALE_RETURN_VAL_AT_RETAIL)  ADS_SALE_RETURN_VAL_AT_RETAIL,
SUM( SALE_TOT_VAL_AT_PP_VAT)  ADS_SALE_TOT_VAL_AT_PP_VAT,
SUM( VO_TRF_IN_QTY)  ADS_VO_TRF_IN_QTY,
SUM( VO_TRF_IN_VAL_AT_PP)  ADS_VO_TRF_IN_VAL_AT_PP,
SUM( VO_TRF_IN_VAL_AT_SP)  ADS_VO_TRF_IN_VAL_AT_SP,
SUM( VO_TRF_OUT_QTY)  ADS_VO_TRF_OUT_QTY,
SUM( VO_TRF_OUT_VAL_AT_PP)  ADS_VO_TRF_OUT_VAL_AT_PP,
SUM( VO_TRF_OUT_VAL_AT_SP)  ADS_VO_TRF_OUT_VAL_AT_SP,
SUM( INV_ADJ_QTY)  ADS_INV_ADJ_QTY,
SUM( INV_ADJ_VAL)  ADS_INV_ADJ_VAL,
SUM( VO_TOT_RECD_QTY)  ADS_VO_TOT_RECD_QTY,
SUM( VO_NET_RECD_VAL)  ADS_VO_NET_RECD_VAL,
SUM( VO_RETURN_QTY)  ADS_VO_RETURN_QTY,
SUM( VO_RETURN_VAL)  ADS_VO_RETURN_VAL,
SUM( VO_GLOBAL_DISC_VAL)  ADS_VO_GLOBAL_DISC_VAL,
SUM( VO_TOT_TAX_VAL)  ADS_VO_TOT_TAX_VAL,
SUM( VO_TOT_RECD_VAL_AT_PP)  ADS_VO_TOT_RECD_VAL_AT_PP,
SUM( VO_TOT_RECD_VAL_AT_HOSP)  ADS_VO_TOT_RECD_VAL_AT_HOSP
FROM AGG_DLY_STR,ADMIN_ETL_DATE_PARAMETER A
 where date_key   BETWEEN AGG_DLY_START_DATE_KEY AND AGG_DLY_END_DATE_KEY
 GROUP BY STORE_CODE
 ORDER BY STORE_CODE
)ADS
ON FCT.STORE_CODE = ADS.STORE_CODE
LEFT JOIN
-------------------------- AGG DLY STR DEPT ----------------
(
SELECT
STORE_CODE,
SUM( SALE_TOT_QTY)  ADSD_SALE_TOT_QTY,
SUM( SALE_NET_VAL)  ADSD_SALE_NET_VAL,
SUM( SALE_RETURN_QTY)  ADSD_SALE_RETURN_QTY,
SUM( SALE_RETURN_VAL)  ADSD_SALE_RETURN_VAL,
SUM( SALE_TOT_DISC_VAL)  ADSD_SALE_TOT_DISC_VAL,
SUM( SALE_MARKDOWN_QTY)  ADSD_SALE_MARKDOWN_QTY,
SUM( SALE_MARKDOWN_VAL)  ADSD_SALE_MARKDOWN_VAL,
SUM( SALE_TOT_TAX_VAL)  ADSD_SALE_TOT_TAX_VAL,
SUM( SALE_TOT_VAL_AT_PP)  ADSD_SALE_TOT_VAL_AT_PP,
SUM( SALE_TOT_VAL_AT_SP)  ADSD_SALE_TOT_VAL_AT_SP,
SUM( SALE_RETURN_VAL_AT_RETAIL)  ADSD_SALE_RETURN_VAL_AT_RETAIL,
SUM( SALE_TOT_VAL_AT_PP_VAT)  ADSD_SALE_TOT_VAL_AT_PP_VAT,
SUM( VO_TRF_IN_QTY)  ADSD_VO_TRF_IN_QTY,
SUM( VO_TRF_IN_VAL_AT_PP)  ADSD_VO_TRF_IN_VAL_AT_PP,
SUM( VO_TRF_IN_VAL_AT_SP)  ADSD_VO_TRF_IN_VAL_AT_SP,
SUM( VO_TRF_OUT_QTY)  ADSD_VO_TRF_OUT_QTY,
SUM( VO_TRF_OUT_VAL_AT_PP)  ADSD_VO_TRF_OUT_VAL_AT_PP,
SUM( VO_TRF_OUT_VAL_AT_SP)  ADSD_VO_TRF_OUT_VAL_AT_SP,
SUM( INV_ADJ_QTY)  ADSD_INV_ADJ_QTY,
SUM( INV_ADJ_VAL)  ADSD_INV_ADJ_VAL,
SUM( VO_TOT_RECD_QTY)  ADSD_VO_TOT_RECD_QTY,
SUM( VO_NET_RECD_VAL)  ADSD_VO_NET_RECD_VAL,
SUM( VO_RETURN_QTY)  ADSD_VO_RETURN_QTY,
SUM( VO_RETURN_VAL)  ADSD_VO_RETURN_VAL,
SUM( VO_GLOBAL_DISC_VAL)  ADSD_VO_GLOBAL_DISC_VAL,
SUM( VO_TOT_TAX_VAL)  ADSD_VO_TOT_TAX_VAL,
SUM( VO_TOT_RECD_VAL_AT_PP)  ADSD_VO_TOT_RECD_VAL_AT_PP,
SUM( VO_TOT_RECD_VAL_AT_HOSP)  ADSD_VO_TOT_RECD_VAL_AT_HOSP
FROM AGG_DLY_STR_DEPT,ADMIN_ETL_DATE_PARAMETER A
 where date_key   BETWEEN AGG_DLY_START_DATE_KEY AND AGG_DLY_END_DATE_KEY
 GROUP BY STORE_CODE
 ORDER BY STORE_CODE
 )ADSD
 ON FCT.STORE_CODE = ADSD.STORE_CODE
 LEFT JOIN
------------------------------------AGG DLY STR PROD (MONTHLY KEY)
(
SELECT
STORE_CODE,
SUM( SALE_TOT_QTY)  ADSPM_SALE_TOT_QTY,
SUM( SALE_NET_VAL)  ADSPM_SALE_NET_VAL,
SUM( SALE_RETURN_QTY)  ADSPM_SALE_RETURN_QTY,
SUM( SALE_RETURN_VAL)  ADSPM_SALE_RETURN_VAL,
SUM( SALE_TOT_DISC_VAL)  ADSPM_SALE_TOT_DISC_VAL,
SUM( SALE_MARKDOWN_QTY)  ADSPM_SALE_MARKDOWN_QTY,
SUM( SALE_MARKDOWN_VAL)  ADSPM_SALE_MARKDOWN_VAL,
SUM( SALE_TOT_TAX_VAL)  ADSPM_SALE_TOT_TAX_VAL,
SUM( SALE_TOT_VAL_AT_PP)  ADSPM_SALE_TOT_VAL_AT_PP,
SUM( SALE_TOT_VAL_AT_SP)  ADSPM_SALE_TOT_VAL_AT_SP,
SUM( SALE_RETURN_VAL_AT_RETAIL)  ADSPM_SALE_RETURN_VAL_AT_RET,
SUM( SALE_TOT_VAL_AT_PP_VAT)  ADSPM_SALE_TOT_VAL_AT_PP_VAT,
SUM( VO_TRF_IN_QTY)  ADSPM_VO_TRF_IN_QTY,
SUM( VO_TRF_IN_VAL_AT_PP)  ADSPM_VO_TRF_IN_VAL_AT_PP,
SUM( VO_TRF_IN_VAL_AT_SP)  ADSPM_VO_TRF_IN_VAL_AT_SP,
SUM( VO_TRF_OUT_QTY)  ADSPM_VO_TRF_OUT_QTY,
SUM( VO_TRF_OUT_VAL_AT_PP)  ADSPM_VO_TRF_OUT_VAL_AT_PP,
SUM( VO_TRF_OUT_VAL_AT_SP)  ADSPM_VO_TRF_OUT_VAL_AT_SP,
SUM( INV_ADJ_QTY)  ADSPM_INV_ADJ_QTY,
SUM( INV_ADJ_VAL)  ADSPM_INV_ADJ_VAL,
SUM( VO_TOT_RECD_QTY)  ADSPM_VO_TOT_RECD_QTY,
SUM( VO_NET_RECD_VAL)  ADSPM_VO_NET_RECD_VAL,
SUM( VO_RETURN_QTY)  ADSPM_VO_RETURN_QTY,
SUM( VO_RETURN_VAL)  ADSPM_VO_RETURN_VAL,
SUM( VO_TOT_RECD_VAL_AT_PP)  ADSPM_VO_TOT_RECD_VAL_AT_PP,
SUM( VO_TOT_RECD_VAL_AT_HOSP)  ADSPM_VO_TOT_RECD_VAL_AT_HOSP
FROM AGG_DLY_STR_PROD,ADMIN_ETL_DATE_PARAMETER A
where date_key   BETWEEN AGG_MLY_START_DATE_KEY AND AGG_MLY_END_DATE_KEY
 GROUP BY STORE_CODE
 ORDER BY STORE_CODE
)ADSPM
ON FCT.STORE_CODE = ADSPM.STORE_CODE
LEFT JOIN
--------------------- AGG MLY STR PROD ----------------------
(
SELECT
STORE_CODE,
SUM( SALE_TOT_QTY)  AMSP_SALE_TOT_QTY,
SUM( SALE_NET_VAL)  AMSP_SALE_NET_VAL,
SUM( SALE_RETURN_QTY)  AMSP_SALE_RETURN_QTY,
SUM( SALE_RETURN_VAL)  AMSP_SALE_RETURN_VAL,
SUM( SALE_TOT_DISC_VAL)  AMSP_SALE_TOT_DISC_VAL,
SUM( SALE_MARKDOWN_QTY)  AMSP_SALE_MARKDOWN_QTY,
SUM( SALE_MARKDOWN_VAL)  AMSP_SALE_MARKDOWN_VAL,
SUM( SALE_TOT_TAX_VAL)  AMSP_SALE_TOT_TAX_VAL,
SUM( SALE_TOT_VAL_AT_PP)  AMSP_SALE_TOT_VAL_AT_PP,
SUM( SALE_TOT_VAL_AT_SP)  AMSP_SALE_TOT_VAL_AT_SP,
SUM( SALE_RETURN_VAL_AT_RETAIL)  AMSP_SALE_RETURN_VAL_AT_RETAIL,
SUM( SALE_TOT_VAL_AT_PP_VAT)  AMSP_SALE_TOT_VAL_AT_PP_VAT,
SUM( VO_TRF_IN_QTY)  AMSP_VO_TRF_IN_QTY,
SUM( VO_TRF_IN_VAL_AT_PP)  AMSP_VO_TRF_IN_VAL_AT_PP,
SUM( VO_TRF_IN_VAL_AT_SP)  AMSP_VO_TRF_IN_VAL_AT_SP,
SUM( VO_TRF_OUT_QTY)  AMSP_VO_TRF_OUT_QTY,
SUM( VO_TRF_OUT_VAL_AT_PP)  AMSP_VO_TRF_OUT_VAL_AT_PP,
SUM( VO_TRF_OUT_VAL_AT_SP)  AMSP_VO_TRF_OUT_VAL_AT_SP,
SUM( INV_ADJ_QTY)  AMSP_INV_ADJ_QTY,
SUM( INV_ADJ_VAL)  AMSP_INV_ADJ_VAL,
SUM( VO_TOT_RECD_QTY)  AMSP_VO_TOT_RECD_QTY,
SUM( VO_NET_RECD_VAL)  AMSP_VO_NET_RECD_VAL,
SUM( VO_RETURN_QTY)  AMSP_VO_RETURN_QTY,
SUM( VO_RETURN_VAL)  AMSP_VO_RETURN_VAL,
SUM( VO_TOT_RECD_VAL_AT_PP)  AMSP_VO_TOT_RECD_VAL_AT_PP,
SUM( VO_TOT_RECD_VAL_AT_HOSP)  AMSP_VO_TOT_RECD_VAL_AT_HOSP
FROM AGG_MLY_STR_PROD,ADMIN_ETL_DATE_PARAMETER A
where date_key   BETWEEN AGG_MLY_START_DATE_KEY AND AGG_MLY_END_DATE_KEY
 GROUP BY STORE_CODE
 ORDER BY STORE_CODE
)AMSP
ON FCT.STORE_CODE = AMSP.STORE_CODE
LEFT JOIN
------------------ AGG MLY STR ------------------------
(
SELECT
STORE_CODE,
SUM( SALE_TOT_QTY)  AMS_SALE_TOT_QTY,
SUM( SALE_NET_VAL)  AMS_SALE_NET_VAL,
SUM( SALE_RETURN_QTY)  AMS_SALE_RETURN_QTY,
SUM( SALE_RETURN_VAL)  AMS_SALE_RETURN_VAL,
SUM( SALE_TOT_DISC_VAL)  AMS_SALE_TOT_DISC_VAL,
SUM( SALE_MARKDOWN_QTY)  AMS_SALE_MARKDOWN_QTY,
SUM( SALE_MARKDOWN_VAL)  AMS_SALE_MARKDOWN_VAL,
SUM( SALE_TOT_TAX_VAL)  AMS_SALE_TOT_TAX_VAL,
SUM( SALE_TOT_VAL_AT_PP)  AMS_SALE_TOT_VAL_AT_PP,
SUM( SALE_TOT_VAL_AT_SP)  AMS_SALE_TOT_VAL_AT_SP,
SUM( SALE_RETURN_VAL_AT_RETAIL)  AMS_SALE_RETURN_VAL_AT_RETAIL,
SUM( SALE_TOT_VAL_AT_PP_VAT)  AMS_SALE_TOT_VAL_AT_PP_VAT,
SUM( VO_TRF_IN_QTY)  AMS_VO_TRF_IN_QTY,
SUM( VO_TRF_IN_VAL_AT_PP)  AMS_VO_TRF_IN_VAL_AT_PP,
SUM( VO_TRF_IN_VAL_AT_SP)  AMS_VO_TRF_IN_VAL_AT_SP,
SUM( VO_TRF_OUT_QTY)  AMS_VO_TRF_OUT_QTY,
SUM( VO_TRF_OUT_VAL_AT_PP)  AMS_VO_TRF_OUT_VAL_AT_PP,
SUM( VO_TRF_OUT_VAL_AT_SP)  AMS_VO_TRF_OUT_VAL_AT_SP,
SUM( INV_ADJ_QTY)  AMS_INV_ADJ_QTY,
SUM( INV_ADJ_VAL)  AMS_INV_ADJ_VAL,
SUM( VO_TOT_RECD_QTY)  AMS_VO_TOT_RECD_QTY,
SUM( VO_NET_RECD_VAL)  AMS_VO_NET_RECD_VAL,
SUM( VO_RETURN_QTY)  AMS_VO_RETURN_QTY,
SUM( VO_RETURN_VAL)  AMS_VO_RETURN_VAL,
SUM( VO_TOT_RECD_VAL_AT_PP)  AMS_VO_TOT_RECD_VAL_AT_PP,
SUM( VO_TOT_RECD_VAL_AT_HOSP)  AMS_VO_TOT_RECD_VAL_AT_HOSP
FROM AGG_MLY_STR,ADMIN_ETL_DATE_PARAMETER A
where date_key   BETWEEN AGG_MLY_START_DATE_KEY AND AGG_MLY_END_DATE_KEY
 GROUP BY STORE_CODE
 ORDER BY STORE_CODE
)AMS
ON FCT.STORE_CODE = AMS.STORE_CODE
LEFT JOIN
 ----------------------- AGG MLY STR DEPT------------------------
(
 SELECT
STORE_CODE,
SUM( SALE_TOT_QTY)  AMSD_SALE_TOT_QTY,
SUM( SALE_NET_VAL)  AMSD_SALE_NET_VAL,
SUM( SALE_RETURN_QTY)  AMSD_SALE_RETURN_QTY,
SUM( SALE_RETURN_VAL)  AMSD_SALE_RETURN_VAL,
SUM( SALE_TOT_DISC_VAL)  AMSD_SALE_TOT_DISC_VAL,
SUM( SALE_MARKDOWN_QTY)  AMSD_SALE_MARKDOWN_QTY,
SUM( SALE_MARKDOWN_VAL)  AMSD_SALE_MARKDOWN_VAL,
SUM( SALE_TOT_TAX_VAL)  AMSD_SALE_TOT_TAX_VAL,
SUM( SALE_TOT_VAL_AT_PP)  AMSD_SALE_TOT_VAL_AT_PP,
SUM( SALE_TOT_VAL_AT_SP)  AMSD_SALE_TOT_VAL_AT_SP,
SUM( SALE_RETURN_VAL_AT_RETAIL)  AMSD_SALE_RETURN_VAL_AT_RETAIL,
SUM( SALE_TOT_VAL_AT_PP_VAT)  AMSD_SALE_TOT_VAL_AT_PP_VAT,
SUM( VO_TRF_IN_QTY)  AMSD_VO_TRF_IN_QTY,
SUM( VO_TRF_IN_VAL_AT_PP)  AMSD_VO_TRF_IN_VAL_AT_PP,
SUM( VO_TRF_IN_VAL_AT_SP)  AMSD_VO_TRF_IN_VAL_AT_SP,
SUM( VO_TRF_OUT_QTY)  AMSD_VO_TRF_OUT_QTY,
SUM( VO_TRF_OUT_VAL_AT_PP)  AMSD_VO_TRF_OUT_VAL_AT_PP,
SUM( VO_TRF_OUT_VAL_AT_SP)  AMSD_VO_TRF_OUT_VAL_AT_SP,
SUM( INV_ADJ_QTY)  AMSD_INV_ADJ_QTY,
SUM( INV_ADJ_VAL)  AMSD_INV_ADJ_VAL,
SUM( VO_TOT_RECD_QTY)  AMSD_VO_TOT_RECD_QTY,
SUM( VO_NET_RECD_VAL)  AMSD_VO_NET_RECD_VAL,
SUM( VO_RETURN_QTY)  AMSD_VO_RETURN_QTY,
SUM( VO_RETURN_VAL)  AMSD_VO_RETURN_VAL,
SUM( VO_TOT_RECD_VAL_AT_PP)  AMSD_VO_TOT_RECD_VAL_AT_PP,
SUM( VO_TOT_RECD_VAL_AT_HOSP)  AMSD_VO_TOT_RECD_VAL_AT_HOSP
FROM AGG_MLY_STR_DEPT,ADMIN_ETL_DATE_PARAMETER A
where date_key   BETWEEN AGG_MLY_START_DATE_KEY AND AGG_MLY_END_DATE_KEY
 GROUP BY STORE_CODE
 ORDER BY STORE_CODE
 )AMSD
 ON FCT.STORE_CODE = AMSD.STORE_CODE
ORDER BY 1
	};
	my $query_handle = $dbh->prepare($query);
	$query_handle->execute();
	
	while (my $y = $query_handle->fetchrow_hashref()) {
		$worksheet->write($a,0, $y->{STORE_CODE},$desc);
		$worksheet->write($a,1, $y->{FCT_SALE_TOT_QTY},$border1);
		$worksheet->write($a,2, $y->{FCT_SALE_NET_VAL},$border1);
		$worksheet->write($a,3, $y->{FCT_SALE_RETURN_QTY},$border1);
		$worksheet->write($a,4, $y->{FCT_SALE_RETURN_VAL},$border1);
		$worksheet->write($a,5, $y->{FCT_SALE_TOT_DISC_VAL},$border1);
		$worksheet->write($a,6, $y->{FCT_SALE_MARKDOWN_QTY},$border1);
		$worksheet->write($a,7, $y->{FCT_SALE_MARKDOWN_VAL},$border1);
		$worksheet->write($a,8, $y->{FCT_SALE_TOT_TAX_VAL},$border1);
		$worksheet->write($a,9, $y->{FCT_SALE_TOT_VAL_AT_PP},$border1);
		$worksheet->write($a,10, $y->{FCT_SALE_TOT_VAL_AT_SP},$border1);
		$worksheet->write($a,11, $y->{FCT_SALE_RETURN_VAL_AT_RETAIL},$border1);
		$worksheet->write($a,12, $y->{FCT_SALE_TOT_VAL_AT_PP_VAT},$border1);
		$worksheet->write($a,13, $y->{FCT_VO_TRF_IN_QTY},$border1);
		$worksheet->write($a,14, $y->{FCT_VO_TRF_IN_VAL_AT_PP},$border1);
		$worksheet->write($a,15, $y->{FCT_VO_TRF_IN_VAL_AT_SP},$border1);
		$worksheet->write($a,16, $y->{FCT_VO_TRF_OUT_QTY},$border1);
		$worksheet->write($a,17, $y->{FCT_VO_TRF_OUT_VAL_AT_PP},$border1);
		$worksheet->write($a,18, $y->{FCT_VO_TRF_OUT_VAL_AT_SP},$border1);
		$worksheet->write($a,19, $y->{FCT_INV_ADJ_QTY},$border1);
		$worksheet->write($a,20, $y->{FCT_INV_ADJ_VAL},$border1);
		$worksheet->write($a,21, $y->{FCT_VO_TOT_RECD_QTY},$border1);
		$worksheet->write($a,22, $y->{FCT_VO_NET_RECD_VAL},$border1);
		$worksheet->write($a,23, $y->{FCT_VO_RETURN_QTY},$border1);
		$worksheet->write($a,24, $y->{FCT_VO_RETURN_VAL},$border1);
		$worksheet->write($a,25, $y->{FCT_VO_GLOBAL_DISC_VAL},$border1);
		$worksheet->write($a,26, $y->{FCT_VO_TOT_TAX_VAL},$border1);
		$worksheet->write($a,27, $y->{FCT_VO_TOT_RECD_VAL_AT_PP},$border1);
		$worksheet->write($a,28, $y->{FCT_VO_TOT_RECD_VAL_AT_HOSP},$border1);
		
		$worksheet->write($a,31, $y->{ADSP_SALE_TOT_QTY},$border1);
		$worksheet->write($a,32, $y->{ADSP_SALE_NET_VAL},$border1);
		$worksheet->write($a,33, $y->{ADSP_SALE_RETURN_QTY},$border1);
		$worksheet->write($a,34, $y->{ADSP_SALE_RETURN_VAL},$border1);
		$worksheet->write($a,35, $y->{ADSP_SALE_TOT_DISC_VAL},$border1);
		$worksheet->write($a,36, $y->{ADSP_SALE_MARKDOWN_QTY},$border1);
		$worksheet->write($a,37, $y->{ADSP_SALE_MARKDOWN_VAL},$border1);
		$worksheet->write($a,38, $y->{ADSP_SALE_TOT_TAX_VAL},$border1);
		$worksheet->write($a,39, $y->{ADSP_SALE_TOT_VAL_AT_PP},$border1);
		$worksheet->write($a,40, $y->{ADSP_SALE_TOT_VAL_AT_SP},$border1);
		$worksheet->write($a,41, $y->{ADSP_SALE_RETURN_VAL_AT_RETAIL},$border1);
		$worksheet->write($a,42, $y->{ADSP_SALE_TOT_VAL_AT_PP_VAT},$border1);
		$worksheet->write($a,43, $y->{ADSP_VO_TRF_IN_QTY},$border1);
		$worksheet->write($a,44, $y->{ADSP_VO_TRF_IN_VAL_AT_PP},$border1);
		$worksheet->write($a,45, $y->{ADSP_VO_TRF_IN_VAL_AT_SP},$border1);
		$worksheet->write($a,46, $y->{ADSP_VO_TRF_OUT_QTY},$border1);
		$worksheet->write($a,47, $y->{ADSP_VO_TRF_OUT_VAL_AT_PP},$border1);
		$worksheet->write($a,48, $y->{ADSP_VO_TRF_OUT_VAL_AT_SP},$border1);
		$worksheet->write($a,49, $y->{ADSP_INV_ADJ_QTY},$border1);
		$worksheet->write($a,50, $y->{ADSP_INV_ADJ_VAL},$border1);
		$worksheet->write($a,51, $y->{ADSP_VO_TOT_RECD_QTY},$border1);
		$worksheet->write($a,52, $y->{ADSP_VO_NET_RECD_VAL},$border1);
		$worksheet->write($a,53, $y->{ADSP_VO_RETURN_QTY},$border1);
		$worksheet->write($a,54, $y->{ADSP_VO_RETURN_VAL},$border1);
		$worksheet->write($a,55, $y->{ADSP_VO_GLOBAL_DISC_VAL},$border1);
		$worksheet->write($a,56, $y->{ADSP_VO_TOT_TAX_VAL},$border1);
		$worksheet->write($a,57, $y->{ADSP_VO_TOT_RECD_VAL_AT_PP},$border1);
		$worksheet->write($a,58, $y->{ADSP_VO_TOT_RECD_VAL_AT_HOSP},$border1);
		
		$worksheet->write($a,61, $y->{ADS_SALE_TOT_QTY},$border1);
		$worksheet->write($a,62, $y->{ADS_SALE_NET_VAL},$border1);
		$worksheet->write($a,63, $y->{ADS_SALE_RETURN_QTY},$border1);
		$worksheet->write($a,64, $y->{ADS_SALE_RETURN_VAL},$border1);
		$worksheet->write($a,65, $y->{ADS_SALE_TOT_DISC_VAL},$border1);
		$worksheet->write($a,66, $y->{ADS_SALE_MARKDOWN_QTY},$border1);
		$worksheet->write($a,67, $y->{ADS_SALE_MARKDOWN_VAL},$border1);
		$worksheet->write($a,68, $y->{ADS_SALE_TOT_TAX_VAL},$border1);
		$worksheet->write($a,69, $y->{ADS_SALE_TOT_VAL_AT_PP},$border1);
		$worksheet->write($a,70, $y->{ADS_SALE_TOT_VAL_AT_SP},$border1);
		$worksheet->write($a,71, $y->{ADS_SALE_RETURN_VAL_AT_RETAIL},$border1);
		$worksheet->write($a,72, $y->{ADS_SALE_TOT_VAL_AT_PP_VAT},$border1);
		$worksheet->write($a,73, $y->{ADS_VO_TRF_IN_QTY},$border1);
		$worksheet->write($a,74, $y->{ADS_VO_TRF_IN_VAL_AT_PP},$border1);
		$worksheet->write($a,75, $y->{ADS_VO_TRF_IN_VAL_AT_SP},$border1);
		$worksheet->write($a,76, $y->{ADS_VO_TRF_OUT_QTY},$border1);
		$worksheet->write($a,77, $y->{ADS_VO_TRF_OUT_VAL_AT_PP},$border1);
		$worksheet->write($a,78, $y->{ADS_VO_TRF_OUT_VAL_AT_SP},$border1);
		$worksheet->write($a,79, $y->{ADS_INV_ADJ_QTY},$border1);
		$worksheet->write($a,80, $y->{ADS_INV_ADJ_VAL},$border1);
		$worksheet->write($a,81, $y->{ADS_VO_TOT_RECD_QTY},$border1);
		$worksheet->write($a,82, $y->{ADS_VO_NET_RECD_VAL},$border1);
		$worksheet->write($a,83, $y->{ADS_VO_RETURN_QTY},$border1);
		$worksheet->write($a,84, $y->{ADS_VO_RETURN_VAL},$border1);
		$worksheet->write($a,85, $y->{ADS_VO_GLOBAL_DISC_VAL},$border1);
		$worksheet->write($a,86, $y->{ADS_VO_TOT_TAX_VAL},$border1);
		$worksheet->write($a,87, $y->{ADS_VO_TOT_RECD_VAL_AT_PP},$border1);
		$worksheet->write($a,88, $y->{ADS_VO_TOT_RECD_VAL_AT_HOSP},$border1);
		
		$worksheet->write($a,91, $y->{ADSD_SALE_TOT_QTY},$border1);
		$worksheet->write($a,92, $y->{ADSD_SALE_NET_VAL},$border1);
		$worksheet->write($a,93, $y->{ADSD_SALE_RETURN_QTY},$border1);
		$worksheet->write($a,94, $y->{ADSD_SALE_RETURN_VAL},$border1);
		$worksheet->write($a,95, $y->{ADSD_SALE_TOT_DISC_VAL},$border1);
		$worksheet->write($a,96, $y->{ADSD_SALE_MARKDOWN_QTY},$border1);
		$worksheet->write($a,97, $y->{ADSD_SALE_MARKDOWN_VAL},$border1);
		$worksheet->write($a,98, $y->{ADSD_SALE_TOT_TAX_VAL},$border1);
		$worksheet->write($a,99, $y->{ADSD_SALE_TOT_VAL_AT_PP},$border1);
		$worksheet->write($a,100, $y->{ADSD_SALE_TOT_VAL_AT_SP},$border1);
		$worksheet->write($a,101, $y->{ADSD_SALE_RETURN_VAL_AT_RETAIL},$border1);
		$worksheet->write($a,102, $y->{ADSD_SALE_TOT_VAL_AT_PP_VAT},$border1);
		$worksheet->write($a,103, $y->{ADSD_VO_TRF_IN_QTY},$border1);
		$worksheet->write($a,104, $y->{ADSD_VO_TRF_IN_VAL_AT_PP},$border1);
		$worksheet->write($a,105, $y->{ADSD_VO_TRF_IN_VAL_AT_SP},$border1);
		$worksheet->write($a,106, $y->{ADSD_VO_TRF_OUT_QTY},$border1);
		$worksheet->write($a,107, $y->{ADSD_VO_TRF_OUT_VAL_AT_PP},$border1);
		$worksheet->write($a,108, $y->{ADSD_VO_TRF_OUT_VAL_AT_SP},$border1);
		$worksheet->write($a,109, $y->{ADSD_INV_ADJ_QTY},$border1);
		$worksheet->write($a,110, $y->{ADSD_INV_ADJ_VAL},$border1);
		$worksheet->write($a,111, $y->{ADSD_VO_TOT_RECD_QTY},$border1);
		$worksheet->write($a,112, $y->{ADSD_VO_NET_RECD_VAL},$border1);
		$worksheet->write($a,113, $y->{ADSD_VO_RETURN_QTY},$border1);
		$worksheet->write($a,114, $y->{ADSD_VO_RETURN_VAL},$border1);
		$worksheet->write($a,115, $y->{ADSD_VO_GLOBAL_DISC_VAL},$border1);
		$worksheet->write($a,116, $y->{ADSD_VO_TOT_TAX_VAL},$border1);
		$worksheet->write($a,117, $y->{ADSD_VO_TOT_RECD_VAL_AT_PP},$border1);
		$worksheet->write($a,118, $y->{ADSD_VO_TOT_RECD_VAL_AT_HOSP},$border1);
		
		$worksheet->write($a,121, $y->{ADSPM_SALE_TOT_QTY},$border1);
		$worksheet->write($a,122, $y->{ADSPM_SALE_NET_VAL},$border1);
		$worksheet->write($a,123, $y->{ADSPM_SALE_RETURN_QTY},$border1);
		$worksheet->write($a,124, $y->{ADSPM_SALE_RETURN_VAL},$border1);
		$worksheet->write($a,125, $y->{ADSPM_SALE_TOT_DISC_VAL},$border1);
		$worksheet->write($a,126, $y->{ADSPM_SALE_MARKDOWN_QTY},$border1);
		$worksheet->write($a,127, $y->{ADSPM_SALE_MARKDOWN_VAL},$border1);
		$worksheet->write($a,128, $y->{ADSPM_SALE_TOT_TAX_VAL},$border1);
		$worksheet->write($a,129, $y->{ADSPM_SALE_TOT_VAL_AT_PP},$border1);
		$worksheet->write($a,130, $y->{ADSPM_SALE_TOT_VAL_AT_SP},$border1);
		$worksheet->write($a,131, $y->{ADSPM_SALE_RETURN_VAL_AT_RET},$border1);
		$worksheet->write($a,132, $y->{ADSPM_SALE_TOT_VAL_AT_PP_VAT},$border1);
		$worksheet->write($a,133, $y->{ADSPM_VO_TRF_IN_QTY},$border1);
		$worksheet->write($a,134, $y->{ADSPM_VO_TRF_IN_VAL_AT_PP},$border1);
		$worksheet->write($a,135, $y->{ADSPM_VO_TRF_IN_VAL_AT_SP},$border1);
		$worksheet->write($a,136, $y->{ADSPM_VO_TRF_OUT_QTY},$border1);
		$worksheet->write($a,137, $y->{ADSPM_VO_TRF_OUT_VAL_AT_PP},$border1);
		$worksheet->write($a,138, $y->{ADSPM_VO_TRF_OUT_VAL_AT_SP},$border1);
		$worksheet->write($a,139, $y->{ADSPM_INV_ADJ_QTY},$border1);
		$worksheet->write($a,140, $y->{ADSPM_INV_ADJ_VAL},$border1);
		$worksheet->write($a,141, $y->{ADSPM_VO_TOT_RECD_QTY},$border1);
		$worksheet->write($a,142, $y->{ADSPM_VO_NET_RECD_VAL},$border1);
		$worksheet->write($a,143, $y->{ADSPM_VO_RETURN_QTY},$border1);
		$worksheet->write($a,144, $y->{ADSPM_VO_RETURN_VAL},$border1);
		$worksheet->write($a,145, $y->{ADSPM_VO_TOT_RECD_VAL_AT_PP},$border1);
		$worksheet->write($a,146, $y->{ADSPM_VO_TOT_RECD_VAL_AT_HOSP},$border1);
		
		$worksheet->write($a,151, $y->{AMSP_SALE_TOT_QTY},$border1);
		$worksheet->write($a,152, $y->{AMSP_SALE_NET_VAL},$border1);
		$worksheet->write($a,153, $y->{AMSP_SALE_RETURN_QTY},$border1);
		$worksheet->write($a,154, $y->{AMSP_SALE_RETURN_VAL},$border1);
		$worksheet->write($a,155, $y->{AMSP_SALE_TOT_DISC_VAL},$border1);
		$worksheet->write($a,156, $y->{AMSP_SALE_MARKDOWN_QTY},$border1);
		$worksheet->write($a,157, $y->{AMSP_SALE_MARKDOWN_VAL},$border1);
		$worksheet->write($a,158, $y->{AMSP_SALE_TOT_TAX_VAL},$border1);
		$worksheet->write($a,159, $y->{AMSP_SALE_TOT_VAL_AT_PP},$border1);
		$worksheet->write($a,160, $y->{AMSP_SALE_TOT_VAL_AT_SP},$border1);
		$worksheet->write($a,161, $y->{AMSP_SALE_RETURN_VAL_AT_RETAIL},$border1);
		$worksheet->write($a,162, $y->{AMSP_SALE_TOT_VAL_AT_PP_VAT},$border1);
		$worksheet->write($a,163, $y->{AMSP_VO_TRF_IN_QTY},$border1);
		$worksheet->write($a,164, $y->{AMSP_VO_TRF_IN_VAL_AT_PP},$border1);
		$worksheet->write($a,165, $y->{AMSP_VO_TRF_IN_VAL_AT_SP},$border1);
		$worksheet->write($a,166, $y->{AMSP_VO_TRF_OUT_QTY},$border1);
		$worksheet->write($a,167, $y->{AMSP_VO_TRF_OUT_VAL_AT_PP},$border1);
		$worksheet->write($a,168, $y->{AMSP_VO_TRF_OUT_VAL_AT_SP},$border1);
		$worksheet->write($a,169, $y->{AMSP_INV_ADJ_QTY},$border1);
		$worksheet->write($a,170, $y->{AMSP_INV_ADJ_VAL},$border1);
		$worksheet->write($a,171, $y->{AMSP_VO_TOT_RECD_QTY},$border1);
		$worksheet->write($a,172, $y->{AMSP_VO_NET_RECD_VAL},$border1);
		$worksheet->write($a,173, $y->{AMSP_VO_RETURN_QTY},$border1);
		$worksheet->write($a,174, $y->{AMSP_VO_RETURN_VAL},$border1);
		$worksheet->write($a,175, $y->{AMSP_VO_TOT_RECD_VAL_AT_PP},$border1);
		$worksheet->write($a,176, $y->{AMSP_VO_TOT_RECD_VAL_AT_HOSP},$border1);
		
		$worksheet->write($a,181, $y->{AMS_SALE_TOT_QTY},$border1);
		$worksheet->write($a,182, $y->{AMS_SALE_NET_VAL},$border1);
		$worksheet->write($a,183, $y->{AMS_SALE_RETURN_QTY},$border1);
		$worksheet->write($a,184, $y->{AMS_SALE_RETURN_VAL},$border1);
		$worksheet->write($a,185, $y->{AMS_SALE_TOT_DISC_VAL},$border1);
		$worksheet->write($a,186, $y->{AMS_SALE_MARKDOWN_QTY},$border1);
		$worksheet->write($a,187, $y->{AMS_SALE_MARKDOWN_VAL},$border1);
		$worksheet->write($a,188, $y->{AMS_SALE_TOT_TAX_VAL},$border1);
		$worksheet->write($a,189, $y->{AMS_SALE_TOT_VAL_AT_PP},$border1);
		$worksheet->write($a,190, $y->{AMS_SALE_TOT_VAL_AT_SP},$border1);
		$worksheet->write($a,191, $y->{AMS_SALE_RETURN_VAL_AT_RETAIL},$border1);
		$worksheet->write($a,192, $y->{AMS_SALE_TOT_VAL_AT_PP_VAT},$border1);
		$worksheet->write($a,193, $y->{AMS_VO_TRF_IN_QTY},$border1);
		$worksheet->write($a,194, $y->{AMS_VO_TRF_IN_VAL_AT_PP},$border1);
		$worksheet->write($a,195, $y->{AMS_VO_TRF_IN_VAL_AT_SP},$border1);
		$worksheet->write($a,196, $y->{AMS_VO_TRF_OUT_QTY},$border1);
		$worksheet->write($a,197, $y->{AMS_VO_TRF_OUT_VAL_AT_PP},$border1);
		$worksheet->write($a,198, $y->{AMS_VO_TRF_OUT_VAL_AT_SP},$border1);
		$worksheet->write($a,199, $y->{AMS_INV_ADJ_QTY},$border1);
		$worksheet->write($a,200, $y->{AMS_INV_ADJ_VAL},$border1);
		$worksheet->write($a,201, $y->{AMS_VO_TOT_RECD_QTY},$border1);
		$worksheet->write($a,202, $y->{AMS_VO_NET_RECD_VAL},$border1);
		$worksheet->write($a,203, $y->{AMS_VO_RETURN_QTY},$border1);
		$worksheet->write($a,204, $y->{AMS_VO_RETURN_VAL},$border1);
		$worksheet->write($a,205, $y->{AMS_VO_TOT_RECD_VAL_AT_PP},$border1);
		$worksheet->write($a,206, $y->{AMS_VO_TOT_RECD_VAL_AT_HOSP},$border1);
		
		$worksheet->write($a,211, $y->{AMSD_SALE_TOT_QTY},$border1);
		$worksheet->write($a,212, $y->{AMSD_SALE_NET_VAL},$border1);
		$worksheet->write($a,213, $y->{AMSD_SALE_RETURN_QTY},$border1);
		$worksheet->write($a,214, $y->{AMSD_SALE_RETURN_VAL},$border1);
		$worksheet->write($a,215, $y->{AMSD_SALE_TOT_DISC_VAL},$border1);
		$worksheet->write($a,216, $y->{AMSD_SALE_MARKDOWN_QTY},$border1);
		$worksheet->write($a,217, $y->{AMSD_SALE_MARKDOWN_VAL},$border1);
		$worksheet->write($a,218, $y->{AMSD_SALE_TOT_TAX_VAL},$border1);
		$worksheet->write($a,219, $y->{AMSD_SALE_TOT_VAL_AT_PP},$border1);
		$worksheet->write($a,220, $y->{AMSD_SALE_TOT_VAL_AT_SP},$border1);
		$worksheet->write($a,221, $y->{AMSD_SALE_RETURN_VAL_AT_RETAIL},$border1);
		$worksheet->write($a,222, $y->{AMSD_SALE_TOT_VAL_AT_PP_VAT},$border1);
		$worksheet->write($a,223, $y->{AMSD_VO_TRF_IN_QTY},$border1);
		$worksheet->write($a,224, $y->{AMSD_VO_TRF_IN_VAL_AT_PP},$border1);
		$worksheet->write($a,225, $y->{AMSD_VO_TRF_IN_VAL_AT_SP},$border1);
		$worksheet->write($a,226, $y->{AMSD_VO_TRF_OUT_QTY},$border1);
		$worksheet->write($a,227, $y->{AMSD_VO_TRF_OUT_VAL_AT_PP},$border1);
		$worksheet->write($a,228, $y->{AMSD_VO_TRF_OUT_VAL_AT_SP},$border1);
		$worksheet->write($a,229, $y->{AMSD_INV_ADJ_QTY},$border1);
		$worksheet->write($a,230, $y->{AMSD_INV_ADJ_VAL},$border1);
		$worksheet->write($a,231, $y->{AMSD_VO_TOT_RECD_QTY},$border1);
		$worksheet->write($a,232, $y->{AMSD_VO_NET_RECD_VAL},$border1);
		$worksheet->write($a,233, $y->{AMSD_VO_RETURN_QTY},$border1);
		$worksheet->write($a,234, $y->{AMSD_VO_RETURN_VAL},$border1);
		$worksheet->write($a,235, $y->{AMSD_VO_TOT_RECD_VAL_AT_PP},$border1);
		$worksheet->write($a,236, $y->{AMSD_VO_TOT_RECD_VAL_AT_HOSP},$border1);
		$a++;
}
	
	$query_handle->finish();
}


sub mail {

my $cc;
my $bcc;
GetOptions( 'cc=s' => \$cc, 'bcc=s' => \$bcc, );

my( $to, $subject, $msgbody_file, $attachment_file ) = @ARGV;

$to = 'lea.gonzaga@metrogaisano.com, annalyn.conde@metrogaisano.com,  marlou.escanilla@metrogaisano.com, joey.labrador@metrogaisano.com, edsel.gayo@metrogaisano.com, Dennis.Cuizon@metrogaisano.com, rex.cabanilla@metrogaisano.com,jeff.bubuli@metroretail.com.ph';

#$bcc = 'kent.mamalias@metrogaisano.com';

$from = 'Report Mailer<report.mailer@metrogaisano.com>';
		
$subject = 'ARC ETL VALIDATION - DATA AS OF ' . $as_of;

$msgbody_file = 'message_BI.txt';

$attachment_file = "ARC BI VALIDATION - Summary (as of $as_of).xlsx";

my $msgbody = read_file( $msgbody_file );

my $attachment_data = encode_base64( read_file( $attachment_file, 1 ));

my %mail = (
    To   => $to,
	From  => $from,
    Subject => $subject,
	'content-type' => "multipart/alternative; boundary=\"$boundary\""
);

$mail{smtp} = '10.190.1.30';
$mail{Cc} = $cc if $cc;
$mail{Bcc} = $bcc if $bcc;

my $boundary = "====" . time . "====";

$mail{'content-type'} = qq(multipart/mixed; boundary="$boundary");

$boundary = '--'.$boundary;

$mail{body} = 
<<END_OF_BODY;
$boundary
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
$msgbody
$boundary
Content-Type: application/octet-stream; name="$attachment_file"
Content-Transfer-Encoding: base64
Content-Disposition: attachment; filename="$attachment_file"
$attachment_data
$boundary--
END_OF_BODY

sendmail(%mail) or die $Mail::Sendmail::error;

print "Sendmail Log says:\n$Mail::Sendmail::log\n";

}

sub read_file {

my( $filename, $binmode ) = @_;
my $fh = new IO::File;
$fh->open("<".$filename) or die "Error opening $filename for reading - $!\n";
$fh->binmode if $binmode;
local $/;
<$fh>
	
}





