START:

use DBI;
use DBD::Oracle qw(:ora_types);
use Excel::Writer::XLSX;
use Excel::Writer::XLSX::Utility;
use Text::CSV_XS;
#use DateKey_ARC;
use DBConnector;
use Win32::Job;
use Getopt::Long;
use IO::File;
use MIME::QuotedPrint;
use MIME::Base64;
use Mail::Sendmail;
use HTML::Entities;
use HTML::Table::FromDatabase;
use Date::Calc qw( Today Add_Delta_Days Month_to_Text);

($year,$month,$day) = Today();
$month_to_text = Month_to_Text($month);

$test_query = qq{ SELECT CASE WHEN EXISTS (SELECT *
					FROM ADMIN_ETL_LOG 
					WHERE TO_DATE(LOG_DATE, 'DD-MON-YY') = TO_DATE(SYSDATE,'DD-MON-YY') AND TASK_ID = 'AggDlyStrDept' AND ERR_CODE = 0) THEN 1 ELSE 0 END STATUS 
					FROM DUAL };

$tst_query = $dbh->prepare($test_query);
$tst_query->execute();

while ( my $x =  $tst_query->fetchrow_hashref()){
	$test = $x->{STATUS};
} 

if ($test eq 1){

	 $date = qq{ 
	SELECT WEEK_NUMBER_THIS_YEAR, DATE_KEY, DATE_FLD, WEEK_ST_DATE_KEY, WEEK_END_DATE_KEY, YTD_DATE_KEY, YTD_DATE_FLD, YTD_DATE_KEY_LY, YTD_DATE_FLD_LY, MONTH_UPD1, MONTH_UPD2  FROM
	  (SELECT WEEK_NUMBER_THIS_YEAR, DATE_KEY, TO_CHAR(DATE_FLD, 'DD Mon YYYY') DATE_FLD, WEEK_ST_DATE_KEY, WEEK_END_DATE_KEY 
		FROM DIM_DATE
		WHERE DATE_FLD = (SELECT AGG_DLY_END_DATE_FLD FROM ADMIN_ETL_DATE_PARAMETER)),
	  (SELECT DATE_KEY YTD_DATE_KEY, DATE_FLD YTD_DATE_FLD, DATE_KEY_LY YTD_DATE_KEY_LY, DATE_FLD_LY YTD_DATE_FLD_LY
		FROM DIM_DATE_PRL WHERE MONTH_NAME = (SELECT TO_CHAR(SYSDATE-14, 'MON') AS MONTH_UPD1 FROM DUAL) AND DAY_IN_MONTH = 1 AND YEAR = (SELECT TO_CHAR(SYSDATE, 'YYYY') AS YEAR FROM DUAL)),
	  (SELECT TO_CHAR(SYSDATE, 'MON') AS MONTH_UPD2, TO_CHAR(SYSDATE-14, 'MON') AS MONTH_UPD1 FROM DUAL)
	 };

	my $sth_date_1 = $dbh->prepare ($date);
	 $sth_date_1->execute;

	while (my $x = $sth_date_1->fetchrow_hashref()) {
		$wk_st_date_key = $x->{WEEK_ST_DATE_KEY};
		$wk_en_date_key = $x->{DATE_KEY};
		$wk_number = $x->{WEEK_NUMBER_THIS_YEAR};
		$as_of = $x->{DATE_FLD};
		$yr_st_date_key = $x->{YTD_DATE_KEY};
		$yr_st_date_fld = $x->{YTD_DATE_FLD};
		$yr_st_date_key_ly = $x->{YTD_DATE_KEY_LY};
		$yr_st_date_fld_ly = $x->{YTD_DATE_FLD_LY};
		$upd_per1 = $x->{MONTH_UPD1};
		$upd_per2 = $x->{MONTH_UPD2};
	}

	$date_2 = qq{ 
	SELECT DATE_KEY1, TO_CHAR(DATE_FLD1, 'DD Mon YYYY') DATE_FLD1, DATE_KEY_LY1, TO_CHAR(DATE_FLD_LY1, 'DD Mon YYYY') DATE_FLD_LY1, DATE_KEY2, TO_CHAR(DATE_FLD2, 'DD Mon YYYY') DATE_FLD2, DATE_KEY_LY2, TO_CHAR(DATE_FLD_LY2, 'DD Mon YYYY') DATE_FLD_LY2, DATE_KEY3, DATE_FLD3, MONTH_ST_DATE_KEY, MONTH_END_DATE_KEY, QUARTER, YEAR FROM
		(SELECT DATE_KEY AS DATE_KEY1, DATE_FLD AS DATE_FLD1, DATE_KEY_LY AS DATE_KEY_LY1, DATE_FLD_LY AS DATE_FLD_LY1
		FROM DIM_DATE WHERE DATE_KEY = $wk_st_date_key),
		(SELECT DATE_KEY AS DATE_KEY2, DATE_FLD AS DATE_FLD2, DATE_KEY_LY AS DATE_KEY_LY2, DATE_FLD_LY AS DATE_FLD_LY2
		FROM DIM_DATE WHERE DATE_KEY = $wk_en_date_key),
		(SELECT DATE_KEY AS DATE_KEY3, DATE_FLD AS DATE_FLD3, MONTH_ST_DATE_KEY, MONTH_END_DATE_KEY
		FROM DIM_DATE_PRL WHERE TO_CHAR(DATE_FLD, 'DD Mon YYYY') = '$as_of'),
		(SELECT QUARTER, YEAR FROM DIM_DATE_PRL WHERE TO_CHAR(DATE_FLD, 'DD Mon YYYY') = '$as_of')
	 };

	my $sth_date_2 = $dbh->prepare ($date_2);
	 $sth_date_2->execute;
	 
	while (my $x = $sth_date_2->fetchrow_hashref()) {
		$wk_st_date_key_ly = $x->{DATE_KEY_LY1};
		$wk_en_date_key_ly = $x->{DATE_KEY_LY2};
		$wk_st_date_fld = $x->{DATE_FLD1};
		$wk_en_date_fld = $x->{DATE_FLD2};
		$wk_st_date_fld_ly = $x->{DATE_FLD_LY1};
		$wk_en_date_fld_ly = $x->{DATE_FLD_LY2};
		$mo_st_date_key = $x->{MONTH_ST_DATE_KEY};
		$mo_en_date_key = $x->{DATE_KEY3};
		$quarter = $x->{QUARTER};
		$year = $x->{YEAR};
	}

	$date_3 = qq{ 
	SELECT DATE_KEY1, TO_CHAR(DATE_FLD1, 'DD Mon YYYY') DATE_FLD1, DATE_KEY_LY1, TO_CHAR(DATE_FLD_LY1, 'DD Mon YYYY') DATE_FLD_LY1, 
		   DATE_KEY2, TO_CHAR(DATE_FLD2, 'DD Mon YYYY') DATE_FLD2, DATE_KEY_LY2, TO_CHAR(DATE_FLD_LY2, 'DD Mon YYYY') DATE_FLD_LY2,
		   DATE_KEY3, TO_CHAR(DATE_FLD3, 'DD Mon YYYY') DATE_FLD3, DATE_KEY_LY3, TO_CHAR(DATE_FLD_LY3, 'DD Mon YYYY') DATE_FLD_LY3 FROM
		(SELECT DATE_KEY AS DATE_KEY1, DATE_FLD AS DATE_FLD1, DATE_KEY_LY AS DATE_KEY_LY1, DATE_FLD_LY AS DATE_FLD_LY1
		FROM DIM_DATE_PRL WHERE DATE_KEY = $mo_st_date_key),
		(SELECT DATE_KEY AS DATE_KEY2, DATE_FLD AS DATE_FLD2, DATE_KEY_LY AS DATE_KEY_LY2, DATE_FLD_LY AS DATE_FLD_LY2
		FROM DIM_DATE_PRL WHERE DATE_KEY = $mo_en_date_key),
		(SELECT DATE_KEY AS DATE_KEY3, DATE_FLD AS DATE_FLD3, DATE_KEY_LY AS DATE_KEY_LY3, DATE_FLD_LY AS DATE_FLD_LY3
		FROM DIM_DATE_PRL WHERE QUARTER = $quarter AND YEAR = $year AND MONTH_IN_QUARTER = 1 AND DAY_IN_MONTH = 1)
	 };

	my $sth_date_3 = $dbh->prepare ($date_3);
	 $sth_date_3->execute;
	 
	while (my $x = $sth_date_3->fetchrow_hashref()) {
		$mo_st_date_key_ly = $x->{DATE_KEY_LY1};
		$mo_en_date_key_ly = $x->{DATE_KEY_LY2};
		$mo_st_date_fld = $x->{DATE_FLD1};
		$mo_en_date_fld = $x->{DATE_FLD2};
		$mo_st_date_fld_ly = $x->{DATE_FLD_LY1};
		$mo_en_date_fld_ly = $x->{DATE_FLD_LY2};
		$qu_st_date_key = $x->{DATE_KEY3};
		$qu_st_date_key_ly = $x->{DATE_KEY_LY3};
		$qu_st_date_fld = $x->{DATE_FLD3};
		$qu_st_date_fld_ly = $x->{DATE_FLD_LY3};
	}

	printf "Test ETL Status = ". $test ." \nArc BI Sales Performance Part 1\nGenerating Data from Source \n";
	
	&generate_weektodate_data;
	
	$tst_query->finish();
	$dbh->disconnect; 
	
	exit;
	
}


sub generate_weektodate_data {

my $truncate = $dbh->prepare( qq{ 
TRUNCATE TABLE METRO_IT_SALES_DEPT_WTD
});
$truncate->execute();

print "Truncated table METRO_IT_SALES_DEPT_WTD... \nPreparing to insert new data... \n";

$test = qq{ 

INSERT INTO METRO_IT_SALES_DEPT_WTD
(STORE_FORMAT, STORE_FORMAT_DESC, STORE_CODE, STORE_DESCRIPTION, MERCH_GROUP_CODE, MERCH_GROUP_DESC, GROUP_CODE, GROUP_DESC, DIVISION, DIVISION_DESC, DEPARTMENT_CODE, DEPARTMENT_DESC, 
NEW_FLG, 
MATURED_FLG, 
TARGET_SALE_VAL, 
SALE_TOT_QTY_OTR_TY, NET_SALE_OTR_TY, SALE_TOT_QTY_OTR_LY, NET_SALE_OTR_LY, 
SALE_TOT_QTY_CON_TY, NET_SALE_CON_TY, SALE_TOT_QTY_CON_LY, NET_SALE_CON_LY, UPDATE_DATE)

SELECT 
CASE WHEN STORE_CODE = '2001W' THEN '2' WHEN STORE_CODE = '2005' THEN '4' ELSE STORE_FORMAT END AS STORE_FORMAT, 
CASE WHEN STORE_CODE = '2001W' THEN 'Supermarket' WHEN STORE_CODE = '2005' THEN 'Hypermarket' ELSE STORE_FORMAT_DESC END AS STORE_FORMAT_DESC, 
STORE_CODE, STORE_DESCRIPTION, 
MERCH_GROUP_CODE, MERCH_GROUP_DESC, 
GROUP_CODE, GROUP_DESC, 
DIVISION, DIVISION_DESC, 
DEPARTMENT_CODE, DEPARTMENT_DESC, 
NEW_FLG, MATURED_FLG, 
CASE WHEN SUM(TARGET_SALE_VAL) IS NULL THEN 0 ELSE SUM(TARGET_SALE_VAL) END AS TARGET_SALE_VAL, 
CASE WHEN SUM(SALE_TOT_QTY_OTR_TY) IS NULL THEN 0 ELSE SUM(SALE_TOT_QTY_OTR_TY) END AS SALE_TOT_QTY_OTR_TY, 
CASE WHEN SUM(NET_SALE_OTR_TY) IS NULL THEN 0 ELSE SUM(NET_SALE_OTR_TY) END AS NET_SALE_OTR_TY, 
CASE WHEN SUM(SALE_TOT_QTY_OTR_LY) IS NULL THEN 0 ELSE SUM(SALE_TOT_QTY_OTR_LY) END AS SALE_TOT_QTY_OTR_LY, 
CASE WHEN SUM(NET_SALE_OTR_LY) IS NULL THEN 0 ELSE SUM(NET_SALE_OTR_LY) END AS NET_SALE_OTR_LY, 
CASE WHEN SUM(SALE_TOT_QTY_CON_TY) IS NULL THEN 0 ELSE SUM(SALE_TOT_QTY_CON_TY) END AS SALE_TOT_QTY_CON_TY, 
CASE WHEN SUM(NET_SALE_CON_TY) IS NULL THEN 0 ELSE SUM(NET_SALE_CON_TY) END AS NET_SALE_CON_TY, 
CASE WHEN SUM(SALE_TOT_QTY_CON_LY) IS NULL THEN 0 ELSE SUM(SALE_TOT_QTY_CON_LY) END AS SALE_TOT_QTY_CON_LY, 
CASE WHEN SUM(NET_SALE_CON_LY) IS NULL THEN 0 ELSE SUM(NET_SALE_CON_LY) END AS NET_SALE_CON_LY,
SYSDATE

FROM (
SELECT 
CASE WHEN BASE.STORE_FORMAT = '5' THEN '2' ELSE BASE.STORE_FORMAT END AS STORE_FORMAT, 
CASE WHEN BASE.STORE_FORMAT = '5' THEN 'Supermarket' ELSE BASE.STORE_FORMAT_DESC END AS STORE_FORMAT_DESC, 
BASE.STORE_CODE, 
UPPER(BASE.STORE_DESCRIPTION) AS STORE_DESCRIPTION,
CASE WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) THEN 'Z_OT'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) THEN 'SU'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) THEN 'SU'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) THEN 'DS'
ELSE BASE.MERCH_GROUP_CODE END AS MERCH_GROUP_CODE,
CASE WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) THEN 'OTHERS'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) THEN 'SUPERMARKET'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) THEN 'SUPERMARKET'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) THEN 'DEPARTMENT STORE'
ELSE BASE.MERCH_GROUP_DESC END AS MERCH_GROUP_DESC,
BASE.GROUP_CODE,
BASE.GROUP_DESC,
BASE.DIVISION,
BASE.DIVISION_DESC,
BASE.DEPARTMENT_CODE, 
BASE.DEPARTMENT_DESC, 
BASE.NEW_FLG, 
BASE.MATURED_FLG,
SUM(WTD.TARGET_SALE_VAL) TARGET_SALE_VAL,
SUM(NET_SALE_OTR_TY) NET_SALE_OTR_TY, SUM(SALE_TOT_QTY_OTR_TY) SALE_TOT_QTY_OTR_TY, SUM(NET_SALE_CON_TY) NET_SALE_CON_TY, SUM(SALE_TOT_QTY_CON_TY) SALE_TOT_QTY_CON_TY, 
SUM(NET_SALE_OTR_LY) NET_SALE_OTR_LY, SUM(SALE_TOT_QTY_OTR_LY) SALE_TOT_QTY_OTR_LY, SUM(NET_SALE_CON_LY) NET_SALE_CON_LY, SUM(SALE_TOT_QTY_CON_LY) SALE_TOT_QTY_CON_LY
, SUM(NVL(WTD.TARGET_SALE_VAL,0)+NVL(NET_SALE_OTR_TY,0)+NVL(SALE_TOT_QTY_OTR_TY,0)+NVL(NET_SALE_CON_TY,0)+NVL(SALE_TOT_QTY_CON_TY,0)+NVL(NET_SALE_OTR_LY,0)+NVL(SALE_TOT_QTY_OTR_LY,0)+NVL(NET_SALE_CON_LY,0)+NVL(SALE_TOT_QTY_CON_LY,0)) SALE_CHECK
FROM

(SELECT D.MONTH_IN_YEAR, D.PER, S.STORE_KEY, S.STORE_FORMAT, S.STORE_FORMAT_DESC, 
	CASE WHEN S.STORE_CODE IN ('4002') THEN '2001W'
		ELSE S.STORE_CODE END AS STORE_CODE,
		UPPER(S.STORE_DESCRIPTION) AS STORE_DESCRIPTION, 
	M.MERCH_GROUP_CODE, M.MERCH_GROUP_DESC, M.GROUP_CODE, M.GROUP_DESC, M.DIVISION, M.DIVISION_DESC, M.DEPARTMENT_CODE, M.DEPARTMENT_DESC,S.NEW_FLG, S.MATURED_FLG
FROM
	(SELECT MONTH_IN_YEAR, TO_CHAR(DATE_FLD, 'MON' ) PER
			FROM DIM_DATE_PRL 
			WHERE DATE_KEY BETWEEN $wk_st_date_key AND $wk_en_date_key 
	GROUP BY MONTH_IN_YEAR, TO_CHAR(DATE_FLD, 'MON' ))D,
	(SELECT DIM.STORE_KEY, DIM.STORE_FORMAT, DIM.STORE_FORMAT_DESC, DIM.STORE_CODE, DIM.STORE_DESCRIPTION, TST.NEW_FLG, TST.MATURED_FLG 
FROM DIM_STORE DIM
  LEFT JOIN (SELECT A.STORE_CODE, A.NEW_FLG, A.MATURED_FLG 
            FROM DIM_STORE A INNER JOIN (SELECT STORE_CODE, MAX(STORE_KEY) STORE_KEY FROM DIM_STORE GROUP BY STORE_CODE)B ON A.STORE_KEY = B.STORE_KEY AND A.STORE_CODE = B.STORE_CODE
            GROUP BY A.STORE_CODE, A.NEW_FLG, A.MATURED_FLG)TST ON DIM.STORE_CODE = TST.STORE_CODE
WHERE DIM.ACTIVE = 1 AND DIM.STORE_FORMAT IN (1, 2, 3, 4, 5) AND DIM.STORE_CODE NOT IN (6008))S,
	(SELECT D.MERCH_GROUP_CODE, D.MERCH_GROUP_DESC, D.GROUP_CODE, D.GROUP_DESC, D.DIVISION, D.DIVISION_DESC, D.DEPARTMENT_CODE, D.DEPARTMENT_DESC 
		FROM DIM_MERCHANDISE M 
			JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE 
								AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
		WHERE D.DIVISION NOT IN (4000))M
GROUP BY D.MONTH_IN_YEAR, D.PER, S.STORE_KEY, S.STORE_FORMAT, S.STORE_FORMAT_DESC, 
	CASE WHEN S.STORE_CODE IN ('4002') THEN '2001W'
		ELSE S.STORE_CODE END,
		UPPER(S.STORE_DESCRIPTION), 
	M.MERCH_GROUP_CODE, M.MERCH_GROUP_DESC, M.GROUP_CODE, M.GROUP_DESC, M.DIVISION, M.DIVISION_DESC, M.DEPARTMENT_CODE, M.DEPARTMENT_DESC,S.NEW_FLG, S.MATURED_FLG)BASE
	
LEFT JOIN

(SELECT 
AGG_MLY_STR_DEPT_TARGET.PER, 
DIM_STORE.STORE_KEY, 
DIM_STORE.STORE_FORMAT, 
CASE WHEN DIM_STORE.STORE_CODE IN ('4002') THEN '2001W'
	ELSE DIM_STORE.STORE_CODE END AS STORE_CODE,
DIM_SUB_DEPT.MERCH_GROUP_CODE,
DIM_SUB_DEPT.GROUP_CODE,
DIM_SUB_DEPT.DIVISION,
DIM_SUB_DEPT.DEPARTMENT_CODE,
NVL((SUM(TARGET_SALE_VAL))/1000,0) TARGET_SALE_VAL,  
NVL((SUM((NVL(SALE_NET_VAL_OTR_TY,0))-(NVL(SALE_TOT_TAX_VAL_OTR_TY,0))-(NVL(SALE_TOT_DISC_VAL_OTR_TY,0))))/1000,0) NET_SALE_OTR_TY,
SUM(SALE_TOT_QTY_OTR_TY)/1000 SALE_TOT_QTY_OTR_TY, 
NVL((SUM((NVL(SALE_NET_VAL_CON_TY,0))-(NVL(SALE_TOT_TAX_VAL_CON_TY,0))-(NVL(SALE_TOT_DISC_VAL_CON_TY,0))))/1000,0) NET_SALE_CON_TY,
SUM(SALE_TOT_QTY_CON_TY)/1000 SALE_TOT_QTY_CON_TY, 
NVL((SUM((NVL(SALE_NET_VAL_OTR_LY,0))-(NVL(SALE_TOT_TAX_VAL_OTR_LY,0))-(NVL(SALE_TOT_DISC_VAL_OTR_LY,0))))/1000,0) NET_SALE_OTR_LY,
SUM(SALE_TOT_QTY_OTR_LY)/1000 SALE_TOT_QTY_OTR_LY, 
NVL((SUM((NVL(SALE_NET_VAL_CON_LY,0))-(NVL(SALE_TOT_TAX_VAL_CON_LY,0))-(NVL(SALE_TOT_DISC_VAL_CON_LY,0))))/1000,0) NET_SALE_CON_LY,
SUM(SALE_TOT_QTY_CON_LY)/1000 SALE_TOT_QTY_CON_LY
FROM (	
	SELECT TBL.PER, TBL.STORE_KEY STORE_KEY, TBL.DS_KEY DS_KEY, TBL.STORE_CODE STORE_CODE, 
		TY_OTR.SALE_NET_VAL_OTR_TY, TY_OTR.SALE_TOT_TAX_VAL_OTR_TY, TY_OTR.SALE_TOT_DISC_VAL_OTR_TY, TY_OTR.SALE_TOT_QTY_OTR_TY,
		TY_CON.SALE_NET_VAL_CON_TY, TY_CON.SALE_TOT_TAX_VAL_CON_TY, TY_CON.SALE_TOT_DISC_VAL_CON_TY, TY_CON.SALE_TOT_QTY_CON_TY, 
		LY_OTR.SALE_NET_VAL_OTR_LY, LY_OTR.SALE_TOT_TAX_VAL_OTR_LY, LY_OTR.SALE_TOT_DISC_VAL_OTR_LY, LY_OTR.SALE_TOT_QTY_OTR_LY,
		LY_CON.SALE_NET_VAL_CON_LY, LY_CON.SALE_TOT_TAX_VAL_CON_LY, LY_CON.SALE_TOT_DISC_VAL_CON_LY, LY_CON.SALE_TOT_QTY_CON_LY,
		0 AS TARGET_SALE_VAL, 0 AS TARGET_SALE_VAL_LY, 0 AS TARGET_SALE_VAT, 0 AS TARGET_SALE_VAT_LY 
	FROM
		(SELECT D.PER, S.STORE_KEY, S.STORE_CODE, M.DS_KEY
		FROM
			(SELECT TO_CHAR(DATE_FLD, 'MON' ) PER
			FROM DIM_DATE_PRL 
			WHERE DATE_KEY BETWEEN $wk_st_date_key AND $wk_en_date_key 
			GROUP BY TO_CHAR(DATE_FLD, 'MON' ))D,
			(SELECT STORE_KEY, STORE_CODE
			FROM DIM_STORE 
			WHERE ACTIVE = 1 AND STORE_FORMAT IN (1, 2, 3, 4, 5))S,
			(SELECT D.DS_KEY, D.MERCH_GROUP_CODE, D.MERCH_GROUP_DESC, D.GROUP_CODE, D.GROUP_DESC, D.DIVISION, D.DIVISION_DESC, D.DEPARTMENT_CODE, D.DEPARTMENT_DESC
			FROM DIM_MERCHANDISE M 
				JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION 
					AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE )M
		GROUP BY D.PER, S.STORE_KEY, S.STORE_CODE, M.DS_KEY)TBL
		LEFT JOIN
		
		(SELECT TO_CHAR(DA.DATE_FLD, 'MON') PER, 
		STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, SUM(SALE_TOT_QTY) SALE_TOT_QTY_OTR_TY,
		SUM(SALE_NET_VAL) AS SALE_NET_VAL_OTR_TY, 
		SUM(SALE_TOT_TAX_VAL) SALE_TOT_TAX_VAL_OTR_TY, 
		SUM(SALE_TOT_DISC_VAL) SALE_TOT_DISC_VAL_OTR_TY
		FROM AGG_DLY_STR_PROD AGG 
			INNER JOIN DIM_PRODUCT M ON AGG.PRODUCT_KEY = M.PRODUCT_KEY AND (M.PRODUCT_CATEGORY = 0 OR M.PRODUCT_CATEGORY IS NULL)
			INNER JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
			INNER JOIN DIM_DATE DA ON AGG.DATE_KEY = DA.DATE_KEY
		WHERE AGG.DATE_KEY BETWEEN $wk_st_date_key AND $wk_en_date_key 
		GROUP BY TO_CHAR(DA.DATE_FLD, 'MON'), STORE_KEY, DS_KEY, STORE_CODE)TY_OTR
		
		ON TBL.PER = TY_OTR.PER AND TBL.STORE_KEY = TY_OTR.STORE_KEY AND TBL.STORE_CODE = TY_OTR.STORE_CODE AND TBL.DS_KEY = TY_OTR.DS_KEY
		LEFT JOIN
		
		(SELECT TO_CHAR(DA.DATE_FLD, 'MON') PER, 
		STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, SUM(SALE_TOT_QTY) SALE_TOT_QTY_CON_TY,  
		SUM(SALE_NET_VAL) AS SALE_NET_VAL_CON_TY, 
		SUM(SALE_TOT_TAX_VAL) SALE_TOT_TAX_VAL_CON_TY, 
		SUM(SALE_TOT_DISC_VAL) SALE_TOT_DISC_VAL_CON_TY
		FROM AGG_DLY_STR_PROD AGG 
			INNER JOIN DIM_PRODUCT M ON AGG.PRODUCT_KEY = M.PRODUCT_KEY AND M.PRODUCT_CATEGORY = 2
			INNER JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
			INNER JOIN DIM_DATE DA ON AGG.DATE_KEY = DA.DATE_KEY
		WHERE AGG.DATE_KEY BETWEEN $wk_st_date_key AND $wk_en_date_key 
		GROUP BY TO_CHAR(DA.DATE_FLD, 'MON'), STORE_KEY, DS_KEY, STORE_CODE)TY_CON
		
		ON TBL.PER = TY_CON.PER AND TBL.STORE_KEY = TY_CON.STORE_KEY AND TBL.STORE_CODE = TY_CON.STORE_CODE AND TBL.DS_KEY = TY_CON.DS_KEY
		LEFT JOIN
		
		(SELECT TO_CHAR(DA.DATE_FLD, 'MON') PER, 
		STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, SUM(SALE_TOT_QTY) SALE_TOT_QTY_OTR_LY,  
		SUM(SALE_NET_VAL) AS SALE_NET_VAL_OTR_LY, 
		SUM(SALE_TOT_TAX_VAL) SALE_TOT_TAX_VAL_OTR_LY, 
		SUM(SALE_TOT_DISC_VAL) SALE_TOT_DISC_VAL_OTR_LY
		FROM AGG_DLY_STR_PROD AGG 
			INNER JOIN DIM_PRODUCT M ON AGG.PRODUCT_KEY = M.PRODUCT_KEY AND (M.PRODUCT_CATEGORY = 0 OR M.PRODUCT_CATEGORY IS NULL)
			INNER JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
			INNER JOIN DIM_DATE DA ON AGG.DATE_KEY = DA.DATE_KEY
		WHERE AGG.DATE_KEY BETWEEN $wk_st_date_key_ly AND $wk_en_date_key_ly 
		GROUP BY TO_CHAR(DA.DATE_FLD, 'MON'), STORE_KEY, DS_KEY, STORE_CODE)LY_OTR
		
		ON TBL.PER = LY_OTR.PER AND TBL.STORE_KEY = LY_OTR.STORE_KEY AND TBL.STORE_CODE = LY_OTR.STORE_CODE AND TBL.DS_KEY = LY_OTR.DS_KEY
		LEFT JOIN
		
		(SELECT TO_CHAR(DA.DATE_FLD, 'MON') PER, 
		STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, SUM(SALE_TOT_QTY) SALE_TOT_QTY_CON_LY,  
		SUM(SALE_NET_VAL) AS SALE_NET_VAL_CON_LY, 
		SUM(SALE_TOT_TAX_VAL) SALE_TOT_TAX_VAL_CON_LY, 
		SUM(SALE_TOT_DISC_VAL) SALE_TOT_DISC_VAL_CON_LY
		FROM AGG_DLY_STR_PROD AGG 
			INNER JOIN DIM_PRODUCT M ON AGG.PRODUCT_KEY = M.PRODUCT_KEY AND M.PRODUCT_CATEGORY = 2 
			INNER JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
			INNER JOIN DIM_DATE DA ON AGG.DATE_KEY = DA.DATE_KEY
		WHERE AGG.DATE_KEY BETWEEN $wk_st_date_key_ly AND $wk_en_date_key_ly 
		GROUP BY TO_CHAR(DA.DATE_FLD, 'MON'), STORE_KEY, DS_KEY, STORE_CODE)LY_CON
		
		ON TBL.PER = LY_CON.PER AND TBL.STORE_KEY = LY_CON.STORE_KEY AND TBL.STORE_CODE = LY_CON.STORE_CODE AND TBL.DS_KEY = LY_CON.DS_KEY
	
	UNION ALL 
	
	SELECT TO_CHAR(DP.DATE_FLD, 'MON') PER, STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, 
		0 AS SALE_NET_VAL_OTR_TY, 0 AS SALE_TOT_TAX_VAL_OTR_TY, 0 AS SALE_TOT_DISC_VAL_OTR_TY, 0 AS SALE_TOT_QTY_OTR_TY,
		0 AS SALE_NET_VAL_OTR_LY, 0 AS SALE_TOT_TAX_VAL_OTR_LY, 0 AS SALE_TOT_DISC_VAL_OTR_LY, 0 AS SALE_TOT_QTY_CON_TY, 
		0 AS SALE_NET_VAL_CON_TY, 0 AS SALE_TOT_TAX_VAL_CON_TY, 0 AS SALE_TOT_DISC_VAL_CON_LY, 0 AS SALE_TOT_QTY_OTR_LY,
		0 AS SALE_NET_VAL_CON_LY, 0 AS SALE_TOT_TAX_VAL_CON_LY, 0 AS SALE_TOT_DISC_VAL_CON_LY, 0 AS SALE_TOT_QTY_CON_LY,		
		SUM (TARGET_SALE_VAL) AS TARGET_SALE_VAL, 
		SUM (TARGET_SALE_VAL_LY) AS TARGET_SALE_VAL_LY, 
		SUM (TARGET_SALE_VAT) AS TARGET_SALE_VAT, 
		SUM (TARGET_SALE_VAT_LY) AS TARGET_SALE_VAT_LY 
	FROM FCT_TARGET A JOIN DIM_DATE_PRL DP ON A.DATE_KEY = DP.DATE_KEY 
	WHERE A.DATE_KEY BETWEEN $wk_st_date_key AND $wk_en_date_key 
	GROUP BY TO_CHAR(DP.DATE_FLD, 'MON'), STORE_KEY, STORE_CODE, DS_KEY 		
		
		) AGG_MLY_STR_DEPT_TARGET,DIM_STORE,DIM_SUB_DEPT
WHERE DIM_STORE.ACTIVE = 1 AND DIM_STORE.STORE_FORMAT IN (1, 2, 3, 4, 5) AND AGG_MLY_STR_DEPT_TARGET.STORE_KEY=DIM_STORE.STORE_KEY AND AGG_MLY_STR_DEPT_TARGET.DS_KEY=DIM_SUB_DEPT.DS_KEY
GROUP BY 
	AGG_MLY_STR_DEPT_TARGET.PER, 
	DIM_STORE.STORE_KEY, DIM_STORE.STORE_FORMAT, 
	CASE WHEN DIM_STORE.STORE_CODE IN ('4002') THEN '2001W'
		ELSE DIM_STORE.STORE_CODE END, 
	DIM_SUB_DEPT.MERCH_GROUP_CODE, DIM_SUB_DEPT.GROUP_CODE, DIM_SUB_DEPT.DIVISION, DIM_SUB_DEPT.DEPARTMENT_CODE
)WTD

ON BASE.PER = WTD.PER AND BASE.STORE_KEY = WTD.STORE_KEY AND BASE.STORE_FORMAT = WTD.STORE_FORMAT AND BASE.STORE_CODE = WTD.STORE_CODE AND BASE.MERCH_GROUP_CODE = WTD.MERCH_GROUP_CODE AND BASE.GROUP_CODE = WTD.GROUP_CODE AND BASE.DIVISION = WTD.DIVISION AND BASE.DEPARTMENT_CODE = WTD.DEPARTMENT_CODE

GROUP BY
CASE WHEN BASE.STORE_FORMAT = '5' THEN '2' ELSE BASE.STORE_FORMAT END, 
CASE WHEN BASE.STORE_FORMAT = '5' THEN 'Supermarket' ELSE BASE.STORE_FORMAT_DESC END, 
BASE.STORE_CODE, 
UPPER(BASE.STORE_DESCRIPTION),
CASE WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) THEN 'Z_OT'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) THEN 'SU'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) THEN 'SU'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) THEN 'DS'
ELSE BASE.MERCH_GROUP_CODE END,
CASE WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) THEN 'OTHERS'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) THEN 'SUPERMARKET'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) THEN 'SUPERMARKET'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) THEN 'DEPARTMENT STORE'
ELSE BASE.MERCH_GROUP_DESC END,
BASE.GROUP_CODE, 
BASE.GROUP_DESC, 
BASE.DIVISION, 
BASE.DIVISION_DESC, 
BASE.DEPARTMENT_CODE, 
BASE.DEPARTMENT_DESC, 
BASE.NEW_FLG, 
BASE.MATURED_FLG
)
WHERE SALE_CHECK <> 0
GROUP BY 
CASE WHEN STORE_CODE = '2001W' THEN '2' WHEN STORE_CODE = '2005' THEN '4' ELSE STORE_FORMAT END, 
CASE WHEN STORE_CODE = '2001W' THEN 'Supermarket' WHEN STORE_CODE = '2005' THEN 'Hypermarket' ELSE STORE_FORMAT_DESC END, 
STORE_CODE, STORE_DESCRIPTION, MERCH_GROUP_CODE, MERCH_GROUP_DESC, GROUP_CODE, GROUP_DESC, DIVISION, DIVISION_DESC, DEPARTMENT_CODE, DEPARTMENT_DESC, 
NEW_FLG, 
MATURED_FLG
};

my $sth = $dbh->prepare ($test);
$sth->execute;
 
$sth->finish();
$dbh->commit;

print "Done with Insert...";
}


sub generate_monthly_data {

my $truncate = $dbh->prepare( qq{ 
DELETE FROM METRO_IT_SALES_DEPT WHERE PER IN ('$upd_per1', '$upd_per2')
});
$truncate->execute();

print "Deleting sales data from ". $upd_per1 ." to ". $upd_per2." of table METRO_IT_SALES_DEPT... \nPreparing to insert new data... \n";

$test = qq{ 
INSERT INTO METRO_IT_SALES_DEPT
(MONTH_IN_YEAR, PER, STORE_FORMAT, STORE_FORMAT_DESC, STORE_CODE, STORE_DESCRIPTION, MERCH_GROUP_CODE, MERCH_GROUP_DESC, GROUP_CODE, GROUP_DESC, DIVISION, DIVISION_DESC, DEPARTMENT_CODE, DEPARTMENT_DESC, 
NEW_FLG, 
MATURED_FLG, 
TARGET_SALE_VAL, 
SALE_TOT_QTY_OTR_TY, NET_SALE_OTR_TY, SALE_TOT_QTY_OTR_LY, NET_SALE_OTR_LY, 
SALE_TOT_QTY_CON_TY, NET_SALE_CON_TY, SALE_TOT_QTY_CON_LY, NET_SALE_CON_LY, UPDATE_DATE, YEAR)

SELECT 
MONTH_IN_YEAR, PER, 
STORE_FORMAT,
STORE_FORMAT_DESC, 
STORE_CODE, STORE_DESCRIPTION, 
MERCH_GROUP_CODE, MERCH_GROUP_DESC, 
GROUP_CODE, GROUP_DESC, 
DIVISION, DIVISION_DESC, 
DEPARTMENT_CODE, DEPARTMENT_DESC, 
NEW_FLG, MATURED_FLG, 
CASE WHEN TARGET_SALE_VAL IS NULL THEN 0 ELSE TARGET_SALE_VAL END AS TARGET_SALE_VAL, 
CASE WHEN SALE_TOT_QTY_OTR_TY IS NULL THEN 0 ELSE SALE_TOT_QTY_OTR_TY END AS SALE_TOT_QTY_OTR_TY, 
CASE WHEN NET_SALE_OTR_TY IS NULL THEN 0 ELSE NET_SALE_OTR_TY END AS NET_SALE_OTR_TY, 
CASE WHEN SALE_TOT_QTY_OTR_LY IS NULL THEN 0 ELSE SALE_TOT_QTY_OTR_LY END AS SALE_TOT_QTY_OTR_LY, 
CASE WHEN NET_SALE_OTR_LY IS NULL THEN 0 ELSE NET_SALE_OTR_LY END AS NET_SALE_OTR_LY, 
CASE WHEN SALE_TOT_QTY_CON_TY IS NULL THEN 0 ELSE SALE_TOT_QTY_CON_TY END AS SALE_TOT_QTY_CON_TY, 
CASE WHEN NET_SALE_CON_TY IS NULL THEN 0 ELSE NET_SALE_CON_TY END AS NET_SALE_CON_TY, 
CASE WHEN SALE_TOT_QTY_CON_LY IS NULL THEN 0 ELSE SALE_TOT_QTY_CON_LY END AS SALE_TOT_QTY_CON_LY, 
CASE WHEN NET_SALE_CON_LY IS NULL THEN 0 ELSE NET_SALE_CON_LY END AS NET_SALE_CON_LY,
SYSDATE,
TO_CHAR(SYSDATE, 'YYYY') YEAR

FROM (
SELECT 
BASE.MONTH_IN_YEAR, 
BASE.PER, 
CASE 
	WHEN (BASE.STORE_CODE IN ('2001', '2002', '2003', '2004', '2006', '2007', '2009') AND ( (BASE.MERCH_GROUP_CODE = 'DS') OR (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) OR  (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) ) ) THEN '1'
	WHEN (BASE.STORE_CODE IN ('2001', '2002', '2003', '2004', '2006', '2007', '2009') AND ( (BASE.MERCH_GROUP_CODE = 'SU') OR (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) OR  (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) ) ) THEN '2'
	WHEN BASE.STORE_CODE IN ('2223') THEN '1'
	WHEN BASE.STORE_CODE IN ('2013', '2012', '4004', '3009', '3010', '3011', '2001W', '3012') THEN '2'
	WHEN BASE.STORE_CODE IN ('2005','2008','2010','2011','6001', '6002', '6003', '6004', '6005', '6012', '6009', '6010', '6011') THEN '4'
	WHEN BASE.STORE_CODE IN ('3001', '3007', '4003', '3002', '3003', '3004', '3005', '3006') THEN '2'
	ELSE BASE.STORE_FORMAT END AS STORE_FORMAT, 
CASE 
	WHEN (BASE.STORE_CODE IN ('2001', '2002', '2003', '2004', '2006', '2007', '2009') AND ( (BASE.MERCH_GROUP_CODE = 'DS') OR (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) OR  (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) ) ) THEN 'Department Store'
	WHEN (BASE.STORE_CODE IN ('2001', '2002', '2003', '2004', '2006', '2007', '2009') AND ( (BASE.MERCH_GROUP_CODE = 'SU') OR (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) OR  (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) ) ) THEN 'Supermarket'
	WHEN BASE.STORE_CODE IN ('2223') THEN 'Department Store'
	WHEN BASE.STORE_CODE IN ('2013', '2012', '4004', '3009', '3010', '3011', '2001W', '3012') THEN 'Supermarket'
	WHEN BASE.STORE_CODE IN ('2005','2008','2010','2011','6001', '6002', '6003', '6004', '6005', '6012', '6009', '6010', '6011') THEN 'Hypermarket'
	WHEN BASE.STORE_CODE IN ('3001', '3007', '4003', '3002', '3003', '3004', '3005', '3006') THEN 'Supermarket'
	ELSE BASE.STORE_FORMAT_DESC END AS STORE_FORMAT_DESC,
BASE.STORE_CODE, 
UPPER(BASE.STORE_DESCRIPTION) AS STORE_DESCRIPTION,
CASE WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) THEN 'Z_OT'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) THEN 'SU'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) THEN 'SU'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) THEN 'DS'
ELSE BASE.MERCH_GROUP_CODE END AS MERCH_GROUP_CODE,
CASE WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) THEN 'OTHERS'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) THEN 'SUPERMARKET'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) THEN 'SUPERMARKET'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) THEN 'DEPARTMENT STORE'
ELSE BASE.MERCH_GROUP_DESC END AS MERCH_GROUP_DESC,
BASE.GROUP_CODE,
BASE.GROUP_DESC,
BASE.DIVISION,
BASE.DIVISION_DESC,
BASE.DEPARTMENT_CODE, 
BASE.DEPARTMENT_DESC, 
CASE WHEN BASE.STORE_CODE IN ('3010','3009','3012','6004','6009','6012') THEN 1 ELSE 0 END AS NEW_FLG, 
CASE WHEN BASE.STORE_CODE IN ('3010','3009','3012','6004','6009','6012') THEN 0 ELSE 1 END AS MATURED_FLG,
SUM(WTD.TARGET_SALE_VAL) TARGET_SALE_VAL,
SUM(NET_SALE_OTR_TY) NET_SALE_OTR_TY, SUM(SALE_TOT_QTY_OTR_TY) SALE_TOT_QTY_OTR_TY, SUM(NET_SALE_CON_TY) NET_SALE_CON_TY, SUM(SALE_TOT_QTY_CON_TY) SALE_TOT_QTY_CON_TY, 
SUM(NET_SALE_OTR_LY) NET_SALE_OTR_LY, SUM(SALE_TOT_QTY_OTR_LY) SALE_TOT_QTY_OTR_LY, SUM(NET_SALE_CON_LY) NET_SALE_CON_LY, SUM(SALE_TOT_QTY_CON_LY) SALE_TOT_QTY_CON_LY
, SUM(NVL(WTD.TARGET_SALE_VAL,0)+NVL(NET_SALE_OTR_TY,0)+NVL(SALE_TOT_QTY_OTR_TY,0)+NVL(NET_SALE_CON_TY,0)+NVL(SALE_TOT_QTY_CON_TY,0)+NVL(NET_SALE_OTR_LY,0)+NVL(SALE_TOT_QTY_OTR_LY,0)+NVL(NET_SALE_CON_LY,0)+NVL(SALE_TOT_QTY_CON_LY,0)) SALE_CHECK
FROM

(SELECT D.MONTH_IN_YEAR, D.PER, S.STORE_KEY, S.STORE_FORMAT, S.STORE_FORMAT_DESC, 
	CASE WHEN S.STORE_CODE IN ('4002') THEN '2001W'
		ELSE S.STORE_CODE END AS STORE_CODE,
		UPPER(S.STORE_DESCRIPTION) AS STORE_DESCRIPTION, 
	M.MERCH_GROUP_CODE, M.MERCH_GROUP_DESC, M.GROUP_CODE, M.GROUP_DESC, M.DIVISION, M.DIVISION_DESC, M.DEPARTMENT_CODE, M.DEPARTMENT_DESC,S.NEW_FLG, S.MATURED_FLG
FROM
	(SELECT MONTH_IN_YEAR, TO_CHAR(DATE_FLD, 'MON' ) PER
			FROM DIM_DATE_PRL 
			WHERE DATE_KEY BETWEEN $yr_st_date_key AND $mo_en_date_key
	GROUP BY MONTH_IN_YEAR, TO_CHAR(DATE_FLD, 'MON' ))D,
	(SELECT DIM.STORE_KEY, DIM.STORE_FORMAT, DIM.STORE_FORMAT_DESC, DIM.STORE_CODE, DIM.STORE_DESCRIPTION, TST.NEW_FLG, TST.MATURED_FLG 
FROM DIM_STORE DIM
  LEFT JOIN (SELECT A.STORE_CODE, A.NEW_FLG, A.MATURED_FLG 
            FROM DIM_STORE A INNER JOIN (SELECT STORE_CODE, MAX(STORE_KEY) STORE_KEY FROM DIM_STORE GROUP BY STORE_CODE)B ON A.STORE_KEY = B.STORE_KEY AND A.STORE_CODE = B.STORE_CODE
            GROUP BY A.STORE_CODE, A.NEW_FLG, A.MATURED_FLG)TST ON DIM.STORE_CODE = TST.STORE_CODE
WHERE DIM.ACTIVE = 1 AND DIM.STORE_FORMAT IN (1, 2, 3, 4, 5) AND DIM.STORE_CODE NOT IN (6008))S,
	(SELECT D.MERCH_GROUP_CODE, D.MERCH_GROUP_DESC, D.GROUP_CODE, D.GROUP_DESC, D.DIVISION, D.DIVISION_DESC, D.DEPARTMENT_CODE, D.DEPARTMENT_DESC 
		FROM DIM_MERCHANDISE M 
			JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE 
								AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
		WHERE D.DIVISION NOT IN (4000))M
GROUP BY D.MONTH_IN_YEAR, D.PER, S.STORE_KEY, S.STORE_FORMAT, S.STORE_FORMAT_DESC, 
	CASE WHEN S.STORE_CODE IN ('4002') THEN '2001W'
		ELSE S.STORE_CODE END,
		UPPER(S.STORE_DESCRIPTION), 
	M.MERCH_GROUP_CODE, M.MERCH_GROUP_DESC, M.GROUP_CODE, M.GROUP_DESC, M.DIVISION, M.DIVISION_DESC, M.DEPARTMENT_CODE, M.DEPARTMENT_DESC,S.NEW_FLG, S.MATURED_FLG)BASE
	
LEFT JOIN

(SELECT 
AGG_MLY_STR_DEPT_TARGET.PER, 
DIM_STORE.STORE_KEY, 
DIM_STORE.STORE_FORMAT, 
CASE WHEN DIM_STORE.STORE_CODE IN ('4002') THEN '2001W'
	ELSE DIM_STORE.STORE_CODE END AS STORE_CODE,
DIM_SUB_DEPT.MERCH_GROUP_CODE,
DIM_SUB_DEPT.GROUP_CODE,
DIM_SUB_DEPT.DIVISION,
DIM_SUB_DEPT.DEPARTMENT_CODE,
NVL((SUM(TARGET_SALE_VAL))/1000,0) TARGET_SALE_VAL,  
NVL((SUM((NVL(SALE_NET_VAL_OTR_TY,0))-(NVL(SALE_TOT_TAX_VAL_OTR_TY,0))-(NVL(SALE_TOT_DISC_VAL_OTR_TY,0))))/1000,0) NET_SALE_OTR_TY,
SUM(SALE_TOT_QTY_OTR_TY)/1000 SALE_TOT_QTY_OTR_TY, 
NVL((SUM((NVL(SALE_NET_VAL_CON_TY,0))-(NVL(SALE_TOT_TAX_VAL_CON_TY,0))-(NVL(SALE_TOT_DISC_VAL_CON_TY,0))))/1000,0) NET_SALE_CON_TY,
SUM(SALE_TOT_QTY_CON_TY)/1000 SALE_TOT_QTY_CON_TY, 
NVL((SUM((NVL(SALE_NET_VAL_OTR_LY,0))-(NVL(SALE_TOT_TAX_VAL_OTR_LY,0))-(NVL(SALE_TOT_DISC_VAL_OTR_LY,0))))/1000,0) NET_SALE_OTR_LY,
SUM(SALE_TOT_QTY_OTR_LY)/1000 SALE_TOT_QTY_OTR_LY, 
NVL((SUM((NVL(SALE_NET_VAL_CON_LY,0))-(NVL(SALE_TOT_TAX_VAL_CON_LY,0))-(NVL(SALE_TOT_DISC_VAL_CON_LY,0))))/1000,0) NET_SALE_CON_LY,
SUM(SALE_TOT_QTY_CON_LY)/1000 SALE_TOT_QTY_CON_LY
FROM (	
	SELECT TBL.PER, TBL.STORE_KEY STORE_KEY, TBL.DS_KEY DS_KEY, TBL.STORE_CODE STORE_CODE, 
		TY_OTR.SALE_NET_VAL_OTR_TY, TY_OTR.SALE_TOT_TAX_VAL_OTR_TY, TY_OTR.SALE_TOT_DISC_VAL_OTR_TY, TY_OTR.SALE_TOT_QTY_OTR_TY,
		TY_CON.SALE_NET_VAL_CON_TY, TY_CON.SALE_TOT_TAX_VAL_CON_TY, TY_CON.SALE_TOT_DISC_VAL_CON_TY, TY_CON.SALE_TOT_QTY_CON_TY, 
		LY_OTR.SALE_NET_VAL_OTR_LY, LY_OTR.SALE_TOT_TAX_VAL_OTR_LY, LY_OTR.SALE_TOT_DISC_VAL_OTR_LY, LY_OTR.SALE_TOT_QTY_OTR_LY,
		LY_CON.SALE_NET_VAL_CON_LY, LY_CON.SALE_TOT_TAX_VAL_CON_LY, LY_CON.SALE_TOT_DISC_VAL_CON_LY, LY_CON.SALE_TOT_QTY_CON_LY,
		0 AS TARGET_SALE_VAL, 0 AS TARGET_SALE_VAL_LY, 0 AS TARGET_SALE_VAT, 0 AS TARGET_SALE_VAT_LY 
	FROM
		(SELECT D.PER, S.STORE_KEY, S.STORE_CODE, M.DS_KEY
		FROM
			(SELECT TO_CHAR(DATE_FLD, 'MON' ) PER
			FROM DIM_DATE_PRL 
			WHERE DATE_KEY BETWEEN $yr_st_date_key AND $mo_en_date_key
			GROUP BY TO_CHAR(DATE_FLD, 'MON' ))D,
			(SELECT STORE_KEY, STORE_CODE
			FROM DIM_STORE 
			WHERE ACTIVE = 1 AND STORE_FORMAT IN (1, 2, 3, 4, 5))S,
			(SELECT D.DS_KEY, D.MERCH_GROUP_CODE, D.MERCH_GROUP_DESC, D.GROUP_CODE, D.GROUP_DESC, D.DIVISION, D.DIVISION_DESC, D.DEPARTMENT_CODE, D.DEPARTMENT_DESC
			FROM DIM_MERCHANDISE M 
				JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION 
					AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE )M
		GROUP BY D.PER, S.STORE_KEY, S.STORE_CODE, M.DS_KEY)TBL
		LEFT JOIN
		
		(SELECT TO_CHAR(DA.DATE_FLD, 'MON') PER, 
		STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, SUM(SALE_TOT_QTY) SALE_TOT_QTY_OTR_TY,
		SUM(SALE_NET_VAL) AS SALE_NET_VAL_OTR_TY, 
		SUM(SALE_TOT_TAX_VAL) SALE_TOT_TAX_VAL_OTR_TY, 
		SUM(SALE_TOT_DISC_VAL) SALE_TOT_DISC_VAL_OTR_TY
		FROM AGG_DLY_STR_PROD AGG 
			INNER JOIN DIM_PRODUCT M ON AGG.PRODUCT_KEY = M.PRODUCT_KEY AND (M.PRODUCT_CATEGORY = 0 OR M.PRODUCT_CATEGORY IS NULL)
			INNER JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
			INNER JOIN DIM_DATE DA ON AGG.DATE_KEY = DA.DATE_KEY
		WHERE AGG.DATE_KEY BETWEEN $yr_st_date_key AND $mo_en_date_key
		GROUP BY TO_CHAR(DA.DATE_FLD, 'MON'), STORE_KEY, DS_KEY, STORE_CODE)TY_OTR
		
		ON TBL.PER = TY_OTR.PER AND TBL.STORE_KEY = TY_OTR.STORE_KEY AND TBL.STORE_CODE = TY_OTR.STORE_CODE AND TBL.DS_KEY = TY_OTR.DS_KEY
		LEFT JOIN
		
		(SELECT TO_CHAR(DA.DATE_FLD, 'MON') PER, 
		STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, SUM(SALE_TOT_QTY) SALE_TOT_QTY_CON_TY,  
		SUM(SALE_NET_VAL) AS SALE_NET_VAL_CON_TY, 
		SUM(SALE_TOT_TAX_VAL) SALE_TOT_TAX_VAL_CON_TY, 
		SUM(SALE_TOT_DISC_VAL) SALE_TOT_DISC_VAL_CON_TY
		FROM AGG_DLY_STR_PROD AGG 
			INNER JOIN DIM_PRODUCT M ON AGG.PRODUCT_KEY = M.PRODUCT_KEY AND M.PRODUCT_CATEGORY = 2
			INNER JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
			INNER JOIN DIM_DATE DA ON AGG.DATE_KEY = DA.DATE_KEY
		WHERE AGG.DATE_KEY BETWEEN $yr_st_date_key AND $mo_en_date_key
		GROUP BY TO_CHAR(DA.DATE_FLD, 'MON'), STORE_KEY, DS_KEY, STORE_CODE)TY_CON
		
		ON TBL.PER = TY_CON.PER AND TBL.STORE_KEY = TY_CON.STORE_KEY AND TBL.STORE_CODE = TY_CON.STORE_CODE AND TBL.DS_KEY = TY_CON.DS_KEY
		LEFT JOIN
		
		(SELECT TO_CHAR(DA.DATE_FLD, 'MON') PER, 
		STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, SUM(SALE_TOT_QTY) SALE_TOT_QTY_OTR_LY,  
		SUM(SALE_NET_VAL) AS SALE_NET_VAL_OTR_LY, 
		SUM(SALE_TOT_TAX_VAL) SALE_TOT_TAX_VAL_OTR_LY, 
		SUM(SALE_TOT_DISC_VAL) SALE_TOT_DISC_VAL_OTR_LY
		FROM AGG_DLY_STR_PROD AGG 
			INNER JOIN DIM_PRODUCT M ON AGG.PRODUCT_KEY = M.PRODUCT_KEY AND (M.PRODUCT_CATEGORY = 0 OR M.PRODUCT_CATEGORY IS NULL)
			INNER JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
			INNER JOIN DIM_DATE DA ON AGG.DATE_KEY = DA.DATE_KEY
		WHERE AGG.DATE_KEY BETWEEN $yr_st_date_key_ly AND $mo_en_date_key_ly
		GROUP BY TO_CHAR(DA.DATE_FLD, 'MON'), STORE_KEY, DS_KEY, STORE_CODE)LY_OTR
		
		ON TBL.PER = LY_OTR.PER AND TBL.STORE_KEY = LY_OTR.STORE_KEY AND TBL.STORE_CODE = LY_OTR.STORE_CODE AND TBL.DS_KEY = LY_OTR.DS_KEY
		LEFT JOIN
		
		(SELECT TO_CHAR(DA.DATE_FLD, 'MON') PER, 
		STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, SUM(SALE_TOT_QTY) SALE_TOT_QTY_CON_LY,  
		SUM(SALE_NET_VAL) AS SALE_NET_VAL_CON_LY, 
		SUM(SALE_TOT_TAX_VAL) SALE_TOT_TAX_VAL_CON_LY, 
		SUM(SALE_TOT_DISC_VAL) SALE_TOT_DISC_VAL_CON_LY
		FROM AGG_DLY_STR_PROD AGG 
			INNER JOIN DIM_PRODUCT M ON AGG.PRODUCT_KEY = M.PRODUCT_KEY AND M.PRODUCT_CATEGORY = 2 
			INNER JOIN DIM_SUB_DEPT D ON M.MERCH_GROUP_CODE = D.MERCH_GROUP_CODE AND M.GROUP_CODE = D.GROUP_CODE AND M.GROUP2_CODE = D.GROUP2_CODE AND M.DIVISION = D.DIVISION AND M.DEPARTMENT_CODE = D.DEPARTMENT_CODE AND M.SUB_DEPARTMENT_CODE = D.SUB_DEPARTMENT_CODE
			INNER JOIN DIM_DATE DA ON AGG.DATE_KEY = DA.DATE_KEY
		WHERE AGG.DATE_KEY BETWEEN $yr_st_date_key_ly AND $mo_en_date_key_ly
		GROUP BY TO_CHAR(DA.DATE_FLD, 'MON'), STORE_KEY, DS_KEY, STORE_CODE)LY_CON
		
		ON TBL.PER = LY_CON.PER AND TBL.STORE_KEY = LY_CON.STORE_KEY AND TBL.STORE_CODE = LY_CON.STORE_CODE AND TBL.DS_KEY = LY_CON.DS_KEY
	
	UNION ALL 
	
	SELECT TO_CHAR(DP.DATE_FLD, 'MON') PER, STORE_KEY, DS_KEY, CAST(STORE_CODE AS VARCHAR2(20)) AS STORE_CODE, 
		0 AS SALE_NET_VAL_OTR_TY, 0 AS SALE_TOT_TAX_VAL_OTR_TY, 0 AS SALE_TOT_DISC_VAL_OTR_TY, 0 AS SALE_TOT_QTY_OTR_TY,
		0 AS SALE_NET_VAL_OTR_LY, 0 AS SALE_TOT_TAX_VAL_OTR_LY, 0 AS SALE_TOT_DISC_VAL_OTR_LY, 0 AS SALE_TOT_QTY_CON_TY, 
		0 AS SALE_NET_VAL_CON_TY, 0 AS SALE_TOT_TAX_VAL_CON_TY, 0 AS SALE_TOT_DISC_VAL_CON_LY, 0 AS SALE_TOT_QTY_OTR_LY,
		0 AS SALE_NET_VAL_CON_LY, 0 AS SALE_TOT_TAX_VAL_CON_LY, 0 AS SALE_TOT_DISC_VAL_CON_LY, 0 AS SALE_TOT_QTY_CON_LY,		
		SUM (TARGET_SALE_VAL) AS TARGET_SALE_VAL, 
		SUM (TARGET_SALE_VAL_LY) AS TARGET_SALE_VAL_LY, 
		SUM (TARGET_SALE_VAT) AS TARGET_SALE_VAT, 
		SUM (TARGET_SALE_VAT_LY) AS TARGET_SALE_VAT_LY 
	FROM FCT_TARGET A JOIN DIM_DATE_PRL DP ON A.DATE_KEY = DP.DATE_KEY 
	WHERE A.DATE_KEY BETWEEN $yr_st_date_key AND $mo_en_date_key
	GROUP BY TO_CHAR(DP.DATE_FLD, 'MON'), STORE_KEY, STORE_CODE, DS_KEY 		
		
		) AGG_MLY_STR_DEPT_TARGET,DIM_STORE,DIM_SUB_DEPT
WHERE DIM_STORE.ACTIVE = 1 AND DIM_STORE.STORE_FORMAT IN (1, 2, 3, 4, 5) AND AGG_MLY_STR_DEPT_TARGET.STORE_KEY=DIM_STORE.STORE_KEY AND AGG_MLY_STR_DEPT_TARGET.DS_KEY=DIM_SUB_DEPT.DS_KEY
GROUP BY 
	AGG_MLY_STR_DEPT_TARGET.PER, 
	DIM_STORE.STORE_KEY, DIM_STORE.STORE_FORMAT, 
	CASE WHEN DIM_STORE.STORE_CODE IN ('4002') THEN '2001W'
		ELSE DIM_STORE.STORE_CODE END, 
	DIM_SUB_DEPT.MERCH_GROUP_CODE, DIM_SUB_DEPT.GROUP_CODE, DIM_SUB_DEPT.DIVISION, DIM_SUB_DEPT.DEPARTMENT_CODE
)WTD

ON BASE.PER = WTD.PER AND BASE.STORE_KEY = WTD.STORE_KEY AND BASE.STORE_FORMAT = WTD.STORE_FORMAT AND BASE.STORE_CODE = WTD.STORE_CODE AND BASE.MERCH_GROUP_CODE = WTD.MERCH_GROUP_CODE AND BASE.GROUP_CODE = WTD.GROUP_CODE AND BASE.DIVISION = WTD.DIVISION AND BASE.DEPARTMENT_CODE = WTD.DEPARTMENT_CODE

GROUP BY
BASE.MONTH_IN_YEAR, 
BASE.PER,
CASE 
	WHEN (BASE.STORE_CODE IN ('2001', '2002', '2003', '2004', '2006', '2007', '2009') AND ( (BASE.MERCH_GROUP_CODE = 'DS') OR (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) OR  (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) ) ) THEN '1'
	WHEN (BASE.STORE_CODE IN ('2001', '2002', '2003', '2004', '2006', '2007', '2009') AND ( (BASE.MERCH_GROUP_CODE = 'SU') OR (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) OR  (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) ) ) THEN '2'
	WHEN BASE.STORE_CODE IN ('2223') THEN '1'
	WHEN BASE.STORE_CODE IN ('2013', '2012', '4004', '3009', '3010', '3011', '2001W', '3012') THEN '2'
	WHEN BASE.STORE_CODE IN ('2005','2008','2010','2011','6001', '6002', '6003', '6004', '6005', '6012', '6009', '6010', '6011') THEN '4'
	WHEN BASE.STORE_CODE IN ('3001', '3007', '4003', '3002', '3003', '3004', '3005', '3006') THEN '2'
	ELSE BASE.STORE_FORMAT END, 
CASE 
	WHEN (BASE.STORE_CODE IN ('2001', '2002', '2003', '2004', '2006', '2007', '2009') AND ( (BASE.MERCH_GROUP_CODE = 'DS') OR (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) OR  (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) ) ) THEN 'Department Store'
	WHEN (BASE.STORE_CODE IN ('2001', '2002', '2003', '2004', '2006', '2007', '2009') AND ( (BASE.MERCH_GROUP_CODE = 'SU') OR (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) OR  (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) ) ) THEN 'Supermarket'
	WHEN BASE.STORE_CODE IN ('2223') THEN 'Department Store'
	WHEN BASE.STORE_CODE IN ('2013', '2012', '4004', '3009', '3010', '3011', '2001W', '3012') THEN 'Supermarket'
	WHEN BASE.STORE_CODE IN ('2005','2008','2010','2011','6001', '6002', '6003', '6004', '6005', '6012', '6009', '6010', '6011') THEN 'Hypermarket'
	WHEN BASE.STORE_CODE IN ('3001', '3007', '4003', '3002', '3003', '3004', '3005', '3006') THEN 'Supermarket'
	ELSE BASE.STORE_FORMAT_DESC END,
BASE.STORE_CODE, 
UPPER(BASE.STORE_DESCRIPTION),
CASE WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) THEN 'Z_OT'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) THEN 'SU'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) THEN 'SU'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) THEN 'DS'
ELSE BASE.MERCH_GROUP_CODE END,
CASE WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 9000) THEN 'OTHERS'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8500) THEN 'SUPERMARKET'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE = 8040) THEN 'SUPERMARKET'
     WHEN (BASE.MERCH_GROUP_CODE = 'OT' AND BASE.DIVISION = 8000 AND BASE.DEPARTMENT_CODE != 8040) THEN 'DEPARTMENT STORE'
ELSE BASE.MERCH_GROUP_DESC END,
BASE.GROUP_CODE, 
BASE.GROUP_DESC, 
BASE.DIVISION, 
BASE.DIVISION_DESC, 
BASE.DEPARTMENT_CODE, 
BASE.DEPARTMENT_DESC, 
CASE WHEN BASE.STORE_CODE IN ('3010','3009','3012','6004','6009','6012') THEN 1 ELSE 0 END, 
CASE WHEN BASE.STORE_CODE IN ('3010','3009','3012','6004','6009','6012') THEN 0 ELSE 1 END
)
WHERE SALE_CHECK <> 0
};

my $sth = $dbh->prepare ($test);
$sth->execute;
 
$sth->finish();
$dbh->commit;

print "Done with Insert...";

}


sub generate_margin_data {

my $truncate = $dbh->prepare( qq{ 
DELETE FROM METRO_IT_MARGIN_DEPT WHERE PER = SUBSTR($period, 1, 3)
});
$truncate->execute();

$truncate->finish();

print "Done Deleting current periods records on table METRO_IT_MARGIN_DEPT... \nPreparing to Insert... \n";

$test = '
INSERT INTO METRO_IT_MARGIN_DEPT 

(PER, STORE_FORMAT, STORE_FORMAT_DESC, STORE_CODE, STORE_DESCRIPTION, MERCH_GROUP_CODE, MERCH_GROUP_DESC, GROUP_CODE, GROUP_DESC, DIVISION, DIVISION_DESC, DEPARTMENT_CODE, DEPARTMENT_DESC, OTR_COST, OTR_RETAIL, OTR_MARGIN, CON_COST, CON_RETAIL, CON_MARGIN, AMOUNT501000, AMOUNT503200, AMOUNT503250, AMOUNT503500, AMOUNT506000, AMOUNT503000, AMOUNT507000, AMOUNT999998, AMOUNT505000, AMOUNT504000, AMOUNT432000, AMOUNT433000, AMOUNT458490, AMOUNT434000, AMOUNT458550, AMOUNT460100, AMOUNT460200, AMOUNT460300, AMOUNT502000, NEW_FLG, MATURED_FLG, UPDATE_DATE)

SELECT PER, STORE_FORMAT, STORE_FORMAT_DESC, STORE_CODE, STORE_DESCRIPTION, MERCH_GROUP_CODE, MERCH_GROUP_DESC, GROUP_CODE, GROUP_DESC, DIVISION, DIVISION_DESC, DEPARTMENT_CODE, DEPARTMENT_DESC, OTR_COST, OTR_RETAIL, OTR_MARGIN, CON_COST, CON_RETAIL, CON_MARGIN, AMOUNT501000, AMOUNT503200, AMOUNT503250, AMOUNT503500, AMOUNT506000, AMOUNT503000, AMOUNT507000, AMOUNT999998, AMOUNT505000, AMOUNT504000, AMOUNT432000, AMOUNT433000, AMOUNT458490, AMOUNT434000, AMOUNT458550, AMOUNT460100, AMOUNT460200, AMOUNT460300, AMOUNT502000, NEW_FLG, MATURED_FLG, SYSDATE FROM ( 

SELECT 
SGD.PER,
CASE 
	WHEN TO_CHAR(SGD.STORE) IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') THEN \'3\'
	WHEN TO_CHAR(SGD.STORE) IN (\'2223\') THEN \'1\'
	WHEN TO_CHAR(SGD.STORE) IN (\'2013\', \'2012\', \'4004\', \'3009\', \'3010\', \'3011\', \'2001W\', \'3012\') THEN \'2\'
	WHEN TO_CHAR(SGD.STORE) IN (\'6001\', \'6002\', \'6003\', \'6004\', \'6005\', \'6012\', \'6009\', \'6010\', \'6011\') THEN \'4\'
	WHEN TO_CHAR(SGD.STORE) IN (\'3001\', \'3007\', \'4003\', \'3002\', \'3003\', \'3004\', \'3005\', \'3006\') THEN \'2\'
	ELSE TO_CHAR(SGD.STORE_FORMAT) END AS STORE_FORMAT,
CASE 
	WHEN TO_CHAR(SGD.STORE) IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') THEN \'Dept Store_Supermarket\'
	WHEN TO_CHAR(SGD.STORE) IN (\'2223\') THEN \'Department Store\'
	WHEN TO_CHAR(SGD.STORE) IN (\'2013\', \'2012\', \'4004\', \'3009\', \'3010\', \'3011\', \'2001W\', \'3012\') THEN \'Supermarket\'
	WHEN TO_CHAR(SGD.STORE) IN (\'6001\', \'6002\', \'6003\', \'6004\', \'6005\', \'6012\', \'6009\', \'6010\', \'6011\') THEN \'Hypermarket\'
	WHEN TO_CHAR(SGD.STORE) IN (\'3001\', \'3007\', \'4003\', \'3002\', \'3003\', \'3004\', \'3005\', \'3006\') THEN \'Supermarket\'
	ELSE SGD.STORE_FORMAT_DESC END AS STORE_FORMAT_DESC,
CASE WHEN TO_CHAR(SGD.STORE) = \'4002\' THEN \'2001W\' 
	ELSE TO_CHAR(SGD.STORE) END AS STORE_CODE,
SGD.STORE_NAME STORE_DESCRIPTION, 
CASE WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) THEN \'Z_OT\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) THEN \'SU\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) THEN \'SU\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) THEN \'DS\' 
	ELSE SGD.MERCH_GROUP_CODE END AS MERCH_GROUP_CODE,
CASE WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) THEN \'OTHERS\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) THEN \'SUPERMARKET\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) THEN \'SUPERMARKET\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) THEN \'DEPARTMENT STORE\' 
	ELSE SGD.MERCH_GROUP_DESC END AS MERCH_GROUP_DESC,
SGD.ATTRIB1 GROUP_CODE, 
SGD.ATTRIB2 GROUP_DESC, 
SGD.DIVISION, 
SGD.DIV_NAME DIVISION_DESC, 
SGD.GROUP_NO DEPARTMENT_CODE, 
SGD.GROUP_NAME DEPARTMENT_DESC, 
(SUM(OTR.OTR_COST)/1000) OTR_COST, (SUM(OTR.OTR_RETAIL)/1000) OTR_RETAIL, (SUM(OTR.OTR_MARGIN)/1000) OTR_MARGIN, 
(SUM(CON.CON_COST)/1000) CON_COST, (SUM(CON.CON_RETAIL)/1000) CON_RETAIL, (SUM(CON.CON_MARGIN)/1000) CON_MARGIN,
(SUM(OTR501000.DEBIT_AMT501000)/1000) DEBIT_AMT501000, (SUM(OTR501000.CREDIT_AMT501000)/1000) CREDIT_AMT501000, (SUM(OTR501000.AMOUNT501000)/1000) AMOUNT501000,
(SUM(OTR503200.DEBIT_AMT503200)/1000) DEBIT_AMT503200, (SUM(OTR503200.CREDIT_AMT503200)/1000) CREDIT_AMT503200, (SUM(OTR503200.AMOUNT503200)/1000) AMOUNT503200,
(SUM(OTR503250.DEBIT_AMT503250)/1000) DEBIT_AMT503250, (SUM(OTR503250.CREDIT_AMT503250)/1000) CREDIT_AMT503250, (SUM(OTR503250.AMOUNT503250)/1000) AMOUNT503250,
(SUM(OTR503500.DEBIT_AMT503500)/1000) DEBIT_AMT503500, (SUM(OTR503500.CREDIT_AMT503500)/1000) CREDIT_AMT503500, (SUM(OTR503500.AMOUNT503500)/1000) AMOUNT503500,
(SUM(OTR506000.DEBIT_AMT506000)/1000) DEBIT_AMT506000, (SUM(OTR506000.CREDIT_AMT506000)/1000) CREDIT_AMT506000, (SUM(OTR506000.AMOUNT506000)/1000) AMOUNT506000,
(SUM(OTR503000.DEBIT_AMT503000)/1000) DEBIT_AMT503000, (SUM(OTR503000.CREDIT_AMT503000)/1000) CREDIT_AMT503000, (SUM(OTR503000.AMOUNT503000)/1000) AMOUNT503000,
(SUM(OTR507000.DEBIT_AMT507000)/1000) DEBIT_AMT507000, (SUM(OTR507000.CREDIT_AMT507000)/1000) CREDIT_AMT507000, (SUM(OTR507000.AMOUNT507000)/1000) AMOUNT507000,
(SUM(OTR999998.DEBIT_AMT999998)/1000) DEBIT_AMT999998, (SUM(OTR999998.CREDIT_AMT999998)/1000) CREDIT_AMT999998, (SUM(OTR999998.AMOUNT999998)/1000) AMOUNT999998,
(SUM(OTR505000.DEBIT_AMT505000)/1000) DEBIT_AMT505000, (SUM(OTR505000.CREDIT_AMT505000)/1000) CREDIT_AMT505000, (SUM(OTR505000.AMOUNT505000)/1000) AMOUNT505000,
(SUM(OTR504000.DEBIT_AMT504000)/1000) DEBIT_AMT504000, (SUM(OTR504000.CREDIT_AMT504000)/1000) CREDIT_AMT504000, (SUM(OTR504000.AMOUNT504000)/1000) AMOUNT504000,
(SUM(OTR432000.DEBIT_AMT432000)/1000) DEBIT_AMT432000, (SUM(OTR432000.CREDIT_AMT432000)/1000) CREDIT_AMT432000, (SUM(OTR432000.AMOUNT432000)/1000) AMOUNT432000,
(SUM(OTR433000.DEBIT_AMT433000)/1000) DEBIT_AMT433000, (SUM(OTR433000.CREDIT_AMT433000)/1000) CREDIT_AMT433000, (SUM(OTR433000.AMOUNT433000)/1000) AMOUNT433000,
(SUM(OTR458490.DEBIT_AMT458490)/1000) DEBIT_AMT458490, (SUM(OTR458490.CREDIT_AMT458490)/1000) CREDIT_AMT458490, (SUM(OTR458490.AMOUNT458490)/1000) AMOUNT458490,
(SUM(CON434000.DEBIT_AMT434000)/1000) DEBIT_AMT434000, (SUM(CON434000.CREDIT_AMT434000)/1000) CREDIT_AMT434000, (SUM(CON434000.AMOUNT434000)/1000) AMOUNT434000,
(SUM(CON458550.DEBIT_AMT458550)/1000) DEBIT_AMT458550, (SUM(CON458550.CREDIT_AMT458550)/1000) CREDIT_AMT458550, (SUM(CON458550.AMOUNT458550)/1000) AMOUNT458550,
(SUM(CON460100.DEBIT_AMT460100)/1000) DEBIT_AMT460100, (SUM(CON460100.CREDIT_AMT460100)/1000) CREDIT_AMT460100, (SUM(CON460100.AMOUNT460100)/1000) AMOUNT460100,
(SUM(CON460200.DEBIT_AMT460200)/1000) DEBIT_AMT460200, (SUM(CON460200.CREDIT_AMT460200)/1000) CREDIT_AMT460200, (SUM(CON460200.AMOUNT460200)/1000) AMOUNT460200,
(SUM(CON460300.DEBIT_AMT460300)/1000) DEBIT_AMT460300, (SUM(CON460300.CREDIT_AMT460300)/1000) CREDIT_AMT460300, (SUM(CON460300.AMOUNT460300)/1000) AMOUNT460300,
(SUM(CON502000.DEBIT_AMT502000)/1000) DEBIT_AMT502000, (SUM(CON502000.CREDIT_AMT502000)/1000) CREDIT_AMT502000, (SUM(CON502000.AMOUNT502000)/1000) AMOUNT502000,
SUM( NVL(OTR.OTR_COST,0) + NVL(OTR.OTR_RETAIL,0) + NVL(OTR.OTR_MARGIN,0) + NVL(CON.CON_COST,0) + NVL(CON.CON_RETAIL,0) + NVL(CON.CON_MARGIN,0) + NVL(OTR501000.AMOUNT501000,0) + NVL(OTR503200.AMOUNT503200,0) + NVL(OTR503250.AMOUNT503250,0) + NVL(OTR503500.AMOUNT503500,0) + NVL(OTR506000.AMOUNT506000,0) + NVL(OTR503000.AMOUNT503000,0) + NVL(OTR507000.AMOUNT507000,0) + NVL(OTR999998.AMOUNT999998,0) + NVL(OTR505000.AMOUNT505000,0) + NVL(OTR504000.AMOUNT504000,0) + NVL(OTR432000.AMOUNT432000,0) + NVL(OTR433000.AMOUNT433000,0) + NVL(OTR458490.AMOUNT458490,0) + NVL(CON434000.AMOUNT434000,0) + NVL(CON458550.AMOUNT458550,0) + NVL(CON460100.AMOUNT460100,0) + NVL(CON460200.AMOUNT460200,0) + NVL(CON460300.AMOUNT460300,0) + NVL(CON502000.AMOUNT502000,0) ) TEST_AMOUNT,
CASE WHEN SGD.STORE IN (\'2001\',\'2002\',\'2003\',\'2004\',\'2006\',\'2007\',\'2009\',\'2013\',\'2223\',\'4002\',\'2012\',\'4004\',\'2005\',\'2008\',\'2010\',\'2011\',\'6001\',\'6002\',\'6003\',\'6005\',\'6010\',\'3001\',\'3002\',\'3003\',\'3004\',\'3005\',\'3006\',\'3007\',\'4003\') THEN 0 ELSE 1 END AS NEW_FLG,
CASE WHEN SGD.STORE IN (\'2001\',\'2002\',\'2003\',\'2004\',\'2006\',\'2007\',\'2009\',\'2013\',\'2223\',\'4002\',\'2012\',\'4004\',\'2005\',\'2008\',\'2010\',\'2011\',\'6001\',\'6002\',\'6003\',\'6005\',\'6010\',\'3001\',\'3002\',\'3003\',\'3004\',\'3005\',\'3006\',\'3007\',\'4003\') THEN 1 ELSE 0 END AS MATURED_FLG
FROM
	
	(SELECT D.PER, S.STORE_FORMAT, S.STORE_FORMAT_DESC, S.STORE, S.STORE_NAME, M.MERCH_GROUP_CODE, M.MERCH_GROUP_DESC, M.ATTRIB1, M.ATTRIB2, M.DIVISION, M.DIV_NAME, M.GROUP_NO, M.GROUP_NAME 
		FROM
			(SELECT SUBSTR(MONTH,1,3) PER FROM MG_CONCESSION_CALENDER@RMS WHERE MONTH = \'' . $period . '\' )D,
			(SELECT A.STORE_FORMAT, F.FORMAT_NAME STORE_FORMAT_DESC, STORE, STORE_NAME FROM 
				(SELECT DISTINCT STORE_FORMAT, STORE, STORE_NAME FROM STORE@RMS WHERE STORE NOT IN (\'6008\') 
				UNION ALL 
				SELECT DISTINCT 8 AS STORE_FORMAT, WH AS STORE, WH_NAME STORE_NAME FROM WH@RMS)A
					LEFT JOIN STORE_FORMAT F ON A.STORE_FORMAT = F.STORE_FORMAT)S,   
			(SELECT B.MERCH_GROUP_CODE, B.MERCH_GROUP_DESC, B.ATTRIB1 ATTRIB1, B.ATTRIB2, G.DIVISION, I.DIV_NAME, D.GROUP_NO, G.GROUP_NAME 
				FROM DEPS@RMS D 
				  JOIN GROUPS@RMS G ON D.GROUP_NO = G.GROUP_NO
				  JOIN DIVISION@RMS I ON G.DIVISION = I.DIVISION 
				  JOIN RMSPRD.BI_MERCH_GROUP@RMS B ON I.DIVISION = B.DIVISION
			 WHERE I.DIVISION NOT IN (4000)
				UNION ALL
				SELECT \'Z_OT\' AS MERCH_GROUP_CODE, \'OTHERS\' AS MERCH_GROUP_DESC, \'OT\' AS ATTRIB1, \'OTHERS\' AS ATTRIB2, 9999 AS DIVISION, \'Others\' AS DIV_NAME, 0 AS GROUP_NO, \'Default\' AS GROUP_NAME FROM DUAL 
				UNION ALL 
				SELECT \'Z_OT\' AS MERCH_GROUP_CODE, \'OTHERS\' AS MERCH_GROUP_DESC, \'OT\' AS ATTRIB1, \'OTHERS\' AS ATTRIB2, 9999 AS DIVISION, \'Others\' AS DIV_NAME, 999 AS GROUP_NO, \'Others\' AS GROUP_NAME FROM DUAL)M
	GROUP BY D.PER, S.STORE_FORMAT, S.STORE_FORMAT_DESC, S.STORE, S.STORE_NAME, M.MERCH_GROUP_CODE, M.MERCH_GROUP_DESC, M.ATTRIB1, M.ATTRIB2, M.DIVISION, M.DIV_NAME, M.GROUP_NO, M.GROUP_NAME
	)SGD
	
	LEFT JOIN
	(SELECT T.PER, T.LOCATION, T.GROUP_NO, SUM(T.UNITS) OTR_UNITS, SUM(T.OTR_COST) OTR_COST, SUM(T.OTR_RETAIL) OTR_RETAIL, SUM((NVL(T.OTR_RETAIL,0))-(NVL(T.TOTAL_COST,0))) OTR_MARGIN FROM
		(SELECT TO_CHAR(TDH.TRAN_DATE, \'MON\') PER, TDH.LOCATION, DEPS.GROUP_NO, TDH.UNITS UNITS, TDH.TOTAL_COST OTR_COST, TDH.TOTAL_RETAIL OTR_RETAIL, 
			TDH.TOTAL_COST AS TOTAL_COST
			--CASE WHEN TDH.NEW_TOTAL_COST IS NULL THEN TDH.TOTAL_COST ELSE TDH.NEW_TOTAL_COST END AS TOTAL_COST
			--FROM TRAN_DATA_HISTORY_08042014 TDH 
			FROM TRAN_DATA_HISTORY@RMS TDH 
			--FROM TRAN_DATA_HISTORY_BUP TDH 
				JOIN DEPS@RMS ON TDH.DEPT = DEPS.DEPT
			WHERE (TDH.TRAN_DATE BETWEEN \'' . $mo_st_date_fld_g . '\' AND \'' . $mo_en_date_fld_g . '\') AND TDH.TRAN_CODE = 1 AND DEPS.PURCHASE_TYPE = 0)T
	GROUP BY T.PER, T.LOCATION, T.GROUP_NO)OTR
	ON SGD.PER = OTR.PER AND SGD.STORE = OTR.LOCATION AND SGD.GROUP_NO = OTR.GROUP_NO
	
	LEFT JOIN
	(SELECT T.PER, T.LOCATION, T.GROUP_NO, SUM(T.UNITS) CON_UNITS, SUM(T.CON_COST) CON_COST, SUM(T.CON_RETAIL) CON_RETAIL, SUM((NVL(T.CON_RETAIL,0))-(NVL(T.TOTAL_COST,0))) CON_MARGIN FROM
		(SELECT TO_CHAR(TDH.TRAN_DATE, \'MON\') PER, TDH.LOCATION, DEPS.GROUP_NO, TDH.UNITS UNITS, TDH.TOTAL_COST CON_COST, TDH.TOTAL_RETAIL CON_RETAIL, 
			TDH.TOTAL_COST AS TOTAL_COST
			--CASE WHEN TDH.NEW_TOTAL_COST IS NULL THEN TDH.TOTAL_COST ELSE TDH.NEW_TOTAL_COST END AS TOTAL_COST
			--FROM TRAN_DATA_HISTORY_08042014 TDH 
			FROM TRAN_DATA_HISTORY@RMS TDH 
			--FROM TRAN_DATA_HISTORY_BUP TDH 
				JOIN DEPS@RMS ON TDH.DEPT = DEPS.DEPT
			WHERE (TDH.TRAN_DATE BETWEEN \'' . $mo_st_date_fld_g . '\' AND \'' . $mo_en_date_fld_g . '\') AND TDH.TRAN_CODE = 1 AND DEPS.PURCHASE_TYPE = 2)T
	GROUP BY T.PER, T.LOCATION, T.GROUP_NO)CON
	ON SGD.PER = CON.PER AND SGD.STORE = CON.LOCATION AND SGD.GROUP_NO = CON.GROUP_NO
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT501000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT501000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT501000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'501000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' AND S.JE_SOURCE_NAME IN (\'Manual\',\'Payables\')
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR501000
	ON SGD.PER = OTR501000.PER AND SGD.STORE = OTR501000.STORE AND SGD.GROUP_NO = OTR501000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT503200, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT503200,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT503200
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'503200\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR503200
	ON SGD.PER = OTR503200.PER AND SGD.STORE = OTR503200.STORE AND SGD.GROUP_NO = OTR503200.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT503250, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT503250,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT503250
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'503250\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR503250
	ON SGD.PER = OTR503250.PER AND SGD.STORE = OTR503250.STORE AND SGD.GROUP_NO = OTR503250.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT503500, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT503500,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT503500
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'503500\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR503500
	ON SGD.PER = OTR503500.PER AND SGD.STORE = OTR503500.STORE AND SGD.GROUP_NO = OTR503500.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT506000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT506000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT506000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'506000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR506000
	ON SGD.PER = OTR506000.PER AND SGD.STORE = OTR506000.STORE AND SGD.GROUP_NO = OTR506000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT503000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT503000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT503000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'503000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' --AND MG.RMS_LOC_NO NOT IN (\'80061\')
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR503000
	ON SGD.PER = OTR503000.PER AND SGD.STORE = OTR503000.STORE AND SGD.GROUP_NO = OTR503000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT507000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT507000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT507000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'507000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' --AND MG.RMS_LOC_NO NOT IN (\'80061\')
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR507000
	ON SGD.PER = OTR507000.PER AND SGD.STORE = OTR507000.STORE AND SGD.GROUP_NO = OTR507000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT999998, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT999998,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT999998
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'999998\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR999998
	ON SGD.PER = OTR999998.PER AND SGD.STORE = OTR999998.STORE AND SGD.GROUP_NO = OTR999998.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT505000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT505000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT505000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'505000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR505000
	ON SGD.PER = OTR505000.PER AND SGD.STORE = OTR505000.STORE AND SGD.GROUP_NO = OTR505000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT504000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT504000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT504000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'504000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR504000
	ON SGD.PER = OTR504000.PER AND SGD.STORE = OTR504000.STORE AND SGD.GROUP_NO = OTR504000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT432000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT432000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT432000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'432000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR432000
	ON SGD.PER = OTR432000.PER AND SGD.STORE = OTR432000.STORE AND SGD.GROUP_NO = OTR432000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT433000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT433000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT433000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'433000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR433000
	ON SGD.PER = OTR433000.PER AND SGD.STORE = OTR433000.STORE AND SGD.GROUP_NO = OTR433000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT458490, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT458490,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT458490
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'458490\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR458490
	ON SGD.PER = OTR458490.PER AND SGD.STORE = OTR458490.STORE AND SGD.GROUP_NO = OTR458490.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT434000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT434000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT434000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'434000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON434000
	ON SGD.PER = CON434000.PER AND SGD.STORE = CON434000.STORE AND SGD.GROUP_NO = CON434000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT458550, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT458550,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT458550
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'458550\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON458550
	ON SGD.PER = CON458550.PER AND SGD.STORE = CON458550.STORE AND SGD.GROUP_NO = CON458550.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT460100, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT460100,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT460100
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'460100\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON460100
	ON SGD.PER = CON460100.PER AND SGD.STORE = CON460100.STORE AND SGD.GROUP_NO = CON460100.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT460200, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT460200,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT460200
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'460200\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON460200
	ON SGD.PER = CON460200.PER AND SGD.STORE = CON460200.STORE AND SGD.GROUP_NO = CON460200.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT460300, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT460300,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT460300
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'460300\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME =  \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON460300
	ON SGD.PER = CON460300.PER AND SGD.STORE = CON460300.STORE AND SGD.GROUP_NO = CON460300.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT502000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT502000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT502000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'502000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' AND S.JE_SOURCE_NAME IN (\'Manual\',\'Payables\')
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON502000
	ON SGD.PER = CON502000.PER AND SGD.STORE = CON502000.STORE AND SGD.GROUP_NO = CON502000.DEPARTMENT

GROUP BY 
SGD.PER, 
CASE 
	WHEN TO_CHAR(SGD.STORE) IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') THEN \'3\'
	WHEN TO_CHAR(SGD.STORE) IN (\'2223\') THEN \'1\'
	WHEN TO_CHAR(SGD.STORE) IN (\'2013\', \'2012\', \'4004\', \'3009\', \'3010\', \'3011\', \'2001W\', \'3012\') THEN \'2\'
	WHEN TO_CHAR(SGD.STORE) IN (\'6001\', \'6002\', \'6003\', \'6004\', \'6005\', \'6012\', \'6009\', \'6010\', \'6011\') THEN \'4\'
	WHEN TO_CHAR(SGD.STORE) IN (\'3001\', \'3007\', \'4003\', \'3002\', \'3003\', \'3004\', \'3005\', \'3006\') THEN \'2\'
	ELSE TO_CHAR(SGD.STORE_FORMAT) END,
CASE 
	WHEN TO_CHAR(SGD.STORE) IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') THEN \'Dept Store_Supermarket\'
	WHEN TO_CHAR(SGD.STORE) IN (\'2223\') THEN \'Department Store\'
	WHEN TO_CHAR(SGD.STORE) IN (\'2013\', \'2012\', \'4004\', \'3009\', \'3010\', \'3011\', \'2001W\', \'3012\') THEN \'Supermarket\'
	WHEN TO_CHAR(SGD.STORE) IN (\'6001\', \'6002\', \'6003\', \'6004\', \'6005\', \'6012\', \'6009\', \'6010\', \'6011\') THEN \'Hypermarket\'
	WHEN TO_CHAR(SGD.STORE) IN (\'3001\', \'3007\', \'4003\', \'3002\', \'3003\', \'3004\', \'3005\', \'3006\') THEN \'Supermarket\'
	ELSE SGD.STORE_FORMAT_DESC END,
CASE WHEN TO_CHAR(SGD.STORE) = \'4002\' THEN \'2001W\' 
	ELSE TO_CHAR(SGD.STORE) END,
SGD.STORE_NAME, 
CASE WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) THEN \'Z_OT\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) THEN \'SU\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) THEN \'SU\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) THEN \'DS\' 
	ELSE SGD.MERCH_GROUP_CODE END,
CASE WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) THEN \'OTHERS\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) THEN \'SUPERMARKET\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) THEN \'SUPERMARKET\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) THEN \'DEPARTMENT STORE\' 
	ELSE SGD.MERCH_GROUP_DESC END,
SGD.ATTRIB1, 
SGD.ATTRIB2, 
SGD.DIVISION, 
SGD.DIV_NAME, 
SGD.GROUP_NO, 
SGD.GROUP_NAME,
CASE WHEN SGD.STORE IN (\'2001\',\'2002\',\'2003\',\'2004\',\'2006\',\'2007\',\'2009\',\'2013\',\'2223\',\'4002\',\'2012\',\'4004\',\'2005\',\'2008\',\'2010\',\'2011\',\'6001\',\'6002\',\'6003\',\'6005\',\'6010\',\'3001\',\'3002\',\'3003\',\'3004\',\'3005\',\'3006\',\'3007\',\'4003\') THEN 0 ELSE 1 END,
CASE WHEN SGD.STORE IN (\'2001\',\'2002\',\'2003\',\'2004\',\'2006\',\'2007\',\'2009\',\'2013\',\'2223\',\'4002\',\'2012\',\'4004\',\'2005\',\'2008\',\'2010\',\'2011\',\'6001\',\'6002\',\'6003\',\'6005\',\'6010\',\'3001\',\'3002\',\'3003\',\'3004\',\'3005\',\'3006\',\'3007\',\'4003\') THEN 1 ELSE 0 END
)
WHERE TEST_AMOUNT <> 0
'
;

my $sth = $dbh->prepare ($test);
$sth->execute;
 
$sth->finish();
$dbh->disconnect;

}
