START:
START:

use DBI;
use DBD::Oracle qw(:ora_types);
use Excel::Writer::XLSX;
use Excel::Writer::XLSX::Utility;
use Text::CSV_XS;
#use DateKey_ARC;
use DBConnector;
use Win32::Job;
use Getopt::Long;
use IO::File;
use MIME::QuotedPrint;
use MIME::Base64;
use Mail::Sendmail;

$test_query = qq{ SELECT CASE WHEN EXISTS (SELECT SEQ_NO, ETL_SUMMARY, VALUE, ARC_DATE FROM ADMIN_ETL_SUMMARY WHERE TO_DATE(ARC_DATE, 'DD-MON-YY') = TO_DATE(SYSDATE,'DD-MON-YY')) THEN 1 ELSE 0 END STATUS FROM DUAL };

$tst_query = $dbh->prepare($test_query);
$tst_query->execute();

while ( my $x =  $tst_query->fetchrow_hashref()){
	$test = $x->{STATUS};
} 
$test = 1;
if ($test eq 1){

	 $date = qq{ 
	SELECT WEEK_NUMBER_THIS_YEAR, DATE_KEY, TO_CHAR(DATE_FLD, 'DD Mon YYYY') DATE_FLD, WEEK_ST_DATE_KEY, WEEK_END_DATE_KEY, TO_CHAR(DATE_FLD, 'MON-YY') PERIOD
	FROM DIM_DATE
	WHERE DATE_FLD = (SELECT AGG_DLY_END_DATE_FLD FROM ADMIN_ETL_DATE_PARAMETER)
	 };

	my $sth_date_1 = $dbh->prepare ($date);
	 $sth_date_1->execute;

	while (my $x = $sth_date_1->fetchrow_hashref()) {
		$wk_st_date_key = $x->{WEEK_ST_DATE_KEY};
		$wk_en_date_key = $x->{DATE_KEY};
		$wk_number = $x->{WEEK_NUMBER_THIS_YEAR};
		$as_of = $x->{DATE_FLD};
		$period = $x->{PERIOD};
	}

	$date_2 = qq{ 
	SELECT DATE_KEY1, TO_CHAR(DATE_FLD1, 'DD Mon YYYY') DATE_FLD1, DATE_KEY_LY1, TO_CHAR(DATE_FLD_LY1, 'DD Mon YYYY') DATE_FLD_LY1, DATE_KEY2, TO_CHAR(DATE_FLD2, 'DD Mon YYYY') DATE_FLD2, DATE_KEY_LY2, TO_CHAR(DATE_FLD_LY2, 'DD Mon YYYY') DATE_FLD_LY2, DATE_KEY3, DATE_FLD3, MONTH_ST_DATE_KEY, MONTH_END_DATE_KEY, QUARTER, YEAR FROM
		(SELECT DATE_KEY AS DATE_KEY1, DATE_FLD AS DATE_FLD1, DATE_KEY_LY AS DATE_KEY_LY1, DATE_FLD_LY AS DATE_FLD_LY1
		FROM DIM_DATE WHERE DATE_KEY = $wk_st_date_key),
		(SELECT DATE_KEY AS DATE_KEY2, DATE_FLD AS DATE_FLD2, DATE_KEY_LY AS DATE_KEY_LY2, DATE_FLD_LY AS DATE_FLD_LY2
		FROM DIM_DATE WHERE DATE_KEY = $wk_en_date_key),
		(SELECT DATE_KEY AS DATE_KEY3, DATE_FLD AS DATE_FLD3, MONTH_ST_DATE_KEY, MONTH_END_DATE_KEY
		FROM DIM_DATE_PRL WHERE TO_CHAR(DATE_FLD, 'DD Mon YYYY') = '$as_of'),
		(SELECT QUARTER, YEAR FROM DIM_DATE_PRL WHERE TO_CHAR(DATE_FLD, 'DD Mon YYYY') = '$as_of')
	 };

	my $sth_date_2 = $dbh->prepare ($date_2);
	 $sth_date_2->execute;
	 
	while (my $x = $sth_date_2->fetchrow_hashref()) {
		$wk_st_date_key_ly = $x->{DATE_KEY_LY1};
		$wk_en_date_key_ly = $x->{DATE_KEY_LY2};
		$wk_st_date_fld = $x->{DATE_FLD1};
		$wk_en_date_fld = $x->{DATE_FLD2};
		$wk_st_date_fld_ly = $x->{DATE_FLD_LY1};
		$wk_en_date_fld_ly = $x->{DATE_FLD_LY2};
		$mo_st_date_key = $x->{MONTH_ST_DATE_KEY};
		$mo_en_date_key = $x->{DATE_KEY3};
		$quarter = $x->{QUARTER};
		$year = $x->{YEAR};
	}

	$date_3 = qq{ 
	SELECT DATE_KEY1, TO_CHAR(DATE_FLD1, 'DD-MON-YY') DATE_FLD1_G, TO_CHAR(DATE_FLD1, 'DD Mon YYYY') DATE_FLD1, DATE_KEY_LY1, TO_CHAR(DATE_FLD_LY1, 'DD Mon YYYY') DATE_FLD_LY1, 
		   DATE_KEY2, TO_CHAR(DATE_FLD2, 'DD-MON-YY') DATE_FLD2_G, TO_CHAR(DATE_FLD2, 'DD Mon YYYY') DATE_FLD2, DATE_KEY_LY2, TO_CHAR(DATE_FLD_LY2, 'DD Mon YYYY') DATE_FLD_LY2,
		   DATE_KEY3, TO_CHAR(DATE_FLD3, 'DD Mon YYYY') DATE_FLD3, DATE_KEY_LY3, TO_CHAR(DATE_FLD_LY3, 'DD Mon YYYY') DATE_FLD_LY3 FROM
		(SELECT DATE_KEY AS DATE_KEY1, DATE_FLD AS DATE_FLD1, DATE_KEY_LY AS DATE_KEY_LY1, DATE_FLD_LY AS DATE_FLD_LY1
		FROM DIM_DATE_PRL WHERE DATE_KEY = $mo_st_date_key),
		(SELECT DATE_KEY AS DATE_KEY2, DATE_FLD AS DATE_FLD2, DATE_KEY_LY AS DATE_KEY_LY2, DATE_FLD_LY AS DATE_FLD_LY2
		FROM DIM_DATE_PRL WHERE DATE_KEY = $mo_en_date_key),
		(SELECT DATE_KEY AS DATE_KEY3, DATE_FLD AS DATE_FLD3, DATE_KEY_LY AS DATE_KEY_LY3, DATE_FLD_LY AS DATE_FLD_LY3
		FROM DIM_DATE_PRL WHERE QUARTER = $quarter AND YEAR = $year AND MONTH_IN_QUARTER = 1 AND DAY_IN_MONTH = 1)
	 };

	my $sth_date_3 = $dbh->prepare ($date_3);
	 $sth_date_3->execute;
	 
	while (my $x = $sth_date_3->fetchrow_hashref()) {
		$mo_st_date_key_ly = $x->{DATE_KEY_LY1};
		$mo_en_date_key_ly = $x->{DATE_KEY_LY2};
		$mo_st_date_fld = $x->{DATE_FLD1};
		$mo_en_date_fld = $x->{DATE_FLD2};
		$mo_st_date_fld_g = $x->{DATE_FLD1_G};
		$mo_en_date_fld_g = $x->{DATE_FLD2_G};
		$mo_st_date_fld_ly = $x->{DATE_FLD_LY1};
		$mo_en_date_fld_ly = $x->{DATE_FLD_LY2};
		$qu_st_date_key = $x->{DATE_KEY3};
		$qu_st_date_key_ly = $x->{DATE_KEY_LY3};
		$qu_st_date_fld = $x->{DATE_FLD3};
		$qu_st_date_fld_ly = $x->{DATE_FLD_LY3};
	}

	printf "Test ETL Status = ". $test ." \nArc BI Sales Performance Part 1\nGenerating Data from Source \n";
	
	&generate_csv;
	
	my $job1 = Win32::Job->new;
	$job1->spawn( "cmd" , q{cmd /C "COMPILED_MARGIN_SALES_PERFORMANCE_v1.7_Custom.pl pause"});
	$job1->run(25000);
	
	&mail;
	
	$tst_query->finish(); 
	$dbh->disconnect; 
	
	exit;
	
}

else{
	print "Test Status = ". $test ." \nETL still running\n";
	
	$tst_query->finish();
	
	sleep(600);
	
	goto START;
}
 

sub generate_csv {

my $truncate = $dbh->prepare( qq{ 
DELETE FROM METRO_IT_MARGIN_DEPT_JAN15 WHERE PER = SUBSTR('$period', 1, 3)
});
$truncate->execute();

$truncate->finish();

print "Done Deleting current periods records on table METRO_IT_MARGIN_DEPT_JAN15... \nPreparing to Insert... \n";

$test = '
INSERT INTO METRO_IT_MARGIN_DEPT_JAN15 

(PER, STORE_FORMAT, STORE_FORMAT_DESC, STORE_CODE, STORE_DESCRIPTION, MERCH_GROUP_CODE, MERCH_GROUP_DESC, GROUP_CODE, GROUP_DESC, DIVISION, DIVISION_DESC, DEPARTMENT_CODE, DEPARTMENT_DESC, OTR_COST, OTR_RETAIL, OTR_MARGIN, CON_COST, CON_RETAIL, CON_MARGIN, AMOUNT501000, AMOUNT503200, AMOUNT503250, AMOUNT503500, AMOUNT506000, AMOUNT503000, AMOUNT507000, AMOUNT999998, AMOUNT505000, AMOUNT504000, AMOUNT432000, AMOUNT433000, AMOUNT458490, AMOUNT434000, AMOUNT458550, AMOUNT460100, AMOUNT460200, AMOUNT460300, AMOUNT502000, NEW_FLG, MATURED_FLG, UPDATE_DATE, YEAR)

SELECT PER, STORE_FORMAT, STORE_FORMAT_DESC, STORE_CODE, STORE_DESCRIPTION, MERCH_GROUP_CODE, MERCH_GROUP_DESC, GROUP_CODE, GROUP_DESC, DIVISION, DIVISION_DESC, DEPARTMENT_CODE, DEPARTMENT_DESC, OTR_COST, OTR_RETAIL, OTR_MARGIN, CON_COST, CON_RETAIL, CON_MARGIN, AMOUNT501000, AMOUNT503200, AMOUNT503250, AMOUNT503500, AMOUNT506000, AMOUNT503000, AMOUNT507000, AMOUNT999998, AMOUNT505000, AMOUNT504000, AMOUNT432000, AMOUNT433000, AMOUNT458490, AMOUNT434000, AMOUNT458550, AMOUNT460100, AMOUNT460200, AMOUNT460300, AMOUNT502000, NVL(NEW_FLG,0) NEW_FLG, NVL(MATURED_FLG,0) MATURED_FLG, SYSDATE AS UPDATE_DATE, TO_CHAR(SYSDATE-7, \'YYYY\') YEAR FROM ( 

SELECT 
SGD.PER,
CASE 
	WHEN (SGD.STORE IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') AND ( (SGD.MERCH_GROUP_CODE = \'DS\') OR (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) OR  (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) ) ) THEN \'1\'
	WHEN (SGD.STORE IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') AND ( (SGD.MERCH_GROUP_CODE = \'SU\') OR (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) OR  (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) ) ) THEN \'2\'
	WHEN SGD.STORE IN (\'2223\') THEN \'1\'
	WHEN SGD.STORE IN (\'2013\', \'2012\', \'4004\', \'3009\', \'3010\', \'3011\', \'4002\', \'3012\') THEN \'2\'
	WHEN SGD.STORE IN (\'2005\', \'2008\', \'2010\', \'2011\', \'6001\', \'6002\', \'6003\', \'6004\', \'6005\', \'6012\', \'6009\', \'6010\', \'6011\') THEN \'4\'
	WHEN SGD.STORE IN (\'3001\', \'3007\', \'4003\', \'3002\', \'3003\', \'3004\', \'3005\', \'3006\') THEN \'2\'
	ELSE TO_CHAR(SGD.STORE_FORMAT) END AS STORE_FORMAT, 
CASE 
	WHEN (SGD.STORE IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') AND ( (SGD.MERCH_GROUP_CODE = \'DS\') OR (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) OR  (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) ) ) THEN \'Department Store\'
	WHEN (SGD.STORE IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') AND ( (SGD.MERCH_GROUP_CODE = \'SU\') OR (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) OR  (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) ) ) THEN \'Supermarket\'
	WHEN SGD.STORE IN (\'2223\') THEN \'Department Store\'
	WHEN SGD.STORE IN (\'2013\', \'2012\', \'4004\', \'3009\', \'3010\', \'3011\', \'4002\', \'3012\') THEN \'Supermarket\'
	WHEN SGD.STORE IN (\'2005\', \'2008\', \'2010\', \'2011\', \'6001\', \'6002\', \'6003\', \'6004\', \'6005\', \'6012\', \'6009\', \'6010\', \'6011\') THEN \'Hypermarket\'
	WHEN SGD.STORE IN (\'3001\', \'3007\', \'4003\', \'3002\', \'3003\', \'3004\', \'3005\', \'3006\') THEN \'Supermarket\'
	ELSE SGD.STORE_FORMAT_DESC END AS STORE_FORMAT_DESC,	
CASE WHEN TO_CHAR(SGD.STORE) = \'4002\' THEN \'2001W\' 
	ELSE TO_CHAR(SGD.STORE) END AS STORE_CODE,
SGD.STORE_NAME STORE_DESCRIPTION, 
CASE WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) THEN \'Z_OT\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) THEN \'SU\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) THEN \'SU\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) THEN \'DS\' 
	ELSE SGD.MERCH_GROUP_CODE END AS MERCH_GROUP_CODE,
CASE WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) THEN \'OTHERS\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) THEN \'SUPERMARKET\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) THEN \'SUPERMARKET\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) THEN \'DEPARTMENT STORE\' 
	ELSE SGD.MERCH_GROUP_DESC END AS MERCH_GROUP_DESC,
SGD.ATTRIB1 GROUP_CODE, 
SGD.ATTRIB2 GROUP_DESC, 
SGD.DIVISION, 
SGD.DIV_NAME DIVISION_DESC, 
SGD.GROUP_NO DEPARTMENT_CODE, 
SGD.GROUP_NAME DEPARTMENT_DESC, 
nvl((SUM(OTR.OTR_COST)/1000),0) OTR_COST, nvl((SUM(OTR.OTR_RETAIL)/1000),0) OTR_RETAIL, nvl((SUM(OTR.OTR_MARGIN)/1000),0) OTR_MARGIN, 
nvl((SUM(CON.CON_COST)/1000),0) CON_COST, nvl((SUM(CON.CON_RETAIL)/1000),0) CON_RETAIL, nvl((SUM(CON.CON_MARGIN)/1000),0) CON_MARGIN,
nvl((SUM(OTR501000.DEBIT_AMT501000)/1000),0) DEBIT_AMT501000, nvl((SUM(OTR501000.CREDIT_AMT501000)/1000),0) CREDIT_AMT501000, nvl((SUM(OTR501000.AMOUNT501000)/1000),0) AMOUNT501000,
nvl((SUM(OTR503200.DEBIT_AMT503200)/1000),0) DEBIT_AMT503200, nvl((SUM(OTR503200.CREDIT_AMT503200)/1000),0) CREDIT_AMT503200, nvl((SUM(OTR503200.AMOUNT503200)/1000),0) AMOUNT503200,
nvl((SUM(OTR503250.DEBIT_AMT503250)/1000),0) DEBIT_AMT503250, nvl((SUM(OTR503250.CREDIT_AMT503250)/1000),0) CREDIT_AMT503250, nvl((SUM(OTR503250.AMOUNT503250)/1000),0) AMOUNT503250,
nvl((SUM(OTR503500.DEBIT_AMT503500)/1000),0) DEBIT_AMT503500, nvl((SUM(OTR503500.CREDIT_AMT503500)/1000),0) CREDIT_AMT503500, nvl((SUM(OTR503500.AMOUNT503500)/1000),0) AMOUNT503500,
nvl((SUM(OTR506000.DEBIT_AMT506000)/1000),0) DEBIT_AMT506000, nvl((SUM(OTR506000.CREDIT_AMT506000)/1000),0) CREDIT_AMT506000, nvl((SUM(OTR506000.AMOUNT506000)/1000),0) AMOUNT506000,
nvl((SUM(OTR503000.DEBIT_AMT503000)/1000),0) DEBIT_AMT503000, nvl((SUM(OTR503000.CREDIT_AMT503000)/1000),0) CREDIT_AMT503000, nvl((SUM(OTR503000.AMOUNT503000)/1000),0) AMOUNT503000,
nvl((SUM(OTR507000.DEBIT_AMT507000)/1000),0) DEBIT_AMT507000, nvl((SUM(OTR507000.CREDIT_AMT507000)/1000),0) CREDIT_AMT507000, nvl((SUM(OTR507000.AMOUNT507000)/1000),0) AMOUNT507000,
nvl((SUM(OTR999998.DEBIT_AMT999998)/1000),0) DEBIT_AMT999998, nvl((SUM(OTR999998.CREDIT_AMT999998)/1000),0) CREDIT_AMT999998, nvl((SUM(OTR999998.AMOUNT999998)/1000),0) AMOUNT999998,
nvl((SUM(OTR505000.DEBIT_AMT505000)/1000),0) DEBIT_AMT505000, nvl((SUM(OTR505000.CREDIT_AMT505000)/1000),0) CREDIT_AMT505000, nvl((SUM(OTR505000.AMOUNT505000)/1000),0) AMOUNT505000,
nvl((SUM(OTR504000.DEBIT_AMT504000)/1000),0) DEBIT_AMT504000, nvl((SUM(OTR504000.CREDIT_AMT504000)/1000),0) CREDIT_AMT504000, nvl((SUM(OTR504000.AMOUNT504000)/1000),0) AMOUNT504000,
nvl((SUM(OTR432000.DEBIT_AMT432000)/1000),0) DEBIT_AMT432000, nvl((SUM(OTR432000.CREDIT_AMT432000)/1000),0) CREDIT_AMT432000, nvl((SUM(OTR432000.AMOUNT432000)/1000),0) AMOUNT432000,
nvl((SUM(OTR433000.DEBIT_AMT433000)/1000),0) DEBIT_AMT433000, nvl((SUM(OTR433000.CREDIT_AMT433000)/1000),0) CREDIT_AMT433000, nvl((SUM(OTR433000.AMOUNT433000)/1000),0) AMOUNT433000,
nvl((SUM(OTR458490.DEBIT_AMT458490)/1000),0) DEBIT_AMT458490, nvl((SUM(OTR458490.CREDIT_AMT458490)/1000),0) CREDIT_AMT458490, nvl((SUM(OTR458490.AMOUNT458490)/1000),0) AMOUNT458490,
nvl((SUM(CON434000.DEBIT_AMT434000)/1000),0) DEBIT_AMT434000, nvl((SUM(CON434000.CREDIT_AMT434000)/1000),0) CREDIT_AMT434000, nvl((SUM(CON434000.AMOUNT434000)/1000),0) AMOUNT434000,
nvl((SUM(CON458550.DEBIT_AMT458550)/1000),0) DEBIT_AMT458550, nvl((SUM(CON458550.CREDIT_AMT458550)/1000),0) CREDIT_AMT458550, nvl((SUM(CON458550.AMOUNT458550)/1000),0) AMOUNT458550,
nvl((SUM(CON460100.DEBIT_AMT460100)/1000),0) DEBIT_AMT460100, nvl((SUM(CON460100.CREDIT_AMT460100)/1000),0) CREDIT_AMT460100, nvl((SUM(CON460100.AMOUNT460100)/1000),0) AMOUNT460100,
nvl((SUM(CON460200.DEBIT_AMT460200)/1000),0) DEBIT_AMT460200, nvl((SUM(CON460200.CREDIT_AMT460200)/1000),0) CREDIT_AMT460200, nvl((SUM(CON460200.AMOUNT460200)/1000),0) AMOUNT460200,
nvl((SUM(CON460300.DEBIT_AMT460300)/1000),0) DEBIT_AMT460300, nvl((SUM(CON460300.CREDIT_AMT460300)/1000),0) CREDIT_AMT460300, nvl((SUM(CON460300.AMOUNT460300)/1000),0) AMOUNT460300,
nvl((SUM(CON502000.DEBIT_AMT502000)/1000),0) DEBIT_AMT502000, nvl((SUM(CON502000.CREDIT_AMT502000)/1000),0) CREDIT_AMT502000, nvl((SUM(CON502000.AMOUNT502000)/1000),0) AMOUNT502000,
nvl(SUM( NVL(OTR.OTR_COST,0) + NVL(OTR.OTR_RETAIL,0) + NVL(OTR.OTR_MARGIN,0) + NVL(CON.CON_COST,0) + NVL(CON.CON_RETAIL,0) + NVL(CON.CON_MARGIN,0) + NVL(OTR501000.AMOUNT501000,0) + NVL(OTR503200.AMOUNT503200,0) + NVL(OTR503250.AMOUNT503250,0) + NVL(OTR503500.AMOUNT503500,0) + NVL(OTR506000.AMOUNT506000,0) + NVL(OTR503000.AMOUNT503000,0) + NVL(OTR507000.AMOUNT507000,0) + NVL(OTR999998.AMOUNT999998,0) + NVL(OTR505000.AMOUNT505000,0) + NVL(OTR504000.AMOUNT504000,0) + NVL(OTR432000.AMOUNT432000,0) + NVL(OTR433000.AMOUNT433000,0) + NVL(OTR458490.AMOUNT458490,0) + NVL(CON434000.AMOUNT434000,0) + NVL(CON458550.AMOUNT458550,0) + NVL(CON460100.AMOUNT460100,0) + NVL(CON460200.AMOUNT460200,0) + NVL(CON460300.AMOUNT460300,0) + NVL(CON502000.AMOUNT502000,0) ),0) TEST_AMOUNT,
SGD.NEW_FLG,
SGD.MATURED_FLG
FROM
	
	(SELECT D.PER, S.STORE_FORMAT, S.STORE_FORMAT_DESC, S.STORE, S.STORE_NAME, M.MERCH_GROUP_CODE, M.MERCH_GROUP_DESC, M.ATTRIB1, M.ATTRIB2, M.DIVISION, M.DIV_NAME, M.GROUP_NO, M.GROUP_NAME, NEW_FLG, MATURED_FLG
		FROM
			(SELECT \'JAN\' AS PER FROM DUAL)D,
			(SELECT A.STORE_FORMAT, F.FORMAT_NAME STORE_FORMAT_DESC, STORE, STORE_NAME, NEW_FLG, MATURED_FLG FROM 
				(SELECT DISTINCT STORE_FORMAT, STORE, STORE_NAME FROM STORE@RMS WHERE STORE NOT IN (\'6008\') 
				UNION ALL 
				SELECT DISTINCT 8 AS STORE_FORMAT, WH AS STORE, WH_NAME STORE_NAME FROM WH@RMS)A
				LEFT JOIN STORE_FORMAT F ON A.STORE_FORMAT = F.STORE_FORMAT
				LEFT JOIN (SELECT A.STORE_CODE, A.NEW_FLG, A.MATURED_FLG 
						FROM DIM_STORE A 
							INNER JOIN (SELECT STORE_CODE, MAX(STORE_KEY) STORE_KEY FROM DIM_STORE GROUP BY STORE_CODE)B ON A.STORE_KEY = B.STORE_KEY AND A.STORE_CODE = B.STORE_CODE
						GROUP BY A.STORE_CODE, A.NEW_FLG, A.MATURED_FLG)TST ON A.STORE = TST.STORE_CODE)S,   
			(SELECT B.MERCH_GROUP_CODE, B.MERCH_GROUP_DESC, B.ATTRIB1 ATTRIB1, B.ATTRIB2, G.DIVISION, I.DIV_NAME, D.GROUP_NO, G.GROUP_NAME 
				FROM DEPS@RMS D 
				  JOIN GROUPS@RMS G ON D.GROUP_NO = G.GROUP_NO
				  JOIN DIVISION@RMS I ON G.DIVISION = I.DIVISION 
				  JOIN RMSPRD.BI_MERCH_GROUP@RMS B ON I.DIVISION = B.DIVISION
			 WHERE I.DIVISION NOT IN (4000)
				UNION ALL
				SELECT \'Z_OT\' AS MERCH_GROUP_CODE, \'OTHERS\' AS MERCH_GROUP_DESC, \'OT\' AS ATTRIB1, \'OTHERS\' AS ATTRIB2, 9999 AS DIVISION, \'Others\' AS DIV_NAME, 0 AS GROUP_NO, \'Default\' AS GROUP_NAME FROM DUAL 
				UNION ALL 
				SELECT \'Z_OT\' AS MERCH_GROUP_CODE, \'OTHERS\' AS MERCH_GROUP_DESC, \'OT\' AS ATTRIB1, \'OTHERS\' AS ATTRIB2, 9999 AS DIVISION, \'Others\' AS DIV_NAME, 999 AS GROUP_NO, \'Others\' AS GROUP_NAME FROM DUAL)M
	GROUP BY D.PER, S.STORE_FORMAT, S.STORE_FORMAT_DESC, S.STORE, S.STORE_NAME, M.MERCH_GROUP_CODE, M.MERCH_GROUP_DESC, M.ATTRIB1, M.ATTRIB2, M.DIVISION, M.DIV_NAME, M.GROUP_NO, M.GROUP_NAME, NEW_FLG, MATURED_FLG
	)SGD
	
	LEFT JOIN
	(SELECT T.PER, T.LOCATION, T.GROUP_NO, SUM(T.UNITS) OTR_UNITS, SUM(T.OTR_COST) OTR_COST, SUM(T.OTR_RETAIL) OTR_RETAIL, SUM((NVL(T.OTR_RETAIL,0))-(NVL(T.TOTAL_COST,0))) OTR_MARGIN FROM
		(SELECT TO_CHAR(TDH.TRAN_DATE, \'MON\') PER, TDH.LOCATION, DEPS.GROUP_NO, TDH.UNITS UNITS, TDH.TOTAL_COST OTR_COST, TDH.TOTAL_RETAIL OTR_RETAIL, 
			TDH.TOTAL_COST AS TOTAL_COST
			--CASE WHEN TDH.NEW_TOTAL_COST IS NULL THEN TDH.TOTAL_COST ELSE TDH.NEW_TOTAL_COST END AS TOTAL_COST
			--FROM TRAN_DATA_HISTORY_08042014 TDH 
			FROM TRAN_DATA_HISTORY@RMS TDH 
			--FROM TRAN_DATA_HISTORY_BUP TDH 
				JOIN DEPS@RMS ON TDH.DEPT = DEPS.DEPT
			WHERE (TDH.TRAN_DATE BETWEEN \'' . $mo_st_date_fld_g . '\' AND \'' . $mo_en_date_fld_g . '\') AND TDH.TRAN_CODE = 1 AND DEPS.PURCHASE_TYPE = 0)T
	GROUP BY T.PER, T.LOCATION, T.GROUP_NO)OTR
	ON SGD.PER = OTR.PER AND SGD.STORE = OTR.LOCATION AND SGD.GROUP_NO = OTR.GROUP_NO
	
	LEFT JOIN
	(SELECT T.PER, T.LOCATION, T.GROUP_NO, SUM(T.UNITS) CON_UNITS, SUM(T.CON_COST) CON_COST, SUM(T.CON_RETAIL) CON_RETAIL, SUM((NVL(T.CON_RETAIL,0))-(NVL(T.TOTAL_COST,0))) CON_MARGIN FROM
		(SELECT TO_CHAR(TDH.TRAN_DATE, \'MON\') PER, TDH.LOCATION, DEPS.GROUP_NO, TDH.UNITS UNITS, TDH.TOTAL_COST CON_COST, TDH.TOTAL_RETAIL CON_RETAIL, 
			TDH.TOTAL_COST AS TOTAL_COST
			--CASE WHEN TDH.NEW_TOTAL_COST IS NULL THEN TDH.TOTAL_COST ELSE TDH.NEW_TOTAL_COST END AS TOTAL_COST
			--FROM TRAN_DATA_HISTORY_08042014 TDH 
			FROM TRAN_DATA_HISTORY@RMS TDH 
			--FROM TRAN_DATA_HISTORY_BUP TDH 
				JOIN DEPS@RMS ON TDH.DEPT = DEPS.DEPT
			WHERE (TDH.TRAN_DATE BETWEEN \'' . $mo_st_date_fld_g . '\' AND \'' . $mo_en_date_fld_g . '\') AND TDH.TRAN_CODE = 1 AND DEPS.PURCHASE_TYPE = 2)T
	GROUP BY T.PER, T.LOCATION, T.GROUP_NO)CON
	ON SGD.PER = CON.PER AND SGD.STORE = CON.LOCATION AND SGD.GROUP_NO = CON.GROUP_NO
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT501000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT501000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT501000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'501000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' AND S.JE_SOURCE_NAME IN (\'Manual\',\'Payables\')
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR501000
	ON SGD.PER = OTR501000.PER AND SGD.STORE = OTR501000.STORE AND SGD.GROUP_NO = OTR501000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT503200, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT503200,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT503200
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'503200\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR503200
	ON SGD.PER = OTR503200.PER AND SGD.STORE = OTR503200.STORE AND SGD.GROUP_NO = OTR503200.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT503250, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT503250,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT503250
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'503250\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR503250
	ON SGD.PER = OTR503250.PER AND SGD.STORE = OTR503250.STORE AND SGD.GROUP_NO = OTR503250.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT503500, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT503500,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT503500
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'503500\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR503500
	ON SGD.PER = OTR503500.PER AND SGD.STORE = OTR503500.STORE AND SGD.GROUP_NO = OTR503500.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT506000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT506000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT506000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'506000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR506000
	ON SGD.PER = OTR506000.PER AND SGD.STORE = OTR506000.STORE AND SGD.GROUP_NO = OTR506000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT503000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT503000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT503000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'503000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' --AND MG.RMS_LOC_NO NOT IN (\'80061\')
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR503000
	ON SGD.PER = OTR503000.PER AND SGD.STORE = OTR503000.STORE AND SGD.GROUP_NO = OTR503000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT507000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT507000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT507000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'507000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' --AND MG.RMS_LOC_NO NOT IN (\'80061\')
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR507000
	ON SGD.PER = OTR507000.PER AND SGD.STORE = OTR507000.STORE AND SGD.GROUP_NO = OTR507000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT999998, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT999998,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT999998
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'999998\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR999998
	ON SGD.PER = OTR999998.PER AND SGD.STORE = OTR999998.STORE AND SGD.GROUP_NO = OTR999998.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT505000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT505000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT505000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'505000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR505000
	ON SGD.PER = OTR505000.PER AND SGD.STORE = OTR505000.STORE AND SGD.GROUP_NO = OTR505000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT504000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT504000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT504000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'504000\') AND CC.SEGMENT1=\'240\' AND H.PERIOD_NAME= \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR504000
	ON SGD.PER = OTR504000.PER AND SGD.STORE = OTR504000.STORE AND SGD.GROUP_NO = OTR504000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT432000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT432000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT432000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'432000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR432000
	ON SGD.PER = OTR432000.PER AND SGD.STORE = OTR432000.STORE AND SGD.GROUP_NO = OTR432000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT433000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT433000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT433000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'433000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR433000
	ON SGD.PER = OTR433000.PER AND SGD.STORE = OTR433000.STORE AND SGD.GROUP_NO = OTR433000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT458490, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT458490,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT458490
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'458490\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)OTR458490
	ON SGD.PER = OTR458490.PER AND SGD.STORE = OTR458490.STORE AND SGD.GROUP_NO = OTR458490.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT434000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT434000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT434000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'434000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON434000
	ON SGD.PER = CON434000.PER AND SGD.STORE = CON434000.STORE AND SGD.GROUP_NO = CON434000.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT458550, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT458550,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT458550
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'458550\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON458550
	ON SGD.PER = CON458550.PER AND SGD.STORE = CON458550.STORE AND SGD.GROUP_NO = CON458550.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT460100, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT460100,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT460100
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'460100\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON460100
	ON SGD.PER = CON460100.PER AND SGD.STORE = CON460100.STORE AND SGD.GROUP_NO = CON460100.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT460200, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT460200,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT460200
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'460200\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON460200
	ON SGD.PER = CON460200.PER AND SGD.STORE = CON460200.STORE AND SGD.GROUP_NO = CON460200.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT460300, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT460300,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT460300
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
		LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'460300\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME =  \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' 
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON460300
	ON SGD.PER = CON460300.PER AND SGD.STORE = CON460300.STORE AND SGD.GROUP_NO = CON460300.DEPARTMENT
	
	LEFT JOIN
	(SELECT SUBSTR(H.PERIOD_NAME,1, 3) PER, MG.RMS_LOC_NO STORE, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END AS DEPARTMENT, SUM(NVL(L.ACCOUNTED_DR,0)) DEBIT_AMT502000, SUM(NVL(L.ACCOUNTED_CR,0)) CREDIT_AMT502000,
	SUM(NVL(L.ACCOUNTED_CR,0)-NVL(L.ACCOUNTED_DR,0)) AMOUNT502000
	FROM APPS.GL_JE_HEADERS@FA_SOURCE H 
		JOIN APPS.GL_JE_LINES@FA_SOURCE L ON H.JE_HEADER_ID = L.JE_HEADER_ID 
		JOIN APPS.GL_JE_BATCHES@FA_SOURCE B ON B.JE_BATCH_ID=H.JE_BATCH_ID
		JOIN APPS.GL_CODE_COMBINATIONS@FA_SOURCE CC ON CC.CODE_COMBINATION_ID=L.CODE_COMBINATION_ID 
		JOIN APPS.GL_JE_SOURCES_TL@FA_SOURCE S ON S.JE_SOURCE_NAME=H.JE_SOURCE
		JOIN APPS.FND_USER@FA_SOURCE U ON U.USER_ID=H.CREATED_BY 
	    LEFT JOIN MG_COMP_LOC_MAPPING@RMS MG ON CC.SEGMENT2 = MG.COA_SITE
		LEFT JOIN GROUPS@RMS G ON TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = G.GROUP_NO
	WHERE H.ACTUAL_FLAG=\'A\' AND CC.SEGMENT5 IN (\'502000\') AND CC.SEGMENT1 = \'240\' AND H.PERIOD_NAME = \'' . $period . '\' 
		AND H.ACCRUAL_REV_STATUS IS NULL AND H.STATUS=\'P\' AND S.JE_SOURCE_NAME IN (\'Manual\',\'Payables\')
		--H.DEFAULT_EFFECTIVE_DATE > \'01-JUN-13\' --BETWEEN \'01-JAN-10\' AND \'31-DEC-10\'--AND H.POSTED_DATE BETWEEN \'06-APR-2014\' AND \'12-MAY-2014\'
	GROUP BY SUBSTR(H.PERIOD_NAME,1, 3), MG.RMS_LOC_NO, CASE WHEN TRANSLATE(CC.SEGMENT4, \'1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\', \'1\') = 0000 THEN 0 WHEN G.GROUP_NO IS NULL THEN 999 ELSE G.GROUP_NO END)CON502000
	ON SGD.PER = CON502000.PER AND SGD.STORE = CON502000.STORE AND SGD.GROUP_NO = CON502000.DEPARTMENT

GROUP BY 
SGD.PER, 
CASE 
	WHEN (SGD.STORE IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') AND ( (SGD.MERCH_GROUP_CODE = \'DS\') OR (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) OR  (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) ) ) THEN \'1\'
	WHEN (SGD.STORE IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') AND ( (SGD.MERCH_GROUP_CODE = \'SU\') OR (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) OR  (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) ) ) THEN \'2\'
	WHEN SGD.STORE IN (\'2223\') THEN \'1\'
	WHEN SGD.STORE IN (\'2013\', \'2012\', \'4004\', \'3009\', \'3010\', \'3011\', \'4002\', \'3012\') THEN \'2\'
	WHEN SGD.STORE IN (\'2005\', \'2008\', \'2010\', \'2011\', \'6001\', \'6002\', \'6003\', \'6004\', \'6005\', \'6012\', \'6009\', \'6010\', \'6011\') THEN \'4\'
	WHEN SGD.STORE IN (\'3001\', \'3007\', \'4003\', \'3002\', \'3003\', \'3004\', \'3005\', \'3006\') THEN \'2\'
	ELSE TO_CHAR(SGD.STORE_FORMAT) END, 
CASE 
	WHEN (SGD.STORE IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') AND ( (SGD.MERCH_GROUP_CODE = \'DS\') OR (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) OR  (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) ) ) THEN \'Department Store\'
	WHEN (SGD.STORE IN (\'2001\', \'2002\', \'2003\', \'2004\', \'2006\', \'2007\', \'2009\') AND ( (SGD.MERCH_GROUP_CODE = \'SU\') OR (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) OR  (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) ) ) THEN \'Supermarket\'
	WHEN SGD.STORE IN (\'2223\') THEN \'Department Store\'
	WHEN SGD.STORE IN (\'2013\', \'2012\', \'4004\', \'3009\', \'3010\', \'3011\', \'4002\', \'3012\') THEN \'Supermarket\'
	WHEN SGD.STORE IN (\'2005\', \'2008\', \'2010\', \'2011\', \'6001\', \'6002\', \'6003\', \'6004\', \'6005\', \'6012\', \'6009\', \'6010\', \'6011\') THEN \'Hypermarket\'
	WHEN SGD.STORE IN (\'3001\', \'3007\', \'4003\', \'3002\', \'3003\', \'3004\', \'3005\', \'3006\') THEN \'Supermarket\'
	ELSE SGD.STORE_FORMAT_DESC END,	
CASE WHEN TO_CHAR(SGD.STORE) = \'4002\' THEN \'2001W\' 
	ELSE TO_CHAR(SGD.STORE) END,
SGD.STORE_NAME, 
CASE WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) THEN \'Z_OT\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) THEN \'SU\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) THEN \'SU\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) THEN \'DS\' 
	ELSE SGD.MERCH_GROUP_CODE END,
CASE WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 9000) THEN \'OTHERS\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8500) THEN \'SUPERMARKET\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO = 8040) THEN \'SUPERMARKET\'     
	WHEN (SGD.MERCH_GROUP_CODE = \'OT\' AND SGD.DIVISION = 8000 AND SGD.GROUP_NO != 8040) THEN \'DEPARTMENT STORE\' 
	ELSE SGD.MERCH_GROUP_DESC END,
SGD.ATTRIB1, 
SGD.ATTRIB2, 
SGD.DIVISION, 
SGD.DIV_NAME, 
SGD.GROUP_NO, 
SGD.GROUP_NAME,
SGD.NEW_FLG,
SGD.MATURED_FLG
)
WHERE TEST_AMOUNT <> 0
'
;

my $sth = $dbh->prepare ($test);
$sth->execute;
 
$sth->finish();
$dbh->disconnect;

}

sub mail {

my $cc;
my $bcc;
GetOptions( 'cc=s' => \$cc, 'bcc=s' => \$bcc, );

my( $to, $subject, $from ) = @ARGV;

# $to = 'kent.mamalias@metrogaisano.com';

#$to = 'rex.cabanilla@metrogaisano.com, annalyn.conde@metrogaisano.com';

$cc = 'lea.gonzaga@metrogaisano.com';

$from = 'Report Mailer<report.mailer@metrogaisano.com>';		

$subject = 'Margin & Sales Performance Data';

my %mail = (
    To   => $to,
	From  => $from,
    Subject => $subject,
	'content-type' => "multipart/alternative; boundary=\"$boundary\""
);

$mail{smtp} = '10.190.1.30';
$mail{Cc} = $cc if $cc;
$mail{Bcc} = $bcc if $bcc;

my $boundary = "====" . time . "====";

$mail{'content-type'} = qq(multipart/mixed; boundary="$boundary");

$boundary = '--'.$boundary;

$mail{body} = 
<<END_OF_BODY;
$boundary
Content-Type: text/html; charset="iso-8859-1"

<html>
Hi All, <br> <br>
Margin & Sales Performance Data for Visualization and Analysis is updated, as of $as_of .<br> <br>
Period of $period, is updated .<br> <br>
If you need assistance, kindly email arcbi.support&#64;metrogaisano.com .<br> <br>

Regards, <br>
ARC BI Support <p>
</html>

$boundary--
END_OF_BODY

sendmail(%mail) or die $Mail::Sendmail::error;

print "Sendmail Log says:\n$Mail::Sendmail::log\n";

}








